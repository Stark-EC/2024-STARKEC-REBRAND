!(function(F){var B={};function s(Q){var U;return(B[Q]||(U=B[Q]={i:Q,l:!1,exports:{}},F[Q].call(U.exports,U,U.exports,s),U.l=!0,U)).exports}s.m=F,s.c=B,s.d=function(Q,U,F){s.o(Q,U)||Object.defineProperty(Q,U,{enumerable:!0,get:F})},s.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},s.t=function(U,Q){if(1&Q&&(U=s(U)),8&Q)return U;if(4&Q&&"object"==typeof U&&U&&U.__esModule)return U;var F=Object.create(null);if(s.r(F),Object.defineProperty(F,"default",{enumerable:!0,value:U}),2&Q&&"string"!=typeof U)for(var B in U)s.d(F,B,function(Q){return U[Q]}.bind(null,B));return F},s.n=function(Q){var U=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return s.d(U,"a",U),U},s.o=function(Q,U){return Object.prototype.hasOwnProperty.call(Q,U)},s.p="/",s(s.s=702)})({0:function(module,exports){eval('function _typeof(o) {\n  "@babel/helpers - typeof";\n\n  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanM/NzAzNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gKG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvO1xuICB9IDogZnVuY3Rpb24gKG8pIHtcbiAgICByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbztcbiAgfSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzKSwgX3R5cGVvZihvKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n')},634:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);\n\n/* eslint-disable */\nif (window.vidyardEmbed === undefined) {\n  window.vidyardEmbed = function (e) {\n    var t = {};\n    function n(r) {\n      if (t[r]) return t[r].exports;\n      var i = t[r] = {\n        i: r,\n        l: !1,\n        exports: {}\n      };\n      return e[r].call(i.exports, i, i.exports, n), i.l = !0, i.exports;\n    }\n    return n.m = e, n.c = t, n.d = function (e, t, r) {\n      n.o(e, t) || Object.defineProperty(e, t, {\n        enumerable: !0,\n        get: r\n      });\n    }, n.r = function (e) {\n      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: "Module"\n      }), Object.defineProperty(e, "__esModule", {\n        value: !0\n      });\n    }, n.t = function (e, t) {\n      if (1 & t && (e = n(e)), 8 & t) return e;\n      if (4 & t && "object" == _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e) && e && e.__esModule) return e;\n      var r = Object.create(null);\n      if (n.r(r), Object.defineProperty(r, "default", {\n        enumerable: !0,\n        value: e\n      }), 2 & t && "string" != typeof e) for (var i in e) n.d(r, i, function (t) {\n        return e[t];\n      }.bind(null, i));\n      return r;\n    }, n.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return n.d(t, "a", t), t;\n    }, n.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, n.p = "https://play.vidyard.com/embed/", n(n.s = 6);\n  }([function (e, t) {\n    var n;\n    n = function () {\n      return this;\n    }();\n    try {\n      n = n || Function("return this")() || (0, eval)("this");\n    } catch (e) {\n      "object" == (typeof window === "undefined" ? "undefined" : _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(window)) && (n = window);\n    }\n    e.exports = n;\n  }, function (e, t, n) {\n    var r, i, o;\n    !function (a, s) {\n      "use strict";\n\n      i = [n(7)], void 0 === (o = "function" == typeof (r = function r(e) {\n        var t = /(^|@)\\S+\\:\\d+/,\n          n = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m,\n          r = /^(eval@)?(\\[native code\\])?$/;\n        return {\n          parse: function parse(e) {\n            if (void 0 !== e.stacktrace || void 0 !== e["opera#sourceloc"]) return this.parseOpera(e);\n            if (e.stack && e.stack.match(n)) return this.parseV8OrIE(e);\n            if (e.stack) return this.parseFFOrSafari(e);\n            throw new Error("Cannot parse given Error object");\n          },\n          extractLocation: function extractLocation(e) {\n            if (-1 === e.indexOf(":")) return [e];\n            var t = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/.exec(e.replace(/[\\(\\)]/g, ""));\n            return [t[1], t[2] || void 0, t[3] || void 0];\n          },\n          parseV8OrIE: function parseV8OrIE(t) {\n            var r = t.stack.split("\\n").filter(function (e) {\n              return !!e.match(n);\n            }, this);\n            return r.map(function (t) {\n              t.indexOf("(eval ") > -1 && (t = t.replace(/eval code/g, "eval").replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, ""));\n              var n = t.replace(/^\\s+/, "").replace(/\\(eval code/g, "(").split(/\\s+/).slice(1),\n                r = this.extractLocation(n.pop()),\n                i = n.join(" ") || void 0,\n                o = ["eval", "<anonymous>"].indexOf(r[0]) > -1 ? void 0 : r[0];\n              return new e({\n                functionName: i,\n                fileName: o,\n                lineNumber: r[1],\n                columnNumber: r[2],\n                source: t\n              });\n            }, this);\n          },\n          parseFFOrSafari: function parseFFOrSafari(t) {\n            var n = t.stack.split("\\n").filter(function (e) {\n              return !e.match(r);\n            }, this);\n            return n.map(function (t) {\n              if (t.indexOf(" > eval") > -1 && (t = t.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ":$1")), -1 === t.indexOf("@") && -1 === t.indexOf(":")) return new e({\n                functionName: t\n              });\n              var n = /((.*".+"[^@]*)?[^@]*)(?:@)/,\n                r = t.match(n),\n                i = r && r[1] ? r[1] : void 0,\n                o = this.extractLocation(t.replace(n, ""));\n              return new e({\n                functionName: i,\n                fileName: o[0],\n                lineNumber: o[1],\n                columnNumber: o[2],\n                source: t\n              });\n            }, this);\n          },\n          parseOpera: function parseOpera(e) {\n            return !e.stacktrace || e.message.indexOf("\\n") > -1 && e.message.split("\\n").length > e.stacktrace.split("\\n").length ? this.parseOpera9(e) : e.stack ? this.parseOpera11(e) : this.parseOpera10(e);\n          },\n          parseOpera9: function parseOpera9(t) {\n            for (var n = /Line (\\d+).*script (?:in )?(\\S+)/i, r = t.message.split("\\n"), i = [], o = 2, a = r.length; o < a; o += 2) {\n              var s = n.exec(r[o]);\n              s && i.push(new e({\n                fileName: s[2],\n                lineNumber: s[1],\n                source: r[o]\n              }));\n            }\n            return i;\n          },\n          parseOpera10: function parseOpera10(t) {\n            for (var n = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i, r = t.stacktrace.split("\\n"), i = [], o = 0, a = r.length; o < a; o += 2) {\n              var s = n.exec(r[o]);\n              s && i.push(new e({\n                functionName: s[3] || void 0,\n                fileName: s[2],\n                lineNumber: s[1],\n                source: r[o]\n              }));\n            }\n            return i;\n          },\n          parseOpera11: function parseOpera11(n) {\n            var r = n.stack.split("\\n").filter(function (e) {\n              return !!e.match(t) && !e.match(/^Error created at/);\n            }, this);\n            return r.map(function (t) {\n              var n,\n                r = t.split("@"),\n                i = this.extractLocation(r.pop()),\n                o = r.shift() || "",\n                a = o.replace(/<anonymous function(: (\\w+))?>/, "$2").replace(/\\([^\\)]*\\)/g, "") || void 0;\n              o.match(/\\(([^\\)]*)\\)/) && (n = o.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, "$1"));\n              var s = void 0 === n || "[arguments not available]" === n ? void 0 : n.split(",");\n              return new e({\n                functionName: a,\n                args: s,\n                fileName: i[0],\n                lineNumber: i[1],\n                columnNumber: i[2],\n                source: t\n              });\n            }, this);\n          }\n        };\n      }) ? r.apply(t, i) : r) || (e.exports = o);\n    }();\n  }, function (e, t, n) {\n    var r;\n    window, r = function r() {\n      return function (e) {\n        var t = {};\n        function n(r) {\n          if (t[r]) return t[r].exports;\n          var i = t[r] = {\n            i: r,\n            l: !1,\n            exports: {}\n          };\n          return e[r].call(i.exports, i, i.exports, n), i.l = !0, i.exports;\n        }\n        return n.m = e, n.c = t, n.d = function (e, t, r) {\n          n.o(e, t) || Object.defineProperty(e, t, {\n            enumerable: !0,\n            get: r\n          });\n        }, n.r = function (e) {\n          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n            value: "Module"\n          }), Object.defineProperty(e, "__esModule", {\n            value: !0\n          });\n        }, n.t = function (e, t) {\n          if (1 & t && (e = n(e)), 8 & t) return e;\n          if (4 & t && "object" == _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e) && e && e.__esModule) return e;\n          var r = Object.create(null);\n          if (n.r(r), Object.defineProperty(r, "default", {\n            enumerable: !0,\n            value: e\n          }), 2 & t && "string" != typeof e) for (var i in e) n.d(r, i, function (t) {\n            return e[t];\n          }.bind(null, i));\n          return r;\n        }, n.n = function (e) {\n          var t = e && e.__esModule ? function () {\n            return e.default;\n          } : function () {\n            return e;\n          };\n          return n.d(t, "a", t), t;\n        }, n.o = function (e, t) {\n          return Object.prototype.hasOwnProperty.call(e, t);\n        }, n.p = "", n(n.s = 0);\n      }([function (e, t, n) {\n        "use strict";\n\n        n.r(t);\n        var r = n(1);\n        t.default = r.default;\n      }, function (e, t, n) {\n        "use strict";\n\n        n.r(t), n.d(t, "default", function () {\n          return o;\n        });\n        var r = n(2),\n          i = n(3);\n        function o(e, t, n) {\n          var o;\n          void 0 === t && (t = [1, 25, 50, 75, 90]);\n          var a = !0,\n            s = [];\n          try {\n            o = n ? [n] : new Vidyard.players();\n          } catch (e) {\n            throw new Error("The Vidyard Player API must be loaded before this script can execute");\n          }\n          var u = Object(r.removeDuplicates)(t);\n          for (var c in o) o.hasOwnProperty(c) && c.length > 0 && (s.push(Object(i.default)(o[c], e, u)), a = !1);\n          return a && window.console && console.log("No Vidyard Players found. (include this script below player embed codes)", "warn"), s;\n        }\n      }, function (e, t, n) {\n        "use strict";\n\n        n.r(t), n.d(t, "removeDuplicates", function () {\n          return r;\n        });\n        var r = function r(e) {\n          e.sort(function (e, t) {\n            return e < t ? -1 : e > t ? 1 : 0;\n          });\n          for (var t = 0; t < e.length;) e[t] === e[t + 1] ? e.splice(t + 1, 1) : t += 1;\n          return e;\n        };\n      }, function (e, t, n) {\n        "use strict";\n\n        n.r(t), n.d(t, "default", function () {\n          return o;\n        });\n        var r = n(4),\n          i = n(5);\n        function o(e, t, n) {\n          var o = [],\n            a = !1,\n            s = e.getCurrentChapter();\n          function u() {\n            var t = e.getCurrentChapter();\n            return o[t] = {\n              interval: [0, 0],\n              intervals: r.default.create(),\n              thresholds: n.slice()\n            }, o[t];\n          }\n          var c = function c(n) {\n              var c = e.getCurrentChapter();\n              s === c ? function (t, n) {\n                var s,\n                  c,\n                  l,\n                  d = 0,\n                  f = e.getCurrentChapter();\n                if (void 0 === o[f] && u(), !(a || "object" != _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e.metadata) || t <= o[f].interval[1])) {\n                  if (o[f].interval[1] = t, c = o[f].intervals.insertOne(o[f].interval), (s = Object(i.default)(o[f].intervals)).length + 1 < o[f].intervals.length) for (o[f].intervals = r.default.create(), l = 0; l < s.length; ++l) d += s[l][1] - s[l][0], o[f].intervals.insertOne(s[l]);else {\n                    for (l = 0; l < s.length; ++l) d += s[l][1] - s[l][0];\n                    o[f].intervals.remove(c);\n                  }\n                  d = "number" == typeof e.metadata.chapters_attributes[f].video_attributes.length_in_milliseconds ? d / e.metadata.chapters_attributes[f].video_attributes.length_in_milliseconds * 1e5 : d / e.metadata.chapters_attributes[f].video_attributes.length_in_seconds * 100, Math.round(d) >= o[f].thresholds[0] && n({\n                    chapter: f,\n                    event: o[f].thresholds.shift(),\n                    player: e\n                  });\n                }\n              }(n, t) : s = c;\n            },\n            l = function l(t) {\n              var n = e.getCurrentChapter();\n              void 0 !== o[n] && (!1 === a && (o[n].interval[1] = t.start), a = !0);\n            },\n            d = function d(t) {\n              var n = t,\n                r = e.getCurrentChapter();\n              void 0 === o[r] && u(), o[r].intervals.insertOne(o[r].interval.slice(0)), o[r].interval[0] = n, o[r].interval[1] = n, a = !1;\n            },\n            f = function f(e) {\n              o[e].interval = [0, 0], a = !1;\n            };\n          return e.on("timeupdate", c), e.on("beforeSeek", l), e.on("play", d), e.on("chapterComplete", f), {\n            player: e,\n            removeEventListeners: function removeEventListeners() {\n              e.off("beforeSeek", l), e.off("chapterComplete", f), e.off("play", d), e.off("timeupdate", c), e = null, o = [];\n            }\n          };\n        }\n      }, function (e, t, n) {\n        "use strict";\n\n        function r() {\n          this._compare = function (e, t) {\n            return e[0] < t[0] ? -1 : e[0] > t[0] ? 1 : e[1] < t[1] ? -1 : e[1] > t[1] ? 1 : 0;\n          };\n        }\n        n.r(t), n.d(t, "default", function () {\n          return r;\n        }), r.create = function () {\n          return new r();\n        }, r.prototype = new Array(), r.prototype.constructor = Array.prototype.constructor, r.prototype.insertOne = function (e) {\n          var t = this.bsearch(e);\n          return this.splice(t + 1, 0, e), t + 1;\n        }, r.prototype.remove = function (e) {\n          return this.splice(e, 1), this;\n        }, r.prototype.bsearch = function (e) {\n          if (!this.length) return -1;\n          for (var t, n, r, i = 0, o = this.length; o - i > 1;) {\n            if (n = this[t = Math.floor((i + o) / 2)], 0 === (r = this._compare(e, n))) return t;\n            r > 0 ? i = t : o = t;\n          }\n          return 0 === i && this._compare(this[0], e) > 0 ? -1 : i;\n        };\n      }, function (e, t, n) {\n        "use strict";\n\n        function r(e) {\n          var t,\n            n = null,\n            r = [];\n          for (t = 0; t < e.length; ++t) !n || n[1] < e[t][0] ? (n && r.push(n), n = [e[t][0], e[t][1]]) : e[t][1] > n[1] && (n[1] = e[t][1]);\n          return n && r.push(n), r;\n        }\n        n.r(t), n.d(t, "default", function () {\n          return r;\n        });\n      }]);\n    }, e.exports = r();\n  }, function (e, t, n) {\n    "use strict";\n\n    Object.defineProperty(t, "__esModule", {\n      value: !0\n    });\n    var r = function () {\n      function e(e) {\n        var t = void 0 === e ? {\n            emit: !1,\n            logger: console.log\n          } : e,\n          n = t.emit,\n          r = t.logger;\n        this.emit = n, this.externalLogger = r, this.buffer = [], this.customLevel = {}, this.error = this.setLevel(1), this.warn = this.setLevel(2), this.info = this.setLevel(3), this.log = this.setLevel(4);\n      }\n      return e.prototype.getLogs = function (e) {\n        return "function" == typeof e ? this.buffer.filter(function (t) {\n          return t.level === e.level;\n        }) : e ? this.buffer.filter(function (t) {\n          return t.level === e;\n        }) : this.buffer;\n      }, e.prototype.setLevel = function (e) {\n        var t = this,\n          n = function n() {\n            for (var n = [], r = 0; r < arguments.length; r++) n[r] = arguments[r];\n            var i = {\n              level: e,\n              time: Date.now(),\n              msg: n.join(" ")\n            };\n            t.buffer.push(i), t.emit && t.externalLogger(i);\n          };\n        return n.level = e, this.customLevel[e] = n, n;\n      }, e;\n    }();\n    t.default = r;\n  }, function (e, t, n) {\n    "use strict";\n\n    t.a = function (e) {\n      var t = this.constructor;\n      return this.then(function (n) {\n        return t.resolve(e()).then(function () {\n          return n;\n        });\n      }, function (n) {\n        return t.resolve(e()).then(function () {\n          return t.reject(n);\n        });\n      });\n    };\n  }, function (e, t, n) {\n    "use strict";\n\n    (function (e) {\n      var r = n(4),\n        i = setTimeout;\n      function o() {}\n      function a(e) {\n        if (!(this instanceof a)) throw new TypeError("Promises must be constructed via new");\n        if ("function" != typeof e) throw new TypeError("not a function");\n        this._state = 0, this._handled = !1, this._value = void 0, this._deferreds = [], d(e, this);\n      }\n      function s(e, t) {\n        for (; 3 === e._state;) e = e._value;\n        0 !== e._state ? (e._handled = !0, a._immediateFn(function () {\n          var n = 1 === e._state ? t.onFulfilled : t.onRejected;\n          if (null !== n) {\n            var r;\n            try {\n              r = n(e._value);\n            } catch (e) {\n              return void c(t.promise, e);\n            }\n            u(t.promise, r);\n          } else (1 === e._state ? u : c)(t.promise, e._value);\n        })) : e._deferreds.push(t);\n      }\n      function u(e, t) {\n        try {\n          if (t === e) throw new TypeError("A promise cannot be resolved with itself.");\n          if (t && ("object" == _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(t) || "function" == typeof t)) {\n            var n = t.then;\n            if (t instanceof a) return e._state = 3, e._value = t, void l(e);\n            if ("function" == typeof n) return void d((r = n, i = t, function () {\n              r.apply(i, arguments);\n            }), e);\n          }\n          e._state = 1, e._value = t, l(e);\n        } catch (t) {\n          c(e, t);\n        }\n        var r, i;\n      }\n      function c(e, t) {\n        e._state = 2, e._value = t, l(e);\n      }\n      function l(e) {\n        2 === e._state && 0 === e._deferreds.length && a._immediateFn(function () {\n          e._handled || a._unhandledRejectionFn(e._value);\n        });\n        for (var t = 0, n = e._deferreds.length; t < n; t++) s(e, e._deferreds[t]);\n        e._deferreds = null;\n      }\n      function d(e, t) {\n        var n = !1;\n        try {\n          e(function (e) {\n            n || (n = !0, u(t, e));\n          }, function (e) {\n            n || (n = !0, c(t, e));\n          });\n        } catch (e) {\n          if (n) return;\n          n = !0, c(t, e);\n        }\n      }\n      a.prototype.catch = function (e) {\n        return this.then(null, e);\n      }, a.prototype.then = function (e, t) {\n        var n = new this.constructor(o);\n        return s(this, new function (e, t, n) {\n          this.onFulfilled = "function" == typeof e ? e : null, this.onRejected = "function" == typeof t ? t : null, this.promise = n;\n        }(e, t, n)), n;\n      }, a.prototype.finally = r.a, a.all = function (e) {\n        return new a(function (t, n) {\n          if (!e || void 0 === e.length) throw new TypeError("Promise.all accepts an array");\n          var r = Array.prototype.slice.call(e);\n          if (0 === r.length) return t([]);\n          var i = r.length;\n          function o(e, a) {\n            try {\n              if (a && ("object" == _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(a) || "function" == typeof a)) {\n                var s = a.then;\n                if ("function" == typeof s) return void s.call(a, function (t) {\n                  o(e, t);\n                }, n);\n              }\n              r[e] = a, 0 == --i && t(r);\n            } catch (e) {\n              n(e);\n            }\n          }\n          for (var a = 0; a < r.length; a++) o(a, r[a]);\n        });\n      }, a.resolve = function (e) {\n        return e && "object" == _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e) && e.constructor === a ? e : new a(function (t) {\n          t(e);\n        });\n      }, a.reject = function (e) {\n        return new a(function (t, n) {\n          n(e);\n        });\n      }, a.race = function (e) {\n        return new a(function (t, n) {\n          for (var r = 0, i = e.length; r < i; r++) e[r].then(t, n);\n        });\n      }, a._immediateFn = "function" == typeof e && function (t) {\n        e(t);\n      } || function (e) {\n        i(e, 0);\n      }, a._unhandledRejectionFn = function (e) {\n        "undefined" != typeof console && console && console.warn("Possible Unhandled Promise Rejection:", e);\n      }, t.a = a;\n    }).call(this, n(15).setImmediate);\n  }, function (e, t, n) {\n    "use strict";\n\n    n.r(t);\n    var r,\n      i,\n      o,\n      a = n(5),\n      s = function s(e) {\n        return "function" == typeof e;\n      },\n      u = (i = (void 0 === r ? window : r).Promise) && i.all && i.race && i.resolve && i.reject && s(i) && s(i.all) && s(i.race) && s(i.resolve) && s(i.reject) ? window.Promise : a.a,\n      c = function c(e, t, n, r) {\n        return void 0 === r && (r = window), window.addEventListener ? r.addEventListener(e, n, !1) : window.attachEvent && r.attachEvent(t, n), {\n          eventName: e,\n          handler: n,\n          element: r\n        };\n      },\n      l = function l(e, t, n) {\n        void 0 === n && (n = window), n.removeEventListener ? n.removeEventListener(e, t, !1) : n.detachEvent ? n.detachEvent("on" + e, t) : n["on" + e] = null;\n      },\n      d = function d(e, t) {\n        if (t.indexOf) return t.indexOf(e);\n        for (var n = 0; n < t.length; n++) if (t[n] === e) return n;\n        return -1;\n      },\n      f = function f(e, t, n) {\n        if (void 0 === t && (t = "*"), void 0 === n && (n = document), "function" == typeof document.getElementsByClassName) return n.getElementsByClassName(e);\n        for (var r = [], i = new RegExp("(^| )" + e + "( |$)"), o = 0, a = _(n.getElementsByTagName(t)); o < a.length; o++) {\n          var s = a[o];\n          i.test(s.className) && r.push(s);\n        }\n        return r;\n      },\n      p = function p(e, t) {\n        void 0 === t && (t = 0);\n        var n = x(e);\n        return 0 !== n.height || 0 !== n.width ? (n.height / (n.width + t) * 100).toFixed(2) : 56.25.toFixed(2);\n      },\n      h = function h(e, t) {\n        void 0 === t && (t = "log"), window.console && "function" == typeof window.console[t] && console[t](e);\n      },\n      v = function v(e, t) {\n        for (var n = 0, r = e; n < r.length; n++) {\n          var i = r[n];\n          if (!0 === t(i)) return i;\n        }\n      },\n      y = function y(e, t) {\n        return v(e, function (e) {\n          return e === t;\n        });\n      },\n      m = function m(e) {\n        var t = !1;\n        return function () {\n          for (var n = [], r = 0; r < arguments.length; r++) n[r] = arguments[r];\n          t || (e && e.apply(void 0, n), t = !0);\n        };\n      },\n      g = function g(e) {\n        return function (t) {\n          32 !== t.keyCode && 13 !== t.keyCode || e(t);\n        };\n      },\n      b = function b(e) {\n        return function (t) {\n          27 === t.keyCode && e(t);\n        };\n      },\n      w = function w() {\n        return document.currentScript ? document.currentScript : v(_(document.getElementsByTagName("script")), function (e) {\n          return e.src && (null !== e.src.match("vidyard-embed-code.js") || null !== e.src.match(/v4(\\.umd)?\\.js/));\n        });\n      },\n      x = function x(e) {\n        if (e.naturalWidth) return {\n          width: e.naturalWidth,\n          height: e.naturalHeight\n        };\n        var t = new Image();\n        return t.src = e.src, {\n          width: t.width,\n          height: t.height\n        };\n      },\n      _ = function _(e) {\n        return Array.prototype.slice.call(e);\n      },\n      k = function k(e) {\n        return new u(function (t, n) {\n          try {\n            t(JSON.parse(e));\n          } catch (e) {\n            n(e);\n          }\n        });\n      },\n      E = "4.2.14",\n      C = /vidyard\\.com\\/embed\\/v4/,\n      O = {\n        setPlaybackURL: function setPlaybackURL(e) {\n          return o = e;\n        },\n        getPlaybackURL: function getPlaybackURL() {\n          var e = w(),\n            t = e ? e.getAttribute("data-playbackurl") : null;\n          return o || window.VIDYARD_PLAYBACK_URL || t || "play.vidyard.com";\n        }\n      },\n      I = O.setPlaybackURL,\n      j = O.getPlaybackURL,\n      T = function T() {\n        return "https://" + j() + "/v4/";\n      },\n      L = function L(e, t, n) {\n        if (t && n) if (window.postMessage && n.contentWindow) n.contentWindow.postMessage(JSON.stringify(e), t);else {\n          if ("associateVisitor" !== e.event) return;\n          var r = e.event + "," + e.data.type + "," + e.data.value + "|",\n            i = n.src;\n          -1 === i.indexOf("#") && (i += "#"), i += r, n.src = i;\n        }\n      },\n      S = function S(e) {\n        return function (t) {\n          var n = function (e) {\n            if ("string" != typeof e.data || "" === e.data) return;\n            try {\n              var t = JSON.parse(e.data),\n                n = f("vidyard-iframe-" + t.uuid, "iframe")[0],\n                r = n ? n.contentWindow : null,\n                i = r === e.source,\n                o = "string" == typeof t.event;\n              if (!i || !o) return;\n              return t;\n            } catch (e) {\n              return void h("Invalid postMessage received", "warn");\n            }\n          }(t);\n          n && e(n);\n        };\n      };\n    var N = function N() {\n        document.dispatchEvent(function (e, t) {\n          if ("function" == typeof window.CustomEvent) return new window.CustomEvent(e, {\n            detail: t\n          });\n          if ("function" == typeof document.createEvent) {\n            var n = document.createEvent("CustomEvent");\n            return n.initCustomEvent(e, !1, !1, t), n;\n          }\n        }("onVidyardAPI", window.VidyardV4));\n      },\n      P = m(function () {\n        window.onVidyardAPI && "function" == typeof window.onVidyardAPI && window.onVidyardAPI(window.VidyardV4), N();\n      }),\n      V = {},\n      A = function A(e) {\n        var t = e.url,\n          n = e.uuid,\n          r = e.success,\n          i = function (e) {\n            var t = e.error,\n              n = e.url,\n              r = e.uuid,\n              i = document.createElement("script");\n            return i.type = "application/javascript", i.onerror = t, i.src = n + "?callback=window.VidyardV4.jsonp." + r + ".done", document.body.appendChild(i), i;\n          }({\n            error: e.error,\n            url: t,\n            uuid: n\n          }),\n          o = m(function (e) {\n            r(e), i.parentNode.removeChild(i);\n          });\n        V[n] = V[n] || [], V[n].push(o), window.VidyardV4.jsonp[n] = {\n          done: function done(e) {\n            V[n].forEach(function (t) {\n              return t(e);\n            });\n          }\n        };\n      },\n      R = function R(e, t) {\n        var n = document.createElement("div");\n        n.className = "vidyard-player-container", n.setAttribute("uuid", e);\n        var r = n.style;\n        return r.margin = "auto", r.width = "100%", r.height = "auto", r.overflow = "hidden", r.display = "block", "inline" === t.type && (r.maxWidth = t.width ? t.width + "px" : "", r.maxHeight = t.height ? t.height + "px" : ""), n;\n      };\n    function U(e) {\n      for (var t, n, r = this, i = function i() {\n          if ((t = e.attributes[a]).name.indexOf("data-") < 0) return "continue";\n          if ("vydata" === (n = function (e) {\n            return e.name.replace("data-", "");\n          }(t))) {\n            var i = function (e, t) {\n              var n = {};\n              try {\n                var r = JSON.parse(decodeURIComponent(e));\n                Object.keys(r).forEach(function (e) {\n                  var i = t + "[" + e + "]";\n                  n[i] = r[e];\n                });\n              } catch (e) {\n                h("Invalid " + t + " payload.", "warn");\n              }\n              return n;\n            }(t.value, "vydata");\n            return Object.keys(i).forEach(function (e) {\n              r[e] = i[e];\n            }), "continue";\n          }\n          o[n] = t.value;\n        }, o = this, a = 0; a < e.attributes.length; a++) i();\n      "inline" !== this.type && "lightbox" !== this.type && (h("Invalid Vidyard player embed type, defaulting to inline.", "warn"), this.type = "inline"), this.v = E, this.disable_popouts = 1;\n      var s = M("vycustom_id");\n      this.custom_id = this.custom_id || s;\n      var u = M("vyemail");\n      this.vyemail = this.vyemail || u;\n      var c = M("vysfid");\n      this.vysfid = this.vysfid || c;\n      var l = M("vyetoken");\n      this.vyetoken = this.vyetoken || l;\n      var d = M("vyac"),\n        f = M("vyplayer");\n      d && f && (f === this.uuid ? this.access_code = d : h("Invalid Vidyard player access code.", "warn"));\n    }\n    function M(e) {\n      e = e.replace(/[\\[]/, "\\\\[").replace(/[\\]]/, "\\\\]");\n      var t = new RegExp("[\\\\?&]" + e + "=([^&#]*)").exec(window.location.search);\n      if (null !== t) return t[1];\n    }\n    U.prototype.toQueryString = function () {\n      var e,\n        t = "?";\n      for (e in this) this.hasOwnProperty(e) && "height" !== e && "uuid" !== e && "width" !== e && void 0 !== this[e] && (t += "?" !== t ? "&" : "", t += encodeURIComponent(e) + "=" + encodeURIComponent(this[e]));\n      return "?" === t ? "" : t;\n    };\n    var F = U,\n      B = {};\n    B.show = function (e, t, n) {\n      if (e && !document.getElementById("vidyard-overlay")) {\n        var r,\n          i,\n          o = (r = e, (i = {}).backerElement = document.createElement("div"), i.backerElement.className = "vidyard-lightbox-content-backer", i.containerElement = document.createElement("div"), i.containerElement.innerHTML = r, i.containingDiv = i.containerElement.getElementsByTagName("div")[0], i.containingDiv.style.position = "absolute", i.containingDiv.style.height = "100%", i.containingDiv.style.width = "100%", i.containingDiv.style.zIndex = "2", i.iframe = i.containerElement.getElementsByTagName("iframe")[0], i.iframe.parentNode.style.position = "static", i.iframe.parentNode.style.paddingBottom = 0, i.iframe.style.opacity = "1", setTimeout(function () {\n            i.backerElement.style.opacity = "1", i.backerElement.style.filter = "alpha(opacity=100)";\n          }, 0), i),\n          a = q(n),\n          s = function (e) {\n            var t = f("vidyard-lightbox-image", "img", e)[0].cloneNode();\n            return t.className = "", t.id = "vidyard-popbox-constraint", t.alt = "", t.setAttribute("aria-hidden", "true"), t;\n          }(t);\n        return a.popbox.appendChild(o.backerElement), a.popbox.appendChild(o.containingDiv), a.popbox.appendChild(s), document.body.appendChild(a.overlayWrapper), a.closeContainer.focus(), setTimeout(function () {\n          a.overlayWrapper.style.opacity = "1", a.overlayWrapper.style.filter = "alpha(opacity=100)";\n        }, 0), {\n          container: o,\n          lightbox: a\n        };\n      }\n    }, B.remove = function (e) {\n      var t = document.getElementById("vidyard-content-fixed"),\n        n = document.getElementById("vidyard-overlay"),\n        r = document.getElementById("vidyard-overlay-wrapper"),\n        i = document.getElementById("vidyard-popbox");\n      if (t && n && r && i) {\n        e && Object.keys(e).forEach(function (t) {\n          (0, e[t])();\n        }), r.style.opacity = "0", r.style.filter = "alpha(opacity=0)";\n        setTimeout(function () {\n          r.parentNode.removeChild(r);\n        }, 500);\n      }\n    }, B.makeIframeVisible = function (e) {\n      e.style.opacity = "1";\n    };\n    var D = B,\n      q = function q(e) {\n        var t = {};\n        return t.overlay = document.createElement("div"), t.contentFixed = document.createElement("div"), t.popbox = document.createElement("div"), t.overlayWrapper = document.createElement("div"), t.closeContainer = function () {\n          var e = {};\n          e.closeContainer = document.createElement("div"), e.closeButton = document.createElement("div"), e.closeContainer.className = "vidyard-close-container", e.closeContainer.setAttribute("aria-label", "Close Player"), e.closeContainer.setAttribute("role", "button"), e.closeContainer.setAttribute("tabindex", "0"), e.closeButton.className = "vidyard-close-x", document.documentMode < 9 && (e.closeButton.className += " simple-close", e.closeButton.innerHTML = "&times;");\n          return e.closeContainer.appendChild(e.closeButton), e;\n        }().closeContainer, t.overlay.id = "vidyard-overlay", t.overlay.setAttribute("aria-hidden", "true"), t.overlay.style.display = "block", t.contentFixed.id = "vidyard-content-fixed", t.contentFixed.setAttribute("aria-label", "media player lightbox"), t.contentFixed.setAttribute("role", "dialog"), t.contentFixed.style.display = "block", t.popbox.id = "vidyard-popbox", t.overlayWrapper.id = "vidyard-overlay-wrapper", t.overlayWrapper.style.display = "block", t.contentFixed.appendChild(t.popbox), t.overlayWrapper.appendChild(t.overlay), t.overlayWrapper.appendChild(t.closeContainer), t.overlayWrapper.appendChild(t.contentFixed), e && (t.overlay.style.zIndex = e, t.contentFixed.style.zIndex = e + 2, t.closeContainer.style.zIndex = e + 1), t;\n      };\n    var W = n(3),\n      z = new (n.n(W).a)({\n        emit: !!window.location.search.match("vydebug=1"),\n        logger: function logger(e) {\n          return h(e, "info");\n        }\n      }),\n      H = w();\n    H && (z.info("vidyardEmbed V" + E + " loaded from " + H.src), z.info("data-playbackurl=" + H.getAttribute("data-playbackurl"))), z.info("userAgent " + window.navigator.userAgent), z.info("cookies " + navigator.cookieEnabled), window.performance && window.performance.timing && window.performance.timing.navigationStart && z.info("Script load time " + (Date.now() - window.performance.timing.navigationStart));\n    var G,\n      $ = {\n        logger: z,\n        getPlaybackURL: j,\n        setPlaybackURL: I,\n        version: E\n      },\n      J = {},\n      Q = {};\n    Q.setupAnimations = function (e) {\n      var t = f("vidyard-lightbox-centering", "div", e.container)[0];\n      e.player.showLightbox = function (t) {\n        z.setLevel(e.player.uuid)("show lightbox"), function (e) {\n          G = document.activeElement;\n          var t = D.show(e.iframe, e.container, e.overlayZindex);\n          e.player.iframe = t.container.iframe;\n          var n = (r = t.container.iframe, i = e.player.uuid, m(function () {\n            D.makeIframeVisible(r), X(), J.parentEsc = c("keydown", "onkeydown", b(Y), document);\n            var e = {\n              uuid: i,\n              event: "listenForKeyPress",\n              keyCode: "27"\n            };\n            L(e, "https://" + j(), r);\n          }));\n          var r, i;\n          J.iframeLoaded = c("load", "onload", n, t.container.iframe), J.messageHandler = c("message", "onmessage", S(function (e) {\n            var t;\n            n(), "keyPressed" === (t = e).event && 27 === t.params && Y();\n          }), window), J.overlayClick = c("click", "onclick", Y, t.lightbox.overlayWrapper), J.fixedClick = c("click", "onclick", Y, t.lightbox.contentFixed), J.closeKeyPress = c("keydown", "onkeydown", g(Y), t.lightbox.closeContainer), J.responsivePlayerSize = c("resize", "onresize", X, window);\n        }({\n          container: e.container,\n          iframe: e.iframe,\n          player: e.player,\n          overlayZindex: e.overlayZindex\n        });\n      }, e.player.hideLightbox = Y, c("click", "onclick", e.player.showLightbox, t), c("keydown", "onkeydown", g(function (t) {\n        t.preventDefault(), e.player.showLightbox(t);\n      }), t);\n    };\n    var K = Q;\n    function X() {\n      var e = document.getElementById("vidyard-popbox-constraint"),\n        t = parseFloat((window.innerHeight / window.innerWidth * 100).toFixed(2)) < parseFloat(p(e)) ? "landscape" : "portrait";\n      e.className !== t && (e.className = t);\n    }\n    function Y() {\n      D.remove(), G && G.focus(), Object.keys(J).forEach(function (e) {\n        var t = J[e],\n          n = t.eventName,\n          r = t.handler,\n          i = t.element;\n        l(n, r, i);\n      });\n    }\n    var Z = {\n        init: function init(e, t, n) {\n          var r = function (e, t, n) {\n            return \'<div class="vidyard-lightbox-thumbnail vidyard-lightbox-\' + t.uuid + \'" aria-label="player lightbox thumbnail"\' + (n.maxWidth ? \'style="max-width: \' + n.maxWidth + \'px;"\' : "") + \'><div class="vidyard-lightbox-centering" style="padding-bottom: \' + n.ratio + \'%;"><img class="vidyard-lightbox-image" src="\' + e + \'" alt="video thumbnail" /><div type="button" role="button" class="play-button" title="Play video" data-version="1" tabindex="0"><div class="play-button-size"></div><div class="arrow-size"><div class="arrow-size-ratio"></div><div class="arrow"></div></div></div></div></div>\';\n          }("https://" + j() + "/" + t.uuid + ".jpg", t, n);\n          e.insertAdjacentHTML("afterbegin", r);\n        },\n        applyLightboxPlayButton: function applyLightboxPlayButton(e, t) {\n          if (1 === e.pb) {\n            var n = f("play-button", "button", t);\n            1 === n.length && (n[0].style.display = "block", n[0].style.backgroundColor = "#" + e.pbc);\n          }\n        }\n      },\n      ee = Z;\n    var te = function te(e, t) {\n      return \'<div class="vidyard-div-\' + e.uuid + \'" role="application" aria-label="media player" style="position: absolute;padding-bottom: \' + t.ratio + \'%;height: 0; overflow: hidden; max-width: 100%; "><iframe allow="\' + ["autoplay", "fullscreen", "picture-in-picture", "camera", "microphone", "display-capture"].join("; ") + \'"allowfullscreen allowtransparency="true" aria-label="Video" class="vidyard-iframe-\' + e.uuid + \'" frameborder=0 height="100%" width="100%" scrolling=no src="https://\' + j() + "/" + e.uuid + e.toQueryString() + \'" title="Video" style="opacity: 0; background-color: transparent; position: absolute; top: 0; left: 0;\' + (t.maxWidth ? "max-width: " + t.maxWidth + "px;" : "") + (t.maxHeight ? "max-height: " + t.maxHeight + "px;" : "") + \'"></iframe></div>\';\n    };\n    function ne(e) {\n      void 0 === e && (e = f("vidyard-player-embed", "img"));\n      for (var t = 0, n = e; t < n.length; t++) {\n        var r = n[t],\n          i = new F(r),\n          o = i.uuid,\n          a = "https://" + j() + "/" + o + i.toQueryString();\n        o && -1 === d(a, window.VidyardV4.preloadLinks) && (re(o, a), window.VidyardV4.preloadLinks.push(a));\n      }\n    }\n    function re(e, t) {\n      var n = document.createElement("link");\n      return n.rel = "prefetch", n.crossOrigin = "anonymous", n.href = t, document.body.appendChild(n), t;\n    }\n    var ie = Object.assign || function (e) {\n        for (var t, n = 1, r = arguments.length; n < r; n++) for (var i in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);\n        return e;\n      },\n      oe = function () {\n        function e(e, t, n) {\n          var r = this;\n          this._ready = !1, this._chatPlayer = !1, this._previousTime = null, this._onMessageEventHandler = function (e) {\n            if (e.origin === "https://" + j()) {\n              var t;\n              try {\n                t = JSON.parse(e.data);\n              } catch (e) {\n                return;\n              }\n              if ((!r.uuid || t.uuid === r.uuid) && "string" == typeof t.event) {\n                r._updateStatus(t), "ready" === t.event && (r._ready = !0, window.VidyardV4.integrations.updatePlayer(r)), "chatPlayer" === t.event && (r._chatPlayer = !0);\n                var n = r._callbackStore[t.event];\n                if (n) for (var i = 0, o = n; i < o.length; i++) {\n                  o[i].call(r, t.params, r);\n                }\n              }\n            }\n          }, this._callbackStore = n || {\n            beforeSeek: [],\n            chapterComplete: [],\n            createCta: [],\n            fullScreenChange: [],\n            pause: [],\n            play: [],\n            playerComplete: [],\n            ready: [],\n            seek: [],\n            timeupdate: [],\n            volumeChange: []\n          }, this.element = e, this.uuid = t, this.status = null, this.metadata = null, this.progressEventsUnsubscribe = [], c("message", "onmessage", this._onMessageEventHandler);\n        }\n        return e.prototype.on = function (e, t) {\n          var n = this;\n          if ("ready" !== e || !this.ready()) return void 0 === this._callbackStore[e] ? (this._callbackStore[e] = [t], void h("The event name: " + e + " is not supported, your handler was setup regardless", "warn")) : void this._callbackStore[e].push(t);\n          setTimeout(function () {\n            return t.call(n, void 0, n);\n          }, 0);\n        }, e.prototype.off = function (e, t) {\n          if (void 0 !== e) {\n            if (this._callbackStore[e]) if (t) {\n              var n = d(t, this._callbackStore[e]);\n              n > -1 && this._callbackStore[e].splice(n, 1);\n            } else this._callbackStore[e] = [];\n          } else for (var r in this._callbackStore) this._callbackStore.hasOwnProperty(r) && (this._callbackStore[r] = []);\n        }, e.prototype.ready = function () {\n          return this._ready;\n        }, e.prototype.play = function () {\n          this._message({\n            event: "play"\n          });\n        }, e.prototype.pause = function () {\n          this._message({\n            event: "pause"\n          });\n        }, e.prototype.resume = function () {\n          this._message({\n            event: "resume"\n          });\n        }, e.prototype.seek = function (e) {\n          this._message({\n            event: "seek",\n            position: e\n          });\n        }, e.prototype.setVolume = function (e) {\n          this._message({\n            event: "setVolume",\n            newVolume: e\n          });\n        }, e.prototype.setPlaybackSpeed = function (e) {\n          this._message({\n            event: "setPlaybackSpeed",\n            speed: e\n          });\n        }, e.prototype.playChapter = function (e) {\n          this._message({\n            chapter_index: e,\n            event: "playChapter"\n          });\n        }, e.prototype.setAudioTrack = function (e) {\n          this._message({\n            audioTrackId: e,\n            event: "setAudioTrack"\n          });\n        }, e.prototype.enableCaption = function (e, t) {\n          this._message({\n            event: "enableCaption",\n            label: e,\n            language: t\n          });\n        }, e.prototype.disableCaption = function (e, t) {\n          this._message({\n            event: "disableCaption",\n            label: e,\n            language: t\n          });\n        }, e.prototype.consentToGDPR = function (e) {\n          this._message({\n            consent: e,\n            event: "consentToGDPR"\n          });\n        }, e.prototype.createCta = function (e) {\n          this._message({\n            attributes: function (e, t) {\n              for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);\n              return e;\n            }({\n              display_once: !1,\n              duration: 10,\n              fullscreen: !1,\n              html: "",\n              opacity: 1,\n              start: 0,\n              width: 300\n            }, e),\n            event: "createCta"\n          });\n        }, e.prototype.updateCta = function (e, t) {\n          this._message({\n            attributes: t,\n            event: "updateCta",\n            id: e\n          });\n        }, e.prototype.addEvent = function (e) {\n          var t = e.start,\n            n = void 0 === t ? 0 : t,\n            r = e.duration,\n            i = void 0 === r ? 1 : r,\n            o = e.chapterIndex,\n            a = void 0 === o ? 0 : o,\n            s = e.eventId;\n          s ? this._message({\n            chapterIndex: a,\n            duration: i,\n            event: "addEvent",\n            id: s,\n            start: n\n          }) : h("Missing arguments. Need eventId");\n        }, e.prototype.getCurrentChapter = function () {\n          return null === this.status ? null : this.status.chapterIndex;\n        }, e.prototype.currentTime = function () {\n          return null === this.status ? null : this.status.currentTime;\n        }, e.prototype.scrubbing = function () {\n          return null === this.status ? null : this.status.scrubbing;\n        }, e.prototype.toggleFullscreen = function () {\n          this._message({\n            event: "toggleFullscreen"\n          });\n        }, e.prototype.resetPlayer = function () {\n          this._message({\n            event: "resetPlayer"\n          });\n        }, e.prototype._message = function (e) {\n          !0 === this.ready() ? L(ie({}, e, {\n            uuid: this.uuid\n          }), "https://" + j(), this.iframe) : h("Player is not ready yet! No messages can be recieved.", "error");\n        }, e.prototype._updateStatus = function (e) {\n          if ("object" == _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e.status) && (this.status = e.status), "object" == _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e.metadata) && (this.metadata = e.metadata), this.status) {\n            if (this.status.currentTime !== this._previousTime && this._callbackStore.timeupdate) for (var t = 0, n = this._callbackStore.timeupdate; t < n.length; t++) {\n              n[t].call(this, this.status.currentTime, this);\n            }\n            this._previousTime = this.status.currentTime;\n          }\n        }, e;\n      }(),\n      ae = function ae(e) {\n        var t = window.VidyardV4,\n          n = t.integrations,\n          r = (t.api, t.players),\n          i = t.playerReadyListeners,\n          o = new F(e),\n          a = o.uuid,\n          s = z.setLevel(a);\n        if (s("rendering"), void 0 !== a) {\n          if ("true" === o.rendered) return s("Already rendered"), v(r, function (t) {\n            return t.placeholder === e;\n          });\n          var c = n.getCookie("marketo"),\n            l = R(a, o),\n            d = new oe(l, a);\n          e.setAttribute("data-rendered", "true"), e.parentNode.insertBefore(l, e), d.placeholder = e, d.container = l, r.push(d), i[a] = i[a] || [];\n          var y = i[a].concat(i[void 0]);\n          return Object.keys(y).forEach(function (e) {\n            var t = y[e];\n            d.on("ready", t), s("attaching ready callbacks");\n          }), "inline" === o.type || "chat" === o.type ? se(e, l, o, d) : "lightbox" === o.type && (e.style.display = "none", o.autoplay = 1, ue(e, l, o, d)), s("getStyle sent"), function (e) {\n            return new u(function (t, n) {\n              return A({\n                error: n,\n                success: t,\n                url: "" + T() + e + "/style.js",\n                uuid: "style_" + e\n              });\n            });\n          }(a).then(function (t) {\n            if (s("getStyle received: " + JSON.stringify(t)), "lightbox" === o.type) ee.applyLightboxPlayButton(t, l);else if (1 === t.pl) {\n              var n = p(e, 319);\n              !function (e, t) {\n                e.style.paddingBottom = t + "%";\n              }(f("vidyard-div-" + a, "div", l)[0], n);\n            }\n          }), s("getIntegrations"), function (e) {\n            return new u(function (t, n) {\n              return A({\n                error: n,\n                success: t,\n                url: "" + T() + e + "/integrations.js",\n                uuid: "integrations_" + e\n              });\n            });\n          }(a).then(function (e) {\n            s("getIntegrations received: " + JSON.stringify(e)), d.on("ready", function () {\n              d._tmpOrg = e, n.updatePlayer(d);\n            });\n          }), s("getSEO sent"), function (e) {\n            return new u(function (t, n) {\n              return A({\n                error: n,\n                success: t,\n                url: "" + T() + e + "/details.js",\n                uuid: "details_" + e\n              });\n            });\n          }(a).then(function (e) {\n            if (s("getSEO: " + JSON.stringify(e)), !function (e) {\n              for (var t in e) if (e.hasOwnProperty(t)) return !1;\n              return JSON.stringify(e) === JSON.stringify({});\n            }(e)) {\n              var t = function (e) {\n                var t = document.createElement("script");\n                return t.type = "application/ld+json", t.text = JSON.stringify(e), t;\n              }(e);\n              document.getElementsByTagName("head")[0].appendChild(t);\n            }\n          }), c && (s("getMarketoLead sent"), function (e, t) {\n            return new u(function (n, r) {\n              var i = encodeURIComponent(t),\n                o = "" + T() + e + "/contact/" + i + "/marketoContact.js";\n              A({\n                error: r,\n                success: n,\n                url: o,\n                uuid: "marketoContact_" + e\n              });\n            });\n          }(a, c).then(k).then(function (e) {\n            s("getMarketoLead received: " + e), d.on("ready", function () {\n              n.addKnownVisitor("marketo", e, d.org);\n            });\n          }).catch(function (e) {\n            z.warn("Invalid Marketo cookie");\n          })), window.Vidyard._players[d.uuid] = d, d;\n        }\n        h(\'Embed without a UUID detected, it is impossible to insert a player without a UUID. Add "data-uuid=some_uuid" to the offending element.\' + e);\n      },\n      se = function se(e, t, n, r) {\n        var i = z.setLevel(n.uuid);\n        i("injecting inline embed");\n        var o = {\n          maxHeight: n.height ? parseInt(n.height, 10) : null,\n          maxWidth: n.width ? parseInt(n.width, 10) : null,\n          ratio: p(e)\n        };\n        t.innerHTML = te(n, o);\n        var a = t.getElementsByTagName("iframe")[0];\n        r.iframe = a;\n        var s = new u(function (e) {\n            c("load", "onload", e, a);\n          }),\n          l = new u(function (e) {\n            r.on("ready", e);\n          });\n        u.race([s, l]).then(function () {\n          i("player or iFrame is ready"), e.style.display = "none", a.parentNode.style.position = "relative", a.style.opacity = "1";\n        });\n      },\n      ue = function ue(e, t, n, r) {\n        z.setLevel(n.uuid)("injecting lighbox embed");\n        var i = {\n            ratio: p(e)\n          },\n          o = te(n, i),\n          a = {\n            maxHeight: n.height ? parseInt(n.height, 10) : null,\n            maxWidth: n.width ? parseInt(n.width, 10) : null,\n            ratio: p(e)\n          };\n        ee.init(t, n, a), K.setupAnimations({\n          container: t,\n          iframe: o,\n          overlayZindex: n.overlayzindex,\n          player: r\n        });\n      };\n    var ce = function ce(e) {\n        return window.VidyardV4.players.filter(function (t) {\n          return t.uuid === e;\n        });\n      },\n      le = n(2),\n      de = n.n(le);\n    var fe = {\n        errors: {\n          placeholder: "Cannot render the player, check the placeholder Image"\n        }\n      },\n      pe = function pe(e, t) {\n        var n = {};\n        for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);\n        if (null != e && "function" == typeof Object.getOwnPropertySymbols) {\n          var i = 0;\n          for (r = Object.getOwnPropertySymbols(e); i < r.length; i++) t.indexOf(r[i]) < 0 && (n[r[i]] = e[r[i]]);\n        }\n        return n;\n      },\n      he = function he(e) {\n        if (!e) return u.reject(new Error(fe.errors.placeholder));\n        var t = x(e),\n          n = t.width,\n          r = t.height,\n          i = e.getAttribute("data-uuid");\n        return "" !== e.src && i && (!e.complete || 0 !== n && 0 !== r) ? e.complete ? u.resolve(e) : new u(function (t, n) {\n          e.onload = function () {\n            return t(e);\n          }, e.onerror = function () {\n            return n(e);\n          };\n        }) : u.reject(new Error(fe.errors.placeholder));\n      },\n      ve = function ve(e) {\n        void 0 === e && (e = {});\n        var t = e.uuid,\n          n = e.container,\n          r = e.type,\n          i = void 0 === r ? "inline" : r,\n          o = (e.aspect, pe(e, ["uuid", "container", "type", "aspect"]));\n        if (t && n) {\n          z.setLevel("placeholder")("creating placeholder image");\n          var a = document.createElement("img"),\n            s = o.width ? o.width + "px" : "100%",\n            u = "\\n    display: block;\\n    margin: 0 auto;\\n    max-height: " + (o.height ? o.height + "px" : "100%") + ";\\n    max-width: " + s + ";\\n    opacity: 0;\\n  ";\n          return a.src = "//" + j() + "/" + t + ".jpg", a.className = "vidyard-player-embed", a.setAttribute("style", u), a.setAttribute("data-uuid", t), a.setAttribute("data-type", i), Object.keys(o).forEach(function (e) {\n            return a.setAttribute("data-" + e, o[e]);\n          }), n.appendChild(a);\n        }\n      },\n      ye = function ye(e) {\n        z.setLevel("placeholder")("rendering player from placeholder image");\n        var t = ae(e);\n        return new u(function (e) {\n          return t.on("ready", function () {\n            return e(t);\n          });\n        });\n      };\n    var me = {\n        _debug: $,\n        api: {\n          GDPR: {\n            consent: function consent(e) {\n              if (void 0 !== e) for (var t = function t(_t) {\n                  _t.on("ready", function () {\n                    _t.consentToGDPR(e);\n                  });\n                }, n = 0, r = window.VidyardV4.players; n < r.length; n++) t(r[n]);\n            },\n            hasConsentOnReady: function hasConsentOnReady(e) {\n              var t = 0,\n                n = window.VidyardV4.api.GDPR,\n                r = window.VidyardV4.players;\n              if (0 === r.length) return e(!1);\n              if (void 0 !== n._readyConsent) return e(n._readyConsent);\n              for (var i = 0, o = r; i < o.length; i++) o[i].on("ready", function () {\n                if (t !== r.length && (t += 1), t === r.length) return n._readyConsent = r.reduce(function (e, t) {\n                  return t.status.consent && e;\n                }, !0), e(n._readyConsent);\n              });\n            }\n          },\n          addReadyListener: function addReadyListener(e, t) {\n            var n = window.VidyardV4.playerReadyListeners;\n            n[t] = n[t] || [], n[t].push(e);\n            for (var r = 0, i = window.VidyardV4.players; r < i.length; r++) {\n              var o = i[r];\n              void 0 !== t && o.uuid !== t || o.on("ready", e);\n            }\n          },\n          destroyPlayer: function destroyPlayer(e) {\n            var t = window.VidyardV4.players;\n            y(t, e) ? (function (e) {\n              e.progressEventsUnsubscribe.forEach(function (e) {\n                return e();\n              }), e.progressEventsUnsubscribe = [];\n            }(e), e.off(), e.container.parentNode.removeChild(e.container), e.placeholder.parentNode.removeChild(e.placeholder), t.splice(d(e, t))) : h("Cannot destroy an unknown player", "warn");\n          },\n          getPlayersByUUID: ce,\n          progressEvents: function progressEvents() {\n            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];\n            var n = de.a.apply(void 0, e);\n            Object.keys(n).forEach(function (e) {\n              var t = n[e],\n                r = t.player,\n                i = t.removeEventListeners;\n              r.progressEventsUnsubscribe && r.progressEventsUnsubscribe.push(i);\n            });\n          },\n          renderDOMPlayers: function renderDOMPlayers(e) {\n            void 0 === e && (e = document);\n            var t = f("vidyard-player-embed", "img", e);\n            ne(t), _(t).forEach(function (e) {\n              ae(e);\n            }), P();\n          },\n          renderPlayer: function renderPlayer(e) {\n            var t = e instanceof HTMLImageElement ? e : ve(e);\n            return he(t).then(ye).catch(function (e) {\n              return h(fe.errors.placeholder, "warn");\n            });\n          }\n        },\n        integrations: new function () {\n          var e = this,\n            t = ["pardot", "hubspotutk", "_mkto_trk", "vy_dreamforce", "wp", "eloqua"],\n            n = ["pardot", "hubspot", "marketo", "dreamforce", "acton", "eloqua"],\n            r = !1,\n            i = {};\n          function o(e, t) {\n            return e.foundIntegrations[t] || (e.foundIntegrations[t] = {\n              externalIdentifier: null,\n              sentPlayers: []\n            }), e;\n          }\n          function a(e, t, n) {\n            return (e = o(e, t)).foundIntegrations[t].externalIdentifier = n, e;\n          }\n          function s(t, n, r) {\n            if (void 0 !== t && void 0 !== r && null !== r) for (var i = 0; i < t.length; i++) e.safelyCommunicateIntegration(t[i], n, r);\n          }\n          function u(e, t, n) {\n            var r = {\n              event: "identifyVisitor",\n              uuid: e.uuid,\n              data: {\n                type: t,\n                value: n\n              }\n            };\n            L(r, "https://" + j(), e.iframe);\n          }\n          function l(e, t, n) {\n            e.ready() ? u(e, t, n) : e.on("ready", function () {\n              u(e, t, n);\n            });\n          }\n          function f() {\n            for (var t, r, o, u = 0; u < n.length; u++) for (var c in r = n[u], i) (o = i[c]).integrations[r] && (t = e.getCookie(r, o)) && (t = p(r, t, o)) && s((o = a(o, r, t)).players, r, t);\n          }\n          function p(e, t, n) {\n            if ("marketo" === e) {\n              if (!n.integrations.marketo || -1 == t.toLowerCase().indexOf(n.integrations.marketo.toLowerCase())) return null;\n              t = encodeURIComponent(t);\n            } else "acton" === e && (t = (t = encodeURIComponent(t)).replace(/%22/g, "").replace(/%3A/g, ":"));\n            return t;\n          }\n          this.updatePlayer = function (e) {\n            if (e._tmpOrg && e.iframe) {\n              var t = e._tmpOrg.orgId;\n              i[t] || (i[t] = {\n                id: t,\n                integrations: e._tmpOrg,\n                foundIntegrations: {},\n                players: []\n              }), e.org = i[t];\n              for (var n = 0; n < i[t].players.length; n++) if (i[t].players[n].iframe === e.iframe) return;\n              i[t].players.push(e), e.org.integrations.eloqua && function (e, t) {\n                if (!r) {\n                  r = !0;\n                  var n = function n() {\n                    if (!document.getElementById("vidyard-eloqua-include")) {\n                      window._elqQ = window._elqQ || [], window._elqQ.push(["elqSetSiteId", e]), t && window._elqQ.push(["elqUseFirstPartyCookie", t]), window._elqQ.push(["elqTrackPageView"]), window._elqQ.push(["elqGetCustomerGUID"]);\n                      var n = document.createElement("script");\n                      n.id = "vidyard-eloqua-include", n.type = "text/javascript", n.async = !0, n.src = "https://img.en25.com/i/elqCfg.min.js";\n                      var r = document.getElementsByTagName("script")[0];\n                      r.parentNode.insertBefore(n, r);\n                    }\n                  };\n                  "complete" === document.readyState ? n() : c("DOMContentLoaded", "onload", n);\n                }\n              }(e.org.integrations.eloqua, e.org.integrations.eloquaFirstPartyDomain), f();\n            }\n          }, this.safelyCommunicateIntegration = function (e, t, n) {\n            void 0 != e.org && void 0 != n && null != n && !function (e, t) {\n              return e.org && e.org.foundIntegrations && e.org.foundIntegrations[t] && e.org.foundIntegrations[t].sentPlayers && -1 !== d(e.uuid, e.org.foundIntegrations[t].sentPlayers);\n            }(e, t) && function (e, t, n) {\n              if (!e.ready()) return !1;\n              var r = {\n                event: "associateVisitor",\n                uuid: e.uuid,\n                data: {\n                  type: t,\n                  value: n\n                }\n              };\n              return h("IntegrationsWatcher.communicateIntegration " + r, "debug"), L(r, "https://" + j(), e.iframe), !0;\n            }(e, t, n) && (e.org = function (e, t, n) {\n              return (e = o(e, t)).foundIntegrations[t].sentPlayers.push(n), e;\n            }(e.org, t, e.uuid));\n          }, this.addKnownVisitor = function (e, t, n) {\n            if (n) for (var r = 0; r < n.players.length; r++) l(n.players[r], e, t);\n          }, this.getCookie = function (e, r) {\n            var i = document.cookie.split(";");\n            if ("eloqua" === e && "function" == typeof window.GetElqCustomerGUID) return window.GetElqCustomerGUID();\n            var o = t[n.indexOf(e)];\n            o = function (e, t) {\n              return "pardot" === e && t.integrations.pardot ? "visitor_id" + t.integrations.pardot : "wp" === e && t.integrations.acton ? "wp" + t.integrations.acton : e;\n            }(o, r);\n            for (var a = 0; a < i.length; a++) {\n              var s, u, c, l;\n              if (l = (u = i[a]).indexOf("="), s = u.substr(0, l).replace(/^\\s+|\\s+$/g, ""), c = u.substr(l + 1), s === o) return decodeURIComponent(c);\n            }\n          }, setInterval(function () {\n            f();\n          }, 1e3);\n        }(),\n        jsonp: {},\n        playerReadyListeners: {\n          undefined: []\n        },\n        players: [],\n        preloadLinks: []\n      },\n      ge = {\n        _players: {},\n        players: function players() {\n          return window.VidyardV4.players;\n        }\n      },\n      be = (n(12), n(1));\n    var we = function we(e) {\n        return void 0 === e && (e = ""), e.match(C);\n      },\n      xe = function xe(e) {\n        var t = e.error,\n          n = e.filename,\n          r = e.message,\n          i = e.timeStamp,\n          o = e.type;\n        if (we(n)) {\n          var a = function (e) {\n            var t = e.error,\n              n = e.location,\n              r = e.message,\n              i = e.navigator,\n              o = e.timeStamp,\n              a = e.type,\n              s = e.vyGlobal;\n            return {\n              data: {\n                body: {\n                  trace: {\n                    exception: {\n                      class: t.name,\n                      message: r\n                    },\n                    frames: be.parse(t).map(function (e) {\n                      return {\n                        code: e.source,\n                        colno: e.columnNumber,\n                        filename: e.fileName,\n                        lineno: e.lineNumber,\n                        method: e.functionName\n                      };\n                    })\n                  }\n                },\n                client: {\n                  cpu: i.platform,\n                  javascript: {\n                    browser: i.userAgent,\n                    guess_uncaught_frames: !0,\n                    source_map_enabled: !0\n                  }\n                },\n                code_version: E,\n                custom: {\n                  jsonpRequests: Object.keys(s.jsonp),\n                  playbackUrlOverride: window.VIDYARD_PLAYBACK_URL,\n                  players: s.players.map(function (e) {\n                    return {\n                      iframe: e.iframe ? {\n                        src: e.iframe.src\n                      } : {},\n                      metadata: e.metadata,\n                      org: e.org ? {\n                        id: e.org.id,\n                        foundIntegrations: e.org.foundIntegrations\n                      } : {},\n                      uuid: e.uuid\n                    };\n                  }),\n                  preloadLinks: s.preloadLinks\n                },\n                environment: j(),\n                fingerprint: t.name,\n                language: "javascript",\n                level: a,\n                platform: "browser",\n                request: {\n                  query_string: n.search,\n                  url: n.href\n                },\n                timestamp: o\n              }\n            };\n          }({\n            error: t,\n            location: window.location,\n            message: r,\n            navigator: window.navigator,\n            timeStamp: i,\n            type: o,\n            vyGlobal: window.VidyardV4\n          });\n          (function (e) {\n            var t = e.endpoint,\n              n = e.payload,\n              r = e.method,\n              i = void 0 === r ? "GET" : r;\n            return new u(function (e, r) {\n              var o = void 0 === new XMLHttpRequest().withCredentials && XDomainRequest ? new XDomainRequest() : new XMLHttpRequest();\n              o.open(i, t), o instanceof XMLHttpRequest && o.setRequestHeader("Content-Type", "text/plain"), o.onerror = function (e) {\n                return r(e);\n              }, o.onload = function () {\n                o instanceof XMLHttpRequest ? 2 === Math.floor(o.status / 100) ? e(o.responseText) : r() : e(o.responseText);\n              }, o.send(JSON.stringify(n));\n            });\n          })({\n            endpoint: "https://" + j() + "/v4/error",\n            method: "POST",\n            payload: a\n          }).then(function (e) {\n            return h("Error logged " + e);\n          }, function (e) {\n            return h("Error log failed " + e);\n          });\n        }\n      };\n    c("error", "onerror", xe, window), c("unhandledrejection", "", function (e) {\n      var t = e.reason,\n        n = e.timeStamp,\n        r = e.type;\n      e.reason instanceof Error && we(t.stack) && (e.preventDefault(), xe({\n        error: t,\n        filename: t.stack,\n        message: t.message,\n        timeStamp: n,\n        type: r\n      }));\n    }), window.VidyardV4 = window.VidyardV4 || me, window.Vidyard = window.Vidyard || ge;\n    var _e = me._debug,\n      ke = me.api,\n      Ee = me.players;\n    switch (n.d(t, "_debug", function () {\n      return _e;\n    }), n.d(t, "api", function () {\n      return ke;\n    }), n.d(t, "players", function () {\n      return Ee;\n    }), document.readyState) {\n      case "complete":\n        ke.renderDOMPlayers();\n        break;\n      case "interactive":\n        ne(), c("load", "onload", function () {\n          return ke.renderDOMPlayers();\n        }, window);\n        break;\n      default:\n        c("load", "onload", function () {\n          return ke.renderDOMPlayers();\n        }, window);\n    }\n  }, function (e, t, n) {\n    var r, i, o;\n    !function (n, a) {\n      "use strict";\n\n      i = [], void 0 === (o = "function" == typeof (r = function r() {\n        function e(e) {\n          return !isNaN(parseFloat(e)) && isFinite(e);\n        }\n        function t(e) {\n          return e.charAt(0).toUpperCase() + e.substring(1);\n        }\n        function n(e) {\n          return function () {\n            return this[e];\n          };\n        }\n        var r = ["isConstructor", "isEval", "isNative", "isToplevel"],\n          i = ["columnNumber", "lineNumber"],\n          o = ["fileName", "functionName", "source"],\n          a = r.concat(i, o, ["args"]);\n        function s(e) {\n          if (e instanceof Object) for (var n = 0; n < a.length; n++) e.hasOwnProperty(a[n]) && void 0 !== e[a[n]] && this["set" + t(a[n])](e[a[n]]);\n        }\n        s.prototype = {\n          getArgs: function getArgs() {\n            return this.args;\n          },\n          setArgs: function setArgs(e) {\n            if ("[object Array]" !== Object.prototype.toString.call(e)) throw new TypeError("Args must be an Array");\n            this.args = e;\n          },\n          getEvalOrigin: function getEvalOrigin() {\n            return this.evalOrigin;\n          },\n          setEvalOrigin: function setEvalOrigin(e) {\n            if (e instanceof s) this.evalOrigin = e;else {\n              if (!(e instanceof Object)) throw new TypeError("Eval Origin must be an Object or StackFrame");\n              this.evalOrigin = new s(e);\n            }\n          },\n          toString: function toString() {\n            var t = this.getFunctionName() || "{anonymous}",\n              n = "(" + (this.getArgs() || []).join(",") + ")",\n              r = this.getFileName() ? "@" + this.getFileName() : "",\n              i = e(this.getLineNumber()) ? ":" + this.getLineNumber() : "",\n              o = e(this.getColumnNumber()) ? ":" + this.getColumnNumber() : "";\n            return t + n + r + i + o;\n          }\n        };\n        for (var u = 0; u < r.length; u++) s.prototype["get" + t(r[u])] = n(r[u]), s.prototype["set" + t(r[u])] = function (e) {\n          return function (t) {\n            this[e] = Boolean(t);\n          };\n        }(r[u]);\n        for (var c = 0; c < i.length; c++) s.prototype["get" + t(i[c])] = n(i[c]), s.prototype["set" + t(i[c])] = function (t) {\n          return function (n) {\n            if (!e(n)) throw new TypeError(t + " must be a Number");\n            this[t] = Number(n);\n          };\n        }(i[c]);\n        for (var l = 0; l < o.length; l++) s.prototype["get" + t(o[l])] = n(o[l]), s.prototype["set" + t(o[l])] = function (e) {\n          return function (t) {\n            this[e] = String(t);\n          };\n        }(o[l]);\n        return s;\n      }) ? r.apply(t, i) : r) || (e.exports = o);\n    }();\n  }, function (e, t) {\n    e.exports = function (e) {\n      var t = "undefined" != typeof window && window.location;\n      if (!t) throw new Error("fixUrls requires window.location");\n      if (!e || "string" != typeof e) return e;\n      var n = t.protocol + "//" + t.host,\n        r = n + t.pathname.replace(/\\/[^\\/]*$/, "/");\n      return e.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function (e, t) {\n        var i,\n          o = t.trim().replace(/^"(.*)"$/, function (e, t) {\n            return t;\n          }).replace(/^\'(.*)\'$/, function (e, t) {\n            return t;\n          });\n        return /^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(o) ? e : (i = 0 === o.indexOf("//") ? o : 0 === o.indexOf("/") ? n + o : r + o.replace(/^\\.\\//, ""), "url(" + JSON.stringify(i) + ")");\n      });\n    };\n  }, function (e, t, n) {\n    var r,\n      i,\n      o = {},\n      a = (r = function r() {\n        return window && document && document.all && !window.atob;\n      }, function () {\n        return void 0 === i && (i = r.apply(this, arguments)), i;\n      }),\n      s = function (e) {\n        var t = {};\n        return function (e) {\n          if ("function" == typeof e) return e();\n          if (void 0 === t[e]) {\n            var n = function (e) {\n              return document.querySelector(e);\n            }.call(this, e);\n            if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try {\n              n = n.contentDocument.head;\n            } catch (e) {\n              n = null;\n            }\n            t[e] = n;\n          }\n          return t[e];\n        };\n      }(),\n      u = null,\n      c = 0,\n      l = [],\n      d = n(8);\n    function f(e, t) {\n      for (var n = 0; n < e.length; n++) {\n        var r = e[n],\n          i = o[r.id];\n        if (i) {\n          i.refs++;\n          for (var a = 0; a < i.parts.length; a++) i.parts[a](r.parts[a]);\n          for (; a < r.parts.length; a++) i.parts.push(g(r.parts[a], t));\n        } else {\n          var s = [];\n          for (a = 0; a < r.parts.length; a++) s.push(g(r.parts[a], t));\n          o[r.id] = {\n            id: r.id,\n            refs: 1,\n            parts: s\n          };\n        }\n      }\n    }\n    function p(e, t) {\n      for (var n = [], r = {}, i = 0; i < e.length; i++) {\n        var o = e[i],\n          a = t.base ? o[0] + t.base : o[0],\n          s = {\n            css: o[1],\n            media: o[2],\n            sourceMap: o[3]\n          };\n        r[a] ? r[a].parts.push(s) : n.push(r[a] = {\n          id: a,\n          parts: [s]\n        });\n      }\n      return n;\n    }\n    function h(e, t) {\n      var n = s(e.insertInto);\n      if (!n) throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insertInto\' parameter is invalid.");\n      var r = l[l.length - 1];\n      if ("top" === e.insertAt) r ? r.nextSibling ? n.insertBefore(t, r.nextSibling) : n.appendChild(t) : n.insertBefore(t, n.firstChild), l.push(t);else if ("bottom" === e.insertAt) n.appendChild(t);else {\n        if ("object" != _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e.insertAt) || !e.insertAt.before) throw new Error("[Style Loader]\\n\\n Invalid value for parameter \'insertAt\' (\'options.insertAt\') found.\\n Must be \'top\', \'bottom\', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n");\n        var i = s(e.insertInto + " " + e.insertAt.before);\n        n.insertBefore(t, i);\n      }\n    }\n    function v(e) {\n      if (null === e.parentNode) return !1;\n      e.parentNode.removeChild(e);\n      var t = l.indexOf(e);\n      t >= 0 && l.splice(t, 1);\n    }\n    function y(e) {\n      var t = document.createElement("style");\n      return void 0 === e.attrs.type && (e.attrs.type = "text/css"), m(t, e.attrs), h(e, t), t;\n    }\n    function m(e, t) {\n      Object.keys(t).forEach(function (n) {\n        e.setAttribute(n, t[n]);\n      });\n    }\n    function g(e, t) {\n      var n, r, i, o;\n      if (t.transform && e.css) {\n        if (!(o = t.transform(e.css))) return function () {};\n        e.css = o;\n      }\n      if (t.singleton) {\n        var a = c++;\n        n = u || (u = y(t)), r = x.bind(null, n, a, !1), i = x.bind(null, n, a, !0);\n      } else e.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (n = function (e) {\n        var t = document.createElement("link");\n        return void 0 === e.attrs.type && (e.attrs.type = "text/css"), e.attrs.rel = "stylesheet", m(t, e.attrs), h(e, t), t;\n      }(t), r = function (e, t, n) {\n        var r = n.css,\n          i = n.sourceMap,\n          o = void 0 === t.convertToAbsoluteUrls && i;\n        (t.convertToAbsoluteUrls || o) && (r = d(r));\n        i && (r += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(i)))) + " */");\n        var a = new Blob([r], {\n            type: "text/css"\n          }),\n          s = e.href;\n        e.href = URL.createObjectURL(a), s && URL.revokeObjectURL(s);\n      }.bind(null, n, t), i = function i() {\n        v(n), n.href && URL.revokeObjectURL(n.href);\n      }) : (n = y(t), r = function (e, t) {\n        var n = t.css,\n          r = t.media;\n        r && e.setAttribute("media", r);\n        if (e.styleSheet) e.styleSheet.cssText = n;else {\n          for (; e.firstChild;) e.removeChild(e.firstChild);\n          e.appendChild(document.createTextNode(n));\n        }\n      }.bind(null, n), i = function i() {\n        v(n);\n      });\n      return r(e), function (t) {\n        if (t) {\n          if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return;\n          r(e = t);\n        } else i();\n      };\n    }\n    e.exports = function (e, t) {\n      if ("undefined" != typeof DEBUG && DEBUG && "object" != (typeof document === "undefined" ? "undefined" : _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(document))) throw new Error("The style-loader cannot be used in a non-browser environment");\n      (t = t || {}).attrs = "object" == _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(t.attrs) ? t.attrs : {}, t.singleton || "boolean" == typeof t.singleton || (t.singleton = a()), t.insertInto || (t.insertInto = "head"), t.insertAt || (t.insertAt = "bottom");\n      var n = p(e, t);\n      return f(n, t), function (e) {\n        for (var r = [], i = 0; i < n.length; i++) {\n          var a = n[i];\n          (s = o[a.id]).refs--, r.push(s);\n        }\n        e && f(p(e, t), t);\n        for (i = 0; i < r.length; i++) {\n          var s;\n          if (0 === (s = r[i]).refs) {\n            for (var u = 0; u < s.parts.length; u++) s.parts[u]();\n            delete o[s.id];\n          }\n        }\n      };\n    };\n    var b,\n      w = (b = [], function (e, t) {\n        return b[e] = t, b.filter(Boolean).join("\\n");\n      });\n    function x(e, t, n, r) {\n      var i = n ? "" : r.css;\n      if (e.styleSheet) e.styleSheet.cssText = w(t, i);else {\n        var o = document.createTextNode(i),\n          a = e.childNodes;\n        a[t] && e.removeChild(a[t]), a.length ? e.insertBefore(o, a[t]) : e.appendChild(o);\n      }\n    }\n  }, function (e, t) {\n    e.exports = function (e) {\n      var t = [];\n      return t.toString = function () {\n        return this.map(function (t) {\n          var n = function (e, t) {\n            var n = e[1] || "",\n              r = e[3];\n            if (!r) return n;\n            if (t && "function" == typeof btoa) {\n              var i = (a = r, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(a)))) + " */"),\n                o = r.sources.map(function (e) {\n                  return "/*# sourceURL=" + r.sourceRoot + e + " */";\n                });\n              return [n].concat(o).concat([i]).join("\\n");\n            }\n            var a;\n            return [n].join("\\n");\n          }(t, e);\n          return t[2] ? "@media " + t[2] + "{" + n + "}" : n;\n        }).join("");\n      }, t.i = function (e, n) {\n        "string" == typeof e && (e = [[null, e, ""]]);\n        for (var r = {}, i = 0; i < this.length; i++) {\n          var o = this[i][0];\n          "number" == typeof o && (r[o] = !0);\n        }\n        for (i = 0; i < e.length; i++) {\n          var a = e[i];\n          "number" == typeof a[0] && r[a[0]] || (n && !a[2] ? a[2] = n : n && (a[2] = "(" + a[2] + ") and (" + n + ")"), t.push(a));\n        }\n      }, t;\n    };\n  }, function (e, t, n) {\n    (e.exports = n(10)(!1)).push([e.i, \'.vidyard-player-container .play-button{position:absolute;width:16%;height:auto;border-radius:50%;border:none;cursor:pointer;opacity:.65;filter:alpha(opacity = 65);transition:opacity .2s linear;overflow:hidden;font-size:0;padding:0;min-width:20px;top:50%;left:50%;transform:translate(-50%,-50%);-webkit-appearance:initial!important;-moz-appearance:initial!important;appearance:initial!important}.vidyard-player-container .play-button .play-button-size{padding-top:100%;width:100%}.vidyard-player-container .play-button .arrow-size{position:absolute;top:50%;left:50%;width:35%;height:auto;margin:-25% 0 0 -12%;overflow:hidden}.vidyard-player-container .play-button .arrow-size-ratio{padding-top:150%;width:100%}.vidyard-player-container .play-button .arrow{position:absolute;top:50%;left:auto;right:0;bottom:auto;width:0;height:0;margin:-200px 0 -200px -300px;border:200px solid transparent;border-left:300px solid #fff;border-right:none}.vidyard-lightbox-thumbnail:hover .play-button{opacity:1;filter:alpha(opacity = 100);zoom:1}.vidyard-player-container{position:relative;height:100%;text-align:center}.vidyard-player-container img{height:100%}.vidyard-player-container .play-button{display:none}.vidyard-close-container{position:fixed;right:20px;top:20px;height:34px;width:34px;cursor:pointer;z-index:1000}.vidyard-close-container:focus{outline:1px dotted grey}.vidyard-close-x{position:absolute;height:100%;width:100%;color:#fff;font-size:2em;text-align:center;line-height:34px}.vidyard-close-x:hover{color:#ddd}.vidyard-close-x:hover:after,.vidyard-close-x:hover:before{background:#ddd}.vidyard-close-x:after,.vidyard-close-x:before{content:"";position:absolute;background:#fff;display:block;left:50%;top:50%;height:65%;width:2px;transition:all .2s;-ms-high-contrast-adjust:none}.vidyard-close-x:before{transform:translate(-50%,-50%) rotate(45deg);-ms-transform:translate(-50%,-50%) rotate(45deg)}.vidyard-close-x:after{transform:translate(-50%,-50%) rotate(-45deg);-ms-transform:translate(-50%,-50%) rotate(-45deg)}.vidyard-close-x.simple-close:after,.vidyard-close-x.simple-close:before{display:none}.vidyard-lightbox-thumbnail{width:100%;height:100%;margin:auto}.vidyard-lightbox-image{height:100%;left:0;position:absolute;top:0;width:100%}.vidyard-lightbox-centering{cursor:pointer;height:0;max-width:100%;overflow:hidden;padding-bottom:56.25%;position:relative}.vidyard-lightbox-content-backer{-webkit-transform:opacity 1s,filter 1s;-ms-transform:opacity 1s,filter 1s;transition:opacity 1s,filter 1s;background-color:#000;height:100%;width:100%;position:absolute}#vidyard-overlay-wrapper,.vidyard-lightbox-content-backer{filter:alpha(opacity = 0);opacity:0;top:0;right:0;bottom:0;left:0}#vidyard-overlay-wrapper{position:relative;box-sizing:border-box;display:none;transition:opacity .5s,filter .5s}#vidyard-overlay{top:0;right:0;bottom:0;left:0;opacity:.9;filter:alpha(opacity = 90);width:100%;height:100%;background-color:#000;z-index:800}#vidyard-content-fixed,#vidyard-overlay{position:fixed;box-sizing:border-box;display:none}#vidyard-content-fixed{opacity:1;z-index:900;text-align:center;top:5%;right:5%;bottom:5%;left:5%;width:90%}#vidyard-popbox{display:inline-block;position:absolute;left:50%;top:50%;-webit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}#vidyard-popbox-constraint{opacity:0;filter:alpha(opacity = 0);display:block;visibility:hidden}#vidyard-popbox-constraint.landscape{height:90vh}#vidyard-popbox-constraint.portrait{width:90vw}\', ""]);\n  }, function (e, t, n) {\n    var r = n(11);\n    "string" == typeof r && (r = [[e.i, r, ""]]);\n    var i = {\n      hmr: !0,\n      transform: void 0,\n      insertInto: void 0\n    };\n    n(9)(r, i);\n    r.locals && (e.exports = r.locals);\n  }, function (e, t) {\n    var n,\n      r,\n      i = e.exports = {};\n    function o() {\n      throw new Error("setTimeout has not been defined");\n    }\n    function a() {\n      throw new Error("clearTimeout has not been defined");\n    }\n    function s(e) {\n      if (n === setTimeout) return setTimeout(e, 0);\n      if ((n === o || !n) && setTimeout) return n = setTimeout, setTimeout(e, 0);\n      try {\n        return n(e, 0);\n      } catch (t) {\n        try {\n          return n.call(null, e, 0);\n        } catch (t) {\n          return n.call(this, e, 0);\n        }\n      }\n    }\n    !function () {\n      try {\n        n = "function" == typeof setTimeout ? setTimeout : o;\n      } catch (e) {\n        n = o;\n      }\n      try {\n        r = "function" == typeof clearTimeout ? clearTimeout : a;\n      } catch (e) {\n        r = a;\n      }\n    }();\n    var u,\n      c = [],\n      l = !1,\n      d = -1;\n    function f() {\n      l && u && (l = !1, u.length ? c = u.concat(c) : d = -1, c.length && p());\n    }\n    function p() {\n      if (!l) {\n        var e = s(f);\n        l = !0;\n        for (var t = c.length; t;) {\n          for (u = c, c = []; ++d < t;) u && u[d].run();\n          d = -1, t = c.length;\n        }\n        u = null, l = !1, function (e) {\n          if (r === clearTimeout) return clearTimeout(e);\n          if ((r === a || !r) && clearTimeout) return r = clearTimeout, clearTimeout(e);\n          try {\n            r(e);\n          } catch (t) {\n            try {\n              return r.call(null, e);\n            } catch (t) {\n              return r.call(this, e);\n            }\n          }\n        }(e);\n      }\n    }\n    function h(e, t) {\n      this.fun = e, this.array = t;\n    }\n    function v() {}\n    i.nextTick = function (e) {\n      var t = new Array(arguments.length - 1);\n      if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];\n      c.push(new h(e, t)), 1 !== c.length || l || s(p);\n    }, h.prototype.run = function () {\n      this.fun.apply(null, this.array);\n    }, i.title = "browser", i.browser = !0, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = v, i.addListener = v, i.once = v, i.off = v, i.removeListener = v, i.removeAllListeners = v, i.emit = v, i.prependListener = v, i.prependOnceListener = v, i.listeners = function (e) {\n      return [];\n    }, i.binding = function (e) {\n      throw new Error("process.binding is not supported");\n    }, i.cwd = function () {\n      return "/";\n    }, i.chdir = function (e) {\n      throw new Error("process.chdir is not supported");\n    }, i.umask = function () {\n      return 0;\n    };\n  }, function (e, t, n) {\n    (function (e, t) {\n      !function (e, n) {\n        "use strict";\n\n        if (!e.setImmediate) {\n          var r,\n            i,\n            o,\n            a,\n            s,\n            u = 1,\n            c = {},\n            l = !1,\n            d = e.document,\n            f = Object.getPrototypeOf && Object.getPrototypeOf(e);\n          f = f && f.setTimeout ? f : e, "[object process]" === {}.toString.call(e.process) ? r = function r(e) {\n            t.nextTick(function () {\n              h(e);\n            });\n          } : !function () {\n            if (e.postMessage && !e.importScripts) {\n              var t = !0,\n                n = e.onmessage;\n              return e.onmessage = function () {\n                t = !1;\n              }, e.postMessage("", "*"), e.onmessage = n, t;\n            }\n          }() ? e.MessageChannel ? ((o = new MessageChannel()).port1.onmessage = function (e) {\n            h(e.data);\n          }, r = function r(e) {\n            o.port2.postMessage(e);\n          }) : d && "onreadystatechange" in d.createElement("script") ? (i = d.documentElement, r = function r(e) {\n            var t = d.createElement("script");\n            t.onreadystatechange = function () {\n              h(e), t.onreadystatechange = null, i.removeChild(t), t = null;\n            }, i.appendChild(t);\n          }) : r = function r(e) {\n            setTimeout(h, 0, e);\n          } : (a = "setImmediate$" + Math.random() + "$", s = function s(t) {\n            t.source === e && "string" == typeof t.data && 0 === t.data.indexOf(a) && h(+t.data.slice(a.length));\n          }, e.addEventListener ? e.addEventListener("message", s, !1) : e.attachEvent("onmessage", s), r = function r(t) {\n            e.postMessage(a + t, "*");\n          }), f.setImmediate = function (e) {\n            "function" != typeof e && (e = new Function("" + e));\n            for (var t = new Array(arguments.length - 1), n = 0; n < t.length; n++) t[n] = arguments[n + 1];\n            var i = {\n              callback: e,\n              args: t\n            };\n            return c[u] = i, r(u), u++;\n          }, f.clearImmediate = p;\n        }\n        function p(e) {\n          delete c[e];\n        }\n        function h(e) {\n          if (l) setTimeout(h, 0, e);else {\n            var t = c[e];\n            if (t) {\n              l = !0;\n              try {\n                !function (e) {\n                  var t = e.callback,\n                    r = e.args;\n                  switch (r.length) {\n                    case 0:\n                      t();\n                      break;\n                    case 1:\n                      t(r[0]);\n                      break;\n                    case 2:\n                      t(r[0], r[1]);\n                      break;\n                    case 3:\n                      t(r[0], r[1], r[2]);\n                      break;\n                    default:\n                      t.apply(n, r);\n                  }\n                }(t);\n              } finally {\n                p(e), l = !1;\n              }\n            }\n          }\n        }\n      }("undefined" == typeof self ? void 0 === e ? this : e : self);\n    }).call(this, n(0), n(13));\n  }, function (e, t, n) {\n    (function (e) {\n      var r = void 0 !== e && e || "undefined" != typeof self && self || window,\n        i = Function.prototype.apply;\n      function o(e, t) {\n        this._id = e, this._clearFn = t;\n      }\n      t.setTimeout = function () {\n        return new o(i.call(setTimeout, r, arguments), clearTimeout);\n      }, t.setInterval = function () {\n        return new o(i.call(setInterval, r, arguments), clearInterval);\n      }, t.clearTimeout = t.clearInterval = function (e) {\n        e && e.close();\n      }, o.prototype.unref = o.prototype.ref = function () {}, o.prototype.close = function () {\n        this._clearFn.call(r, this._id);\n      }, t.enroll = function (e, t) {\n        clearTimeout(e._idleTimeoutId), e._idleTimeout = t;\n      }, t.unenroll = function (e) {\n        clearTimeout(e._idleTimeoutId), e._idleTimeout = -1;\n      }, t._unrefActive = t.active = function (e) {\n        clearTimeout(e._idleTimeoutId);\n        var t = e._idleTimeout;\n        t >= 0 && (e._idleTimeoutId = setTimeout(function () {\n          e._onTimeout && e._onTimeout();\n        }, t));\n      }, n(14), t.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== e && e.setImmediate || this && this.setImmediate, t.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== e && e.clearImmediate || this && this.clearImmediate;\n    }).call(this, n(0));\n  }]);\n  console.log(\'after window.vidyardEmbed\', window.vidyardEmbed);\n}\n\n/* eslint-enable *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///634\n')},702:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _site_vendor_vidyard_v4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(634);\n/* harmony import */ var _components_video_player_v1_vidyard_video_optimization_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(703);\n/* harmony import */ var _components_video_player_v1_vidyard_video_optimization_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_components_video_player_v1_vidyard_video_optimization_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_video_player_v1_inline_player_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(704);\n/* harmony import */ var _components_video_player_v1_inline_player_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_components_video_player_v1_inline_player_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_video_player_v1_video_vimeo_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(705);\n/* harmony import */ var _components_video_player_v1_video_vimeo_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_components_video_player_v1_video_vimeo_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_video_player_v1_video_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(706);\n/* harmony import */ var _components_video_player_v1_video_utils_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_components_video_player_v1_video_utils_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _components_video_player_v1_video_modal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(707);\n/* harmony import */ var _components_video_player_v1_video_modal_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_components_video_player_v1_video_modal_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _video_clientlib_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(708);\n/* harmony import */ var _video_clientlib_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_video_clientlib_scss__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJwYWNrL3NpdGUvdmlkZW8tY2xpZW50bGliLnRzP2NmMzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFzQztBQUMrQjtBQUNiO0FBQ0Y7QUFDQTtBQUNBO0FBSXRCIiwiZmlsZSI6IjcwMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vVmlkZW8gQ29tcG9uZW50IEluY2x1ZGVzIFxuLy8jcmVnaW9uIEphdmFzY3JpcHRcbmltcG9ydCBcIi4uL3NpdGUvdmVuZG9yL3ZpZHlhcmQtdjQuanNcIjtcbmltcG9ydCBcIi4uL2NvbXBvbmVudHMvdmlkZW8tcGxheWVyL3YxL3ZpZHlhcmQtdmlkZW8tb3B0aW1pemF0aW9uLmpzXCI7XG5pbXBvcnQgJy4uL2NvbXBvbmVudHMvdmlkZW8tcGxheWVyL3YxL2lubGluZS1wbGF5ZXIuanMnO1xuaW1wb3J0IFwiLi4vY29tcG9uZW50cy92aWRlby1wbGF5ZXIvdjEvdmlkZW8tdmltZW8uanNcIjtcbmltcG9ydCBcIi4uL2NvbXBvbmVudHMvdmlkZW8tcGxheWVyL3YxL3ZpZGVvLXV0aWxzLmpzXCI7XG5pbXBvcnQgXCIuLi9jb21wb25lbnRzL3ZpZGVvLXBsYXllci92MS92aWRlby1tb2RhbC5qc1wiO1xuLy8jZW5kcmVnaW9uXG5cbi8vI3JlZ2lvbiBTdHlsZXNcbmltcG9ydCBcIi4vdmlkZW8tY2xpZW50bGliLnNjc3NcIjtcbi8vI2VuZHJlZ2lvblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///702\n")},703:function(module,exports){eval("/* eslint-disable no-unused-vars*/\nvar Splunk_app_vidyardVideo = Splunk_app_vidyardVideo || {};\n(function (Splunk_app_vidyardVideo) {\n  var vidyardUUID = '';\n  var loadingPlaceholder = '';\n  var vidyardPlayerWrapper;\n  var isVideoOptimized = false;\n  var videoOptions = {};\n  var isInlineElement = false;\n  var isInsideParent = false;\n  var modalParent = '';\n  Splunk_app_vidyardVideo.componentConstructor = function () {\n    var vidyardId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var placeholderElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var isOptimized = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var videoPlayerOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var isInline = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    vidyardUUID = vidyardId;\n    loadingPlaceholder = placeholderElement;\n    vidyardPlayerWrapper = '#vidyard-video-player-wrapper-' + vidyardUUID;\n    isVideoOptimized = isOptimized;\n    videoOptions = videoPlayerOptions;\n    isInlineElement = isInline;\n    Splunk_app_vidyardVideo.amIonModal();\n  };\n  Splunk_app_vidyardVideo.amIonModal = function () {\n    if (loadingPlaceholder != '') {\n      var $modalParent = $(loadingPlaceholder).parents('.splunk-superModal');\n      if ($modalParent.length === 1) {\n        isInsideParent = true;\n        modalParent = $modalParent;\n        var vidyardObject = $.extend(modalParent, {\n          vidyardID: vidyardUUID,\n          playerImgPlaceholder: loadingPlaceholder,\n          playerWrapper: '#vidyard-video-player-wrapper-' + vidyardUUID,\n          isOptimized: isVideoOptimized,\n          videoOptions: videoOptions\n        });\n        $modalParent.on('show.bs.modal', function () {\n          Splunk_app_vidyardVideo.loadVideoPlayer(vidyardObject.playerWrapper, vidyardObject.vidyardID, vidyardObject.playerImgPlaceholder, vidyardObject.isOptimized, vidyardObject.videoOptions);\n        });\n        $modalParent.on('hidden.bs.modal', function () {\n          Splunk_app_vidyardVideo.unLoadVideoPlayer(vidyardObject.playerWrapper);\n        });\n      } else {\n        isInsideParent = false;\n        var placeholder;\n        isInlineElement ? placeholder = loadingPlaceholder.parentElement : placeholder = '#vidyard-video-player-wrapper-' + vidyardUUID;\n        var _vidyardObject = $.extend(modalParent, {\n          vidyardID: vidyardUUID,\n          playerImgPlaceholder: loadingPlaceholder,\n          playerWrapper: placeholder,\n          isOptimized: isVideoOptimized,\n          videoOptions: videoOptions\n        });\n        Splunk_app_vidyardVideo.loadVideoPlayer(_vidyardObject.playerWrapper, _vidyardObject.vidyardID, _vidyardObject.playerImgPlaceholder, _vidyardObject.isOptimized, _vidyardObject.videoOptions);\n      }\n    } else {\n      console.log('loadingPlaceholder is empty, cant check for parent');\n    }\n  };\n  Splunk_app_vidyardVideo.unLoadVideoPlayer = function () {\n    var videoPlayer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    if (videoPlayer != '') {\n      $(videoPlayer).empty();\n    } else {\n      console.log('videoPlayer is empty, cant remove player');\n    }\n  };\n  Splunk_app_vidyardVideo.loadVideoPlayer = function () {\n    var videoPlayer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var videoId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var imagePlaceholder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var isOptimized = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n    var videoOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    if (videoId != '' || videoPlayer != '' || imagePlaceholder != '') {\n      $(videoPlayer).append(getEmbedCode(videoId, videoOptions));\n      $(imagePlaceholder).remove();\n      initApp(window.vidyardEmbed);\n    } else {\n      console.log('UUID is empty, cant create player');\n    }\n  };\n  var getEmbedCode = function getEmbedCode(uuid, videoOptions) {\n    var player = \"\\n      <script type=\\\"text/javascript\\\" async src=\\\"https://play.vidyard.com/embed/v4.js\\\"><\/script>\\n      <script type='text/javascript' src=\\\"//play.vidyard.com/v1/progress-events.js\\\"><\/script>\\n      <img\\n        style=\\\"width: 100%; margin: auto; display: block;\\\"\\n        class=\\\"vidyard-player-embed\\\"\\n        src=\\\"https://play.vidyard.com/\".concat(uuid, \".jpg\\\"\\n        data-uuid=\\\"\").concat(uuid, \"\\\"\\n        data-v=\\\"4\\\"\\n        data-type=\\\"inline\\\"\\n        data-autoplay=\\\"\").concat(videoOptions.autoplay ? '1' : '0', \"\\\"\\n        data-cc=\\\"\").concat(videoOptions.cc ? videoOptions.cc : '', \"\\\"\\n      />\\n    \");\n    return player;\n  };\n  //Video Tracking Analytics Code\n  function initApp() {\n    console.log('video Initiated');\n    vidyardEmbed.api.addReadyListener(function (data, player) {\n      vidyardEmbed.api.progressEvents(function (result) {\n        if (result.event === 0) {\n          console.log(\"video started: \" + result.player.metadata.chapters_attributes[result.chapter].video_attributes.name);\n          dataLayer.push({\n            event: 'vidyard',\n            eventCategory: 'video',\n            eventAction: \"Play\",\n            eventLabel: result.player.metadata.chapters_attributes[result.chapter].video_attributes.name\n          });\n          //GA4 Datalayer Push\n          dataLayer.push({\n            event: 'video_start',\n            video_duration: result.player.metadata.length_in_seconds,\n            video_provider: 'vidyard',\n            video_title: result.player.metadata.chapters_attributes[result.chapter].video_attributes.name\n          });\n        } else if (result.event === 100) {\n          console.log(\"video complete: \" + result.player.metadata.chapters_attributes[result.chapter].video_attributes.name);\n          dataLayer.push({\n            event: 'vidyard',\n            eventCategory: 'video',\n            eventAction: \"Finish\",\n            eventLabel: result.player.metadata.chapters_attributes[result.chapter].video_attributes.name\n          });\n          //GA4 Datalayer Push Video Complete\n          dataLayer.push({\n            event: 'video_complete',\n            video_duration: result.player.metadata.length_in_seconds,\n            video_provider: 'vidyard',\n            video_title: result.player.metadata.chapters_attributes[result.chapter].video_attributes.name\n          });\n        } else {\n          console.log(result.event + \"% of video: \" + result.player.metadata.chapters_attributes[result.chapter].video_attributes.name);\n          dataLayer.push({\n            event: 'vidyard',\n            eventCategory: 'video',\n            eventAction: \"Watched \" + result.event + \"%\",\n            eventLabel: result.player.metadata.chapters_attributes[result.chapter].video_attributes.name\n          });\n\n          //GA4 Datalayer Push Video Progress\n          dataLayer.push({\n            event: 'video_progress',\n            video_duration: result.player.metadata.length_in_seconds,\n            video_provider: 'vidyard',\n            video_title: result.player.metadata.chapters_attributes[result.chapter].video_attributes.name,\n            video_threshold: result.event + \"%\"\n          });\n        }\n      }, [0, 1, 25, 50, 75, 95, 100]); // end progress events\n    }); // end player listener\n  }\n})(window.Splunk_app_vidyardVideo = window.Splunk_app_vidyardVideo || {});\n\n/* eslint-enable no-unused-vars*///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///703\n")},704:function(module,exports){eval('$(function () {\n  $(".video-producthero.video").css("display", "block");\n  var videoInline = document.querySelectorAll(\'.splunk-video-inline img\');\n  if (videoInline) {\n    //get the lang based on https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n    var lang = $(\'body\').attr(\'lang\').toLowerCase();\n    if (lang) {\n      var localeLangCCCode = {\n        "en_us": "en",\n        "de_de": "de",\n        "fr_fr": "fr",\n        "ja_jp": \'ja\',\n        "ko_kr": "ko",\n        "zh_cn": "zh-cmn",\n        "zh_tw": "zh-tr"\n      };\n      var cc = localeLangCCCode[lang];\n      console.log(\'inline-player video cc:\', cc);\n      videoInline.forEach(function (video) {\n        video.setAttribute(\'data-cc\', cc);\n      });\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJwYWNrL2NvbXBvbmVudHMvdmlkZW8tcGxheWVyL3YxL2lubGluZS1wbGF5ZXIuanM/ZDYxMSJdLCJuYW1lcyI6WyIkIiwiY3NzIiwidmlkZW9JbmxpbmUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsYW5nIiwiYXR0ciIsInRvTG93ZXJDYXNlIiwibG9jYWxlTGFuZ0NDQ29kZSIsImNjIiwiY29uc29sZSIsImxvZyIsImZvckVhY2giLCJ2aWRlbyIsInNldEF0dHJpYnV0ZSJdLCJtYXBwaW5ncyI6IkFBQUFBLENBQUMsQ0FBQyxZQUFZO0VBQ1pBLENBQUMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDQyxHQUFHLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQztFQUNyRCxJQUFNQyxXQUFXLEdBQUdDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsMEJBQTBCLENBQUM7RUFDekUsSUFBSUYsV0FBVyxFQUFFO0lBQ2Y7SUFDQSxJQUFNRyxJQUFJLEdBQUdMLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQ00sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDQyxXQUFXLENBQUMsQ0FBQztJQUVqRCxJQUFJRixJQUFJLEVBQUU7TUFDUixJQUFJRyxnQkFBZ0IsR0FBRztRQUNuQixPQUFPLEVBQUUsSUFBSTtRQUNiLE9BQU8sRUFBRSxJQUFJO1FBQ2IsT0FBTyxFQUFFLElBQUk7UUFDYixPQUFPLEVBQUUsSUFBSTtRQUNiLE9BQU8sRUFBRSxJQUFJO1FBQ2IsT0FBTyxFQUFFLFFBQVE7UUFDakIsT0FBTyxFQUFFO01BQ2IsQ0FBQztNQUNELElBQUlDLEVBQUUsR0FBR0QsZ0JBQWdCLENBQUNILElBQUksQ0FBQztNQUUvQkssT0FBTyxDQUFDQyxHQUFHLENBQUMseUJBQXlCLEVBQUVGLEVBQUUsQ0FBQztNQUUxQ1AsV0FBVyxDQUFDVSxPQUFPLENBQUMsVUFBVUMsS0FBSyxFQUFFO1FBQ25DQSxLQUFLLENBQUNDLFlBQVksQ0FBQyxTQUFTLEVBQUVMLEVBQUUsQ0FBQztNQUNuQyxDQUFDLENBQUM7SUFDSjtFQUNGO0FBQ0YsQ0FBQyxDQUFDIiwiZmlsZSI6IjcwNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoZnVuY3Rpb24gKCkge1xuICAkKFwiLnZpZGVvLXByb2R1Y3RoZXJvLnZpZGVvXCIpLmNzcyhcImRpc3BsYXlcIiwgXCJibG9ja1wiKTtcbiAgY29uc3QgdmlkZW9JbmxpbmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc3BsdW5rLXZpZGVvLWlubGluZSBpbWcnKTtcbiAgaWYgKHZpZGVvSW5saW5lKSB7XG4gICAgLy9nZXQgdGhlIGxhbmcgYmFzZWQgb24gaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGlzdF9vZl9JU09fNjM5LTFfY29kZXNcbiAgICBjb25zdCBsYW5nID0gJCgnYm9keScpLmF0dHIoJ2xhbmcnKS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgaWYgKGxhbmcpIHtcbiAgICAgIGxldCBsb2NhbGVMYW5nQ0NDb2RlID0ge1xuICAgICAgICAgIFwiZW5fdXNcIjogXCJlblwiLFxuICAgICAgICAgIFwiZGVfZGVcIjogXCJkZVwiLFxuICAgICAgICAgIFwiZnJfZnJcIjogXCJmclwiLFxuICAgICAgICAgIFwiamFfanBcIjogJ2phJyxcbiAgICAgICAgICBcImtvX2tyXCI6IFwia29cIixcbiAgICAgICAgICBcInpoX2NuXCI6IFwiemgtY21uXCIsXG4gICAgICAgICAgXCJ6aF90d1wiOiBcInpoLXRyXCJcbiAgICAgIH07XG4gICAgICBsZXQgY2MgPSBsb2NhbGVMYW5nQ0NDb2RlW2xhbmddO1xuXG4gICAgICBjb25zb2xlLmxvZygnaW5saW5lLXBsYXllciB2aWRlbyBjYzonLCBjYyk7XG5cbiAgICAgIHZpZGVvSW5saW5lLmZvckVhY2goZnVuY3Rpb24gKHZpZGVvKSB7XG4gICAgICAgIHZpZGVvLnNldEF0dHJpYnV0ZSgnZGF0YS1jYycsIGNjKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///704\n')},705:function(module,exports){eval("/* eslint-disable no-inner-declarations */\n$(function () {\n  var vimeoVideos = $('.video-frame.vimeo');\n  var vimeoVideo_standalone = $('.video-frame.vimeo.standalone');\n  var id_array = [];\n\n  // for video collection page\n  if (vimeoVideos.length > 0) {\n    var setThumbHeight = function setThumbHeight() {\n      $('.video-frame.vimeo').each(function () {\n        var thumb_width = $(this).width();\n        var thumb_ratio = 360 / 640;\n        $(this).find('.vimeoThumb').height(thumb_width * thumb_ratio);\n      });\n    };\n    var getVimeoThumb = function getVimeoThumb(content_id) {\n      var id_img = \"#previewImage-\" + content_id;\n      if ($(id_img).data('thumbnail-src') == '$') {\n        $.getJSON(\"https://vimeo.com/api/v2/video/\".concat(content_id, \".json\"), function (data) {\n          $(id_img).attr('src', data[0].thumbnail_large);\n        });\n      }\n    };\n    setThumbHeight();\n    $(window).on('resize', function () {\n      setThumbHeight();\n    });\n    vimeoVideos.find('.video-link').each(function () {\n      id_array.push($(this).data('contentid'));\n    });\n    id_array.forEach(function (id) {\n      // get video preview image\n      getVimeoThumb(id);\n\n      // create, load and unload player on modal \"show.bs.modal\"\n      var player;\n      $('.videomodal-' + id).on(\"show.bs.modal\", function () {\n        player = new Vimeo.Player($('#player-' + id), {\n          id: id\n        });\n        $('html').addClass('stop-scrolling');\n      });\n      $('.videomodal-' + id).on(\"hide.bs.modal\", function () {\n        player.unload();\n        $('html').removeClass('stop-scrolling');\n      });\n    });\n  }\n\n  // for single video page\n  if (vimeoVideo_standalone.length > 0) {\n    $('.vimeo-video').addClass('single');\n    $('.splunk-video').empty();\n    $('.splunk-video').append('<div class=\"embed-responsive embed-responsive-16by9\"></div>');\n    var singleVimeo = new Vimeo.Player($('.splunk-video .embed-responsive'), {\n      id: id_array[0]\n    });\n    return singleVimeo;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJwYWNrL2NvbXBvbmVudHMvdmlkZW8tcGxheWVyL3YxL3ZpZGVvLXZpbWVvLmpzP2JjZWMiXSwibmFtZXMiOlsiJCIsInZpbWVvVmlkZW9zIiwidmltZW9WaWRlb19zdGFuZGFsb25lIiwiaWRfYXJyYXkiLCJsZW5ndGgiLCJzZXRUaHVtYkhlaWdodCIsImVhY2giLCJ0aHVtYl93aWR0aCIsIndpZHRoIiwidGh1bWJfcmF0aW8iLCJmaW5kIiwiaGVpZ2h0IiwiZ2V0VmltZW9UaHVtYiIsImNvbnRlbnRfaWQiLCJpZF9pbWciLCJkYXRhIiwiZ2V0SlNPTiIsImNvbmNhdCIsImF0dHIiLCJ0aHVtYm5haWxfbGFyZ2UiLCJ3aW5kb3ciLCJvbiIsInB1c2giLCJmb3JFYWNoIiwiaWQiLCJwbGF5ZXIiLCJWaW1lbyIsIlBsYXllciIsImFkZENsYXNzIiwidW5sb2FkIiwicmVtb3ZlQ2xhc3MiLCJlbXB0eSIsImFwcGVuZCIsInNpbmdsZVZpbWVvIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBQSxDQUFDLENBQUMsWUFBWTtFQUVaLElBQU1DLFdBQVcsR0FBR0QsQ0FBQyxDQUFDLG9CQUFvQixDQUFDO0VBQzNDLElBQU1FLHFCQUFxQixHQUFHRixDQUFDLENBQUMsK0JBQStCLENBQUM7RUFDaEUsSUFBSUcsUUFBUSxHQUFHLEVBQUU7O0VBRWpCO0VBQ0EsSUFBSUYsV0FBVyxDQUFDRyxNQUFNLEdBQUcsQ0FBQyxFQUFFO0lBQUEsSUFFakJDLGNBQWMsR0FBdkIsU0FBU0EsY0FBY0EsQ0FBQSxFQUFHO01BQ3hCTCxDQUFDLENBQUMsb0JBQW9CLENBQUMsQ0FBQ00sSUFBSSxDQUFDLFlBQVk7UUFDdkMsSUFBTUMsV0FBVyxHQUFHUCxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNRLEtBQUssQ0FBQyxDQUFDO1FBQ25DLElBQU1DLFdBQVcsR0FBSSxHQUFHLEdBQUcsR0FBSTtRQUMvQlQsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDVSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUNDLE1BQU0sQ0FBQ0osV0FBVyxHQUFHRSxXQUFXLENBQUM7TUFDL0QsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUFBLElBT1FHLGFBQWEsR0FBdEIsU0FBU0EsYUFBYUEsQ0FBQ0MsVUFBVSxFQUFFO01BQ2pDLElBQU1DLE1BQU0sR0FBRyxnQkFBZ0IsR0FBR0QsVUFBVTtNQUM1QyxJQUFJYixDQUFDLENBQUNjLE1BQU0sQ0FBQyxDQUFDQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksR0FBRyxFQUFFO1FBQzFDZixDQUFDLENBQUNnQixPQUFPLG1DQUFBQyxNQUFBLENBQW1DSixVQUFVLFlBQVMsVUFBVUUsSUFBSSxFQUFFO1VBQzdFZixDQUFDLENBQUNjLE1BQU0sQ0FBQyxDQUFDSSxJQUFJLENBQUMsS0FBSyxFQUFFSCxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUNJLGVBQWUsQ0FBQztRQUNoRCxDQUFDLENBQUM7TUFDSjtJQUNGLENBQUM7SUFiRGQsY0FBYyxDQUFDLENBQUM7SUFFaEJMLENBQUMsQ0FBQ29CLE1BQU0sQ0FBQyxDQUFDQyxFQUFFLENBQUMsUUFBUSxFQUFFLFlBQVk7TUFDakNoQixjQUFjLENBQUMsQ0FBQztJQUNsQixDQUFDLENBQUM7SUFXRkosV0FBVyxDQUFDUyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUNKLElBQUksQ0FBQyxZQUFZO01BQy9DSCxRQUFRLENBQUNtQixJQUFJLENBQUN0QixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNlLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMxQyxDQUFDLENBQUM7SUFFRlosUUFBUSxDQUFDb0IsT0FBTyxDQUFDLFVBQVVDLEVBQUUsRUFBRTtNQUM3QjtNQUNBWixhQUFhLENBQUNZLEVBQUUsQ0FBQzs7TUFFakI7TUFDQSxJQUFJQyxNQUFNO01BQ1Z6QixDQUFDLENBQUMsY0FBYyxHQUFHd0IsRUFBRSxDQUFDLENBQUNILEVBQUUsQ0FBQyxlQUFlLEVBQUUsWUFBWTtRQUNyREksTUFBTSxHQUFHLElBQUlDLEtBQUssQ0FBQ0MsTUFBTSxDQUFDM0IsQ0FBQyxDQUFDLFVBQVUsR0FBR3dCLEVBQUUsQ0FBQyxFQUFFO1VBQUVBLEVBQUUsRUFBRUE7UUFBRyxDQUFDLENBQUM7UUFDekR4QixDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM0QixRQUFRLENBQUMsZ0JBQWdCLENBQUM7TUFDdEMsQ0FBQyxDQUFDO01BQ0Y1QixDQUFDLENBQUMsY0FBYyxHQUFHd0IsRUFBRSxDQUFDLENBQUNILEVBQUUsQ0FBQyxlQUFlLEVBQUUsWUFBWTtRQUNyREksTUFBTSxDQUFDSSxNQUFNLENBQUMsQ0FBQztRQUNmN0IsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDOEIsV0FBVyxDQUFDLGdCQUFnQixDQUFDO01BQ3pDLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQztFQUVKOztFQUVBO0VBQ0EsSUFBSTVCLHFCQUFxQixDQUFDRSxNQUFNLEdBQUcsQ0FBQyxFQUFFO0lBQ3BDSixDQUFDLENBQUMsY0FBYyxDQUFDLENBQUM0QixRQUFRLENBQUMsUUFBUSxDQUFDO0lBQ3BDNUIsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDK0IsS0FBSyxDQUFDLENBQUM7SUFDMUIvQixDQUFDLENBQUMsZUFBZSxDQUFDLENBQUNnQyxNQUFNLENBQUMsNkRBQTZELENBQUM7SUFDeEYsSUFBTUMsV0FBVyxHQUFHLElBQUlQLEtBQUssQ0FBQ0MsTUFBTSxDQUFDM0IsQ0FBQyxDQUFDLGlDQUFpQyxDQUFDLEVBQUU7TUFBRXdCLEVBQUUsRUFBRXJCLFFBQVEsQ0FBQyxDQUFDO0lBQUUsQ0FBQyxDQUFDO0lBQy9GLE9BQU84QixXQUFXO0VBQ3BCO0FBQ0YsQ0FBQyxDQUFDIiwiZmlsZSI6IjcwNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWlubmVyLWRlY2xhcmF0aW9ucyAqL1xuJChmdW5jdGlvbiAoKSB7XG5cbiAgY29uc3QgdmltZW9WaWRlb3MgPSAkKCcudmlkZW8tZnJhbWUudmltZW8nKTtcbiAgY29uc3QgdmltZW9WaWRlb19zdGFuZGFsb25lID0gJCgnLnZpZGVvLWZyYW1lLnZpbWVvLnN0YW5kYWxvbmUnKTtcbiAgbGV0IGlkX2FycmF5ID0gW107XG5cbiAgLy8gZm9yIHZpZGVvIGNvbGxlY3Rpb24gcGFnZVxuICBpZiAodmltZW9WaWRlb3MubGVuZ3RoID4gMCkge1xuXG4gICAgZnVuY3Rpb24gc2V0VGh1bWJIZWlnaHQoKSB7XG4gICAgICAkKCcudmlkZW8tZnJhbWUudmltZW8nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc3QgdGh1bWJfd2lkdGggPSAkKHRoaXMpLndpZHRoKCk7XG4gICAgICAgIGNvbnN0IHRodW1iX3JhdGlvID0gKDM2MCAvIDY0MCk7XG4gICAgICAgICQodGhpcykuZmluZCgnLnZpbWVvVGh1bWInKS5oZWlnaHQodGh1bWJfd2lkdGggKiB0aHVtYl9yYXRpbylcbiAgICAgIH0pXG4gICAgfVxuICAgIHNldFRodW1iSGVpZ2h0KCk7XG5cbiAgICAkKHdpbmRvdykub24oJ3Jlc2l6ZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHNldFRodW1iSGVpZ2h0KCk7XG4gICAgfSlcblxuICAgIGZ1bmN0aW9uIGdldFZpbWVvVGh1bWIoY29udGVudF9pZCkge1xuICAgICAgY29uc3QgaWRfaW1nID0gXCIjcHJldmlld0ltYWdlLVwiICsgY29udGVudF9pZDtcbiAgICAgIGlmICgkKGlkX2ltZykuZGF0YSgndGh1bWJuYWlsLXNyYycpID09ICckJykge1xuICAgICAgICAkLmdldEpTT04oYGh0dHBzOi8vdmltZW8uY29tL2FwaS92Mi92aWRlby8ke2NvbnRlbnRfaWR9Lmpzb25gLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICQoaWRfaW1nKS5hdHRyKCdzcmMnLCBkYXRhWzBdLnRodW1ibmFpbF9sYXJnZSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZpbWVvVmlkZW9zLmZpbmQoJy52aWRlby1saW5rJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICBpZF9hcnJheS5wdXNoKCQodGhpcykuZGF0YSgnY29udGVudGlkJykpXG4gICAgfSlcblxuICAgIGlkX2FycmF5LmZvckVhY2goZnVuY3Rpb24gKGlkKSB7XG4gICAgICAvLyBnZXQgdmlkZW8gcHJldmlldyBpbWFnZVxuICAgICAgZ2V0VmltZW9UaHVtYihpZCk7XG5cbiAgICAgIC8vIGNyZWF0ZSwgbG9hZCBhbmQgdW5sb2FkIHBsYXllciBvbiBtb2RhbCBcInNob3cuYnMubW9kYWxcIlxuICAgICAgbGV0IHBsYXllcjtcbiAgICAgICQoJy52aWRlb21vZGFsLScgKyBpZCkub24oXCJzaG93LmJzLm1vZGFsXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcGxheWVyID0gbmV3IFZpbWVvLlBsYXllcigkKCcjcGxheWVyLScgKyBpZCksIHsgaWQ6IGlkIH0pO1xuICAgICAgICAkKCdodG1sJykuYWRkQ2xhc3MoJ3N0b3Atc2Nyb2xsaW5nJyk7XG4gICAgICB9KTtcbiAgICAgICQoJy52aWRlb21vZGFsLScgKyBpZCkub24oXCJoaWRlLmJzLm1vZGFsXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcGxheWVyLnVubG9hZCgpO1xuICAgICAgICAkKCdodG1sJykucmVtb3ZlQ2xhc3MoJ3N0b3Atc2Nyb2xsaW5nJyk7XG4gICAgICB9KTtcbiAgICB9KVxuXG4gIH1cblxuICAvLyBmb3Igc2luZ2xlIHZpZGVvIHBhZ2VcbiAgaWYgKHZpbWVvVmlkZW9fc3RhbmRhbG9uZS5sZW5ndGggPiAwKSB7XG4gICAgJCgnLnZpbWVvLXZpZGVvJykuYWRkQ2xhc3MoJ3NpbmdsZScpO1xuICAgICQoJy5zcGx1bmstdmlkZW8nKS5lbXB0eSgpO1xuICAgICQoJy5zcGx1bmstdmlkZW8nKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJlbWJlZC1yZXNwb25zaXZlIGVtYmVkLXJlc3BvbnNpdmUtMTZieTlcIj48L2Rpdj4nKTtcbiAgICBjb25zdCBzaW5nbGVWaW1lbyA9IG5ldyBWaW1lby5QbGF5ZXIoJCgnLnNwbHVuay12aWRlbyAuZW1iZWQtcmVzcG9uc2l2ZScpLCB7IGlkOiBpZF9hcnJheVswXSB9KTtcbiAgICByZXR1cm4gc2luZ2xlVmltZW87XG4gIH1cbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///705\n")},706:function(module,exports){eval("$(function () {\n  try {\n    //first we look for video asset elements\n    var videoAssetArray = $('.splunkv2-videoAsset .splunkv2-videoAsset-video');\n\n    // Here we create the function that will trigger the video reload on scroll\n    var playOnVisible = function playOnVisible(videoArray) {\n      videoArray.each(function (index, video) {\n        // Here we check first if they selected the video to restart on scroll\n        //here adding the custom functions for the video\n        video.isInViewport = function () {\n          var elementTop = $(video).offset().top;\n          var elementBottom = elementTop + $(video).outerHeight();\n          var viewportTop = $(window).scrollTop();\n          var viewportBottom = viewportTop + $(window).height();\n\n          // Here we make sure the video is inside the viewport\n          return viewportBottom > elementTop && viewportTop < elementBottom;\n        };\n        if (video.restartOnScroll == 'true') {\n          if (video.isInViewport()) {\n            if (!video.isOnViewport) {\n              video.isOnViewport = true;\n              video.restartAndPlayVideo();\n            }\n          } else {\n            if (video.isOnViewport) {\n              // video.pause();\n              video.isOnViewport = false;\n            }\n          }\n        }\n      });\n    };\n    // Here we loop between all videos to add its different props\n    videoAssetArray.each(function (index, video) {\n      //here adding the custom functions for the video\n      video.isInViewport = function () {\n        var elementTop = $(this).offset().top;\n        var viewportTop = $(window).scrollTop();\n        // here we make sure the video is inside the viewport\n        return elementTop <= viewportTop;\n      };\n      // This is the function we'll call to restart the video\n      video.restartAndPlayVideo = function () {\n        // we play the video\n        // this.pause();\n        this.currentTime = 0;\n        this.play();\n      };\n\n      // now we check if the video will reload on scroll\n      video.restartOnScroll = video.getAttribute(\"restart-on-scroll\");\n\n      //here we initialize the video property for is it visible??\n      video.isOnViewport = false;\n\n      //then we run the function to see if it really its on viewport\n      if (video.restartOnScroll) {\n        if (video.isInViewport()) {\n          video.restartAndPlayVideo();\n        }\n      }\n    });\n\n    // here we add the functionality to the elements on scroll, visible and play them\n    window.addEventListener('scroll', function () {\n      playOnVisible(videoAssetArray);\n    }, false);\n  } catch (error) {\n    console.log('Something went wrong with the HTML5 video asset script...', error);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJwYWNrL2NvbXBvbmVudHMvdmlkZW8tcGxheWVyL3YxL3ZpZGVvLXV0aWxzLmpzPzJjNmYiXSwibmFtZXMiOlsiJCIsInZpZGVvQXNzZXRBcnJheSIsInBsYXlPblZpc2libGUiLCJ2aWRlb0FycmF5IiwiZWFjaCIsImluZGV4IiwidmlkZW8iLCJpc0luVmlld3BvcnQiLCJlbGVtZW50VG9wIiwib2Zmc2V0IiwidG9wIiwiZWxlbWVudEJvdHRvbSIsIm91dGVySGVpZ2h0Iiwidmlld3BvcnRUb3AiLCJ3aW5kb3ciLCJzY3JvbGxUb3AiLCJ2aWV3cG9ydEJvdHRvbSIsImhlaWdodCIsInJlc3RhcnRPblNjcm9sbCIsImlzT25WaWV3cG9ydCIsInJlc3RhcnRBbmRQbGF5VmlkZW8iLCJjdXJyZW50VGltZSIsInBsYXkiLCJnZXRBdHRyaWJ1dGUiLCJhZGRFdmVudExpc3RlbmVyIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQUEsQ0FBQyxDQUFDLFlBQVk7RUFDWixJQUFJO0lBQ0Y7SUFDQSxJQUFNQyxlQUFlLEdBQUdELENBQUMsQ0FBQyxpREFBaUQsQ0FBQzs7SUFFNUU7SUFDQSxJQUFNRSxhQUFhLEdBQUcsU0FBaEJBLGFBQWFBLENBQWFDLFVBQVUsRUFBRTtNQUMxQ0EsVUFBVSxDQUFDQyxJQUFJLENBQUMsVUFBVUMsS0FBSyxFQUFFQyxLQUFLLEVBQUU7UUFDdEM7UUFDQTtRQUNBQSxLQUFLLENBQUNDLFlBQVksR0FBRyxZQUFZO1VBQy9CLElBQU1DLFVBQVUsR0FBR1IsQ0FBQyxDQUFDTSxLQUFLLENBQUMsQ0FBQ0csTUFBTSxDQUFDLENBQUMsQ0FBQ0MsR0FBRztVQUN4QyxJQUFNQyxhQUFhLEdBQUdILFVBQVUsR0FBR1IsQ0FBQyxDQUFDTSxLQUFLLENBQUMsQ0FBQ00sV0FBVyxDQUFDLENBQUM7VUFDekQsSUFBTUMsV0FBVyxHQUFHYixDQUFDLENBQUNjLE1BQU0sQ0FBQyxDQUFDQyxTQUFTLENBQUMsQ0FBQztVQUN6QyxJQUFNQyxjQUFjLEdBQUdILFdBQVcsR0FBR2IsQ0FBQyxDQUFDYyxNQUFNLENBQUMsQ0FBQ0csTUFBTSxDQUFDLENBQUM7O1VBRXZEO1VBQ0EsT0FBUUQsY0FBYyxHQUFHUixVQUFVLElBQU1LLFdBQVcsR0FBR0YsYUFBYztRQUN2RSxDQUFDO1FBQ0QsSUFBSUwsS0FBSyxDQUFDWSxlQUFlLElBQUksTUFBTSxFQUFFO1VBQ25DLElBQUlaLEtBQUssQ0FBQ0MsWUFBWSxDQUFDLENBQUMsRUFBRTtZQUN4QixJQUFJLENBQUNELEtBQUssQ0FBQ2EsWUFBWSxFQUFFO2NBQ3ZCYixLQUFLLENBQUNhLFlBQVksR0FBRyxJQUFJO2NBQ3pCYixLQUFLLENBQUNjLG1CQUFtQixDQUFDLENBQUM7WUFDN0I7VUFDRixDQUFDLE1BQU07WUFDTCxJQUFJZCxLQUFLLENBQUNhLFlBQVksRUFBRTtjQUN0QjtjQUNBYixLQUFLLENBQUNhLFlBQVksR0FBRyxLQUFLO1lBQzVCO1VBQ0Y7UUFDRjtNQUNGLENBQUMsQ0FBQztJQUNKLENBQUM7SUFDRDtJQUNBbEIsZUFBZSxDQUFDRyxJQUFJLENBQUMsVUFBVUMsS0FBSyxFQUFFQyxLQUFLLEVBQUU7TUFDM0M7TUFDQUEsS0FBSyxDQUFDQyxZQUFZLEdBQUcsWUFBWTtRQUMvQixJQUFNQyxVQUFVLEdBQUdSLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQ1MsTUFBTSxDQUFDLENBQUMsQ0FBQ0MsR0FBRztRQUN2QyxJQUFNRyxXQUFXLEdBQUdiLENBQUMsQ0FBQ2MsTUFBTSxDQUFDLENBQUNDLFNBQVMsQ0FBQyxDQUFDO1FBQ3pDO1FBQ0EsT0FBT1AsVUFBVSxJQUFJSyxXQUFXO01BQ2xDLENBQUM7TUFDRDtNQUNBUCxLQUFLLENBQUNjLG1CQUFtQixHQUFHLFlBQVk7UUFDdEM7UUFDQTtRQUNBLElBQUksQ0FBQ0MsV0FBVyxHQUFHLENBQUM7UUFDcEIsSUFBSSxDQUFDQyxJQUFJLENBQUMsQ0FBQztNQUNiLENBQUM7O01BRUQ7TUFDQWhCLEtBQUssQ0FBQ1ksZUFBZSxHQUFHWixLQUFLLENBQUNpQixZQUFZLENBQUMsbUJBQW1CLENBQUM7O01BRS9EO01BQ0FqQixLQUFLLENBQUNhLFlBQVksR0FBRyxLQUFLOztNQUUxQjtNQUNBLElBQUliLEtBQUssQ0FBQ1ksZUFBZSxFQUFFO1FBQ3pCLElBQUlaLEtBQUssQ0FBQ0MsWUFBWSxDQUFDLENBQUMsRUFBRTtVQUN4QkQsS0FBSyxDQUFDYyxtQkFBbUIsQ0FBQyxDQUFDO1FBQzdCO01BQ0Y7SUFDRixDQUFDLENBQUM7O0lBRUY7SUFDQU4sTUFBTSxDQUFDVSxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsWUFBWTtNQUM1Q3RCLGFBQWEsQ0FBQ0QsZUFBZSxDQUFDO0lBQ2hDLENBQUMsRUFBRSxLQUFLLENBQUM7RUFFWCxDQUFDLENBQUMsT0FBT3dCLEtBQUssRUFBRTtJQUNkQyxPQUFPLENBQUNDLEdBQUcsQ0FBQywyREFBMkQsRUFBRUYsS0FBSyxDQUFDO0VBQ2pGO0FBQ0YsQ0FBQyxDQUFDIiwiZmlsZSI6IjcwNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoZnVuY3Rpb24gKCkge1xuICB0cnkge1xuICAgIC8vZmlyc3Qgd2UgbG9vayBmb3IgdmlkZW8gYXNzZXQgZWxlbWVudHNcbiAgICBjb25zdCB2aWRlb0Fzc2V0QXJyYXkgPSAkKCcuc3BsdW5rdjItdmlkZW9Bc3NldCAuc3BsdW5rdjItdmlkZW9Bc3NldC12aWRlbycpO1xuXG4gICAgLy8gSGVyZSB3ZSBjcmVhdGUgdGhlIGZ1bmN0aW9uIHRoYXQgd2lsbCB0cmlnZ2VyIHRoZSB2aWRlbyByZWxvYWQgb24gc2Nyb2xsXG4gICAgY29uc3QgcGxheU9uVmlzaWJsZSA9IGZ1bmN0aW9uICh2aWRlb0FycmF5KSB7XG4gICAgICB2aWRlb0FycmF5LmVhY2goZnVuY3Rpb24gKGluZGV4LCB2aWRlbykge1xuICAgICAgICAvLyBIZXJlIHdlIGNoZWNrIGZpcnN0IGlmIHRoZXkgc2VsZWN0ZWQgdGhlIHZpZGVvIHRvIHJlc3RhcnQgb24gc2Nyb2xsXG4gICAgICAgIC8vaGVyZSBhZGRpbmcgdGhlIGN1c3RvbSBmdW5jdGlvbnMgZm9yIHRoZSB2aWRlb1xuICAgICAgICB2aWRlby5pc0luVmlld3BvcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgY29uc3QgZWxlbWVudFRvcCA9ICQodmlkZW8pLm9mZnNldCgpLnRvcDtcbiAgICAgICAgICBjb25zdCBlbGVtZW50Qm90dG9tID0gZWxlbWVudFRvcCArICQodmlkZW8pLm91dGVySGVpZ2h0KCk7XG4gICAgICAgICAgY29uc3Qgdmlld3BvcnRUb3AgPSAkKHdpbmRvdykuc2Nyb2xsVG9wKCk7XG4gICAgICAgICAgY29uc3Qgdmlld3BvcnRCb3R0b20gPSB2aWV3cG9ydFRvcCArICQod2luZG93KS5oZWlnaHQoKTtcblxuICAgICAgICAgIC8vIEhlcmUgd2UgbWFrZSBzdXJlIHRoZSB2aWRlbyBpcyBpbnNpZGUgdGhlIHZpZXdwb3J0XG4gICAgICAgICAgcmV0dXJuICh2aWV3cG9ydEJvdHRvbSA+IGVsZW1lbnRUb3ApICYmICh2aWV3cG9ydFRvcCA8IGVsZW1lbnRCb3R0b20pO1xuICAgICAgICB9O1xuICAgICAgICBpZiAodmlkZW8ucmVzdGFydE9uU2Nyb2xsID09ICd0cnVlJykge1xuICAgICAgICAgIGlmICh2aWRlby5pc0luVmlld3BvcnQoKSkge1xuICAgICAgICAgICAgaWYgKCF2aWRlby5pc09uVmlld3BvcnQpIHtcbiAgICAgICAgICAgICAgdmlkZW8uaXNPblZpZXdwb3J0ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgdmlkZW8ucmVzdGFydEFuZFBsYXlWaWRlbygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAodmlkZW8uaXNPblZpZXdwb3J0KSB7XG4gICAgICAgICAgICAgIC8vIHZpZGVvLnBhdXNlKCk7XG4gICAgICAgICAgICAgIHZpZGVvLmlzT25WaWV3cG9ydCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcbiAgICAvLyBIZXJlIHdlIGxvb3AgYmV0d2VlbiBhbGwgdmlkZW9zIHRvIGFkZCBpdHMgZGlmZmVyZW50IHByb3BzXG4gICAgdmlkZW9Bc3NldEFycmF5LmVhY2goZnVuY3Rpb24gKGluZGV4LCB2aWRlbykge1xuICAgICAgLy9oZXJlIGFkZGluZyB0aGUgY3VzdG9tIGZ1bmN0aW9ucyBmb3IgdGhlIHZpZGVvXG4gICAgICB2aWRlby5pc0luVmlld3BvcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnRUb3AgPSAkKHRoaXMpLm9mZnNldCgpLnRvcDtcbiAgICAgICAgY29uc3Qgdmlld3BvcnRUb3AgPSAkKHdpbmRvdykuc2Nyb2xsVG9wKCk7XG4gICAgICAgIC8vIGhlcmUgd2UgbWFrZSBzdXJlIHRoZSB2aWRlbyBpcyBpbnNpZGUgdGhlIHZpZXdwb3J0XG4gICAgICAgIHJldHVybiBlbGVtZW50VG9wIDw9IHZpZXdwb3J0VG9wO1xuICAgICAgfTtcbiAgICAgIC8vIFRoaXMgaXMgdGhlIGZ1bmN0aW9uIHdlJ2xsIGNhbGwgdG8gcmVzdGFydCB0aGUgdmlkZW9cbiAgICAgIHZpZGVvLnJlc3RhcnRBbmRQbGF5VmlkZW8gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIHdlIHBsYXkgdGhlIHZpZGVvXG4gICAgICAgIC8vIHRoaXMucGF1c2UoKTtcbiAgICAgICAgdGhpcy5jdXJyZW50VGltZSA9IDA7XG4gICAgICAgIHRoaXMucGxheSgpO1xuICAgICAgfTtcblxuICAgICAgLy8gbm93IHdlIGNoZWNrIGlmIHRoZSB2aWRlbyB3aWxsIHJlbG9hZCBvbiBzY3JvbGxcbiAgICAgIHZpZGVvLnJlc3RhcnRPblNjcm9sbCA9IHZpZGVvLmdldEF0dHJpYnV0ZShcInJlc3RhcnQtb24tc2Nyb2xsXCIpO1xuXG4gICAgICAvL2hlcmUgd2UgaW5pdGlhbGl6ZSB0aGUgdmlkZW8gcHJvcGVydHkgZm9yIGlzIGl0IHZpc2libGU/P1xuICAgICAgdmlkZW8uaXNPblZpZXdwb3J0ID0gZmFsc2U7XG5cbiAgICAgIC8vdGhlbiB3ZSBydW4gdGhlIGZ1bmN0aW9uIHRvIHNlZSBpZiBpdCByZWFsbHkgaXRzIG9uIHZpZXdwb3J0XG4gICAgICBpZiAodmlkZW8ucmVzdGFydE9uU2Nyb2xsKSB7XG4gICAgICAgIGlmICh2aWRlby5pc0luVmlld3BvcnQoKSkge1xuICAgICAgICAgIHZpZGVvLnJlc3RhcnRBbmRQbGF5VmlkZW8oKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gaGVyZSB3ZSBhZGQgdGhlIGZ1bmN0aW9uYWxpdHkgdG8gdGhlIGVsZW1lbnRzIG9uIHNjcm9sbCwgdmlzaWJsZSBhbmQgcGxheSB0aGVtXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHBsYXlPblZpc2libGUodmlkZW9Bc3NldEFycmF5KTtcbiAgICB9LCBmYWxzZSk7XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmxvZygnU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2l0aCB0aGUgSFRNTDUgdmlkZW8gYXNzZXQgc2NyaXB0Li4uJywgZXJyb3IpO1xuICB9XG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///706\n")},707:function(module,exports){eval('var MODAL_TEMPLATES = {\n  SUPER_MODAL: "<div class=\\"splunk-superModal vidyard-modal modal fade-scale in\\" tabindex=\\"-1\\" role=\\"dialog\\" id=\\"yardvideo-modal-<%= videoID %>\\">\\n    <div class=\\"modal-dialog modal-fullscreen <%= videoTitle ? \'\' : (title && \'video-content\') %>\\" role=\\"document\\">\\n      <div class=\\"modal-content\\">\\n        <div class=\\"modal-header\\">\\n          <button data-track-analytics=\\"true\\" type=\\"button\\" class=\\"close\\" data-dismiss=\\"modal\\" aria-label=\\"Close\\">\\n            <span class=\\"close-hidden-text modal-close\\"  aria-hidden=\\"true\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\"modal-body container\\">\\n          <div class=\\"extended-section container-fluid\\">\\n            <div class=\\"row\\">\\n                \x3c!-- Video Not Optimized on Load --\x3e\\n                <img\\n                    style=\\"width: 100%; margin: auto; display: block;\\"\\n                    class=\\"vidyard-player-embed\\"\\n                    src=\\"https://play.vidyard.com/<%= videoID %>.jpg\\"\\n                    data-uuid=\\"<%= videoID %>\\"\\n                    data-v=\\"4\\"\\n                    data-type=\\"inline\\"\\n                    data-cc=\\"<%= ccLang %>\\"\\n                />\\n            </div>\\n          </div>\\n          <% if (videoTitle) { %>\\n              <div class=\\"splunk-superModal-title\\"><%= videoTitle %></div>\\n          <% } else if (title) { %>\\n            <div class=\\"splunk-video-content\\">\\n                <h1 class=\\"splunk-video-title\\"><%= title %></h1>\\n                <p class=\\"splunk-video-description\\"><%= contentsecdescription %></p>\\n                <div class=\\"splunk-video-content-cta\\">\\n                    <a class=\\"ga-cta splunk-btn sp-btn-black <%= cta1AnalyticsClass %>\\" href=\\"<%= cta1Url %>\\" target=\\"<%= cta1LinkUrlTarget %>\\"><span><%= cta1Text %></span></a>\\n                    <a class=\\"ga-cta splunk-btn sp-btn-black sp-btn-hollow <%= cta2AnalyticsClass %>\\" href=\\"<%= cta2Url %>\\" target=\\"<%= cta2LinkUrlTarget %>\\"><span><%= cta2Text %></span></a>\\n                </div>\\n            </div>\\n          <% } %>\\n        </div>\\n      </div>\\n    </div>\\n  </div>",\n  SUPER_MODAL_OPTIMIZED: "<div class=\\"splunk-superModal vidyard-modal modal fade-scale in\\" tabindex=\\"-1\\" role=\\"dialog\\" id=\\"yardvideo-modal-<%= videoID %>\\">\\n    <div class=\\"modal-dialog modal-fullscreen <%= videoTitle ? \'\' : (title && \'video-content\') %>\\" role=\\"document\\">\\n      <div class=\\"modal-content\\">\\n        <div class=\\"modal-header\\">\\n\\n          <button data-track-analytics=\\"true\\" type=\\"button\\" class=\\"close\\" data-dismiss=\\"modal\\" aria-label=\\"Close\\">\\n            <span class=\\"close-hidden-text modal-close\\" aria-hidden=\\"true\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\"modal-body container\\">\\n          <div class=\\"extended-section container-fluid\\">\\n            <div class=\\"row\\">\\n                \x3c!-- Video Optimized on Load --\x3e\\n                <img id=\\"vidyard-video-image-<%= videoID %>\\"\\n                  onload=\\"Splunk_app_vidyardVideo.componentConstructor(\'<%= videoID %>\', this, <%= optimized %>, { autoplay: <%= autoPlay %>, cc: \'<%= ccLang %>\'})\\"\\n                  src=\\"https://play.vidyard.com/<%= videoID %>.jpg\\" />\\n                <div id=\\"vidyard-video-player-wrapper-<%= videoID %>\\" class=\\"video\\"></div>\\n            </div>\\n          </div>\\n          <% if (videoTitle) { %>\\n              <div class=\\"splunk-superModal-title\\"><%= videoTitle %></div>\\n          <% } else if (title) { %>\\n            <div class=\\"splunk-video-content\\">\\n                <h1 class=\\"splunk-video-title\\"><%= title %></h1>\\n                <p class=\\"splunk-video-description\\"><%= contentsecdescription %></p>\\n                <div class=\\"splunk-video-content-cta\\">\\n                    <a class=\\"ga-cta splunk-btn sp-btn-black <%= cta1AnalyticsClass %>\\" href=\\"<%= cta1Url %>\\" target=\\"<%= cta1LinkUrlTarget %>\\"><span><%= cta1Text %></span></a>\\n                    <a class=\\"ga-cta splunk-btn sp-btn-black sp-btn-hollow <%= cta2AnalyticsClass %>\\" href=\\"<%= cta2Url %>\\" target=\\"<%= cta2LinkUrlTarget %>\\"><span><%= cta2Text %></span></a>\\n                </div>\\n            </div>\\n          <% } %>\\n        </div>\\n      </div>\\n    </div>\\n  </div>",\n  INLINE_VIDEO: "<img id=\\"vidyard-video-image-<%= videoID %>\\" onload=\\"Splunk_app_vidyardVideo.componentConstructor(\'<%= videoID %>\', this, <%= optimized %>, { autoplay: <%= autoPlay %>, cc: \'<%= ccLang %>\'}, true)\\"\\n                     src=\\"//play.vidyard.com/<%= videoID %>.jpg\\" />"\n};\n$(function () {\n  var modalSelector = \'.splunk-superModal\';\n  var vimoeModal = $(\'.splunk-superModal.vimeo-modal\');\n  var vimeoVideoLink = $(\'.vimeo-video .video-link\');\n  var vimeoModalFooter = $(\'.vimeo-modal .modal-footer\');\n  var vimeoModalClose = $(\'.vimeo-modal .modal-close\');\n  var vidyardLink = $(\'.splunk-videyardVideo-button\');\n  try {\n    $(".open-yardvideo-modal").each(function (index, videoModal) {\n      var currentUUID = $(videoModal).data("contentid");\n      var dataOptimized = $(videoModal).data("optimized");\n      var dataAutoPlay = $(videoModal).data("autoplay");\n      var dataVideoTitle = $(videoModal).data("video-title");\n      var title = $(videoModal).data("title");\n      var contentsecdescription = $(videoModal).data("contentsecdescription");\n      var cta1Text = $(videoModal).data("cta1-text");\n      var cta1Url = $(videoModal).data("cta1-url");\n      var cta1LinkUrlTarget = $(videoModal).data("cta1-link-url-target");\n      var cta1AnalyticsClass = $(videoModal).data("cta1-analytics-class");\n      var cta2Text = $(videoModal).data("cta2-text");\n      var cta2Url = $(videoModal).data("cta2-url");\n      var cta2LinkUrlTarget = $(videoModal).data("cta2-link-url-target");\n      var cta2AnalyticsClass = $(videoModal).data("cta2-analytics-class");\n      if ($("#yardvideo-modal-" + currentUUID).length > 0) {\n        //modal already rendered\n      } else {\n        //get the lang based on https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n        var lang = $(\'body\').attr(\'lang\').toLowerCase();\n        var localeLangCCCode = {\n          "en_us": "en",\n          "de_de": "de",\n          "fr_fr": "fr",\n          "ja_jp": \'ja\',\n          "ko_kr": "ko",\n          "zh_cn": "zh-cmn",\n          "zh_tw": "zh-tr"\n        };\n        var cc = localeLangCCCode[lang];\n        console.log(\'video-modal 1 video cc:\', cc);\n        var superModal;\n        //modal needs to render\n        // here we check if the optimized flag is applied so we can switch between both implementations\n        if (typeof dataOptimized !== \'undefined\' && dataOptimized !== null && dataOptimized === true) {\n          superModal = _.template(MODAL_TEMPLATES.SUPER_MODAL_OPTIMIZED);\n          // this in case not optimizations are selected we roll back to legacy/default player load\n        } else {\n          superModal = _.template(MODAL_TEMPLATES.SUPER_MODAL);\n        }\n        var superModalHTML = superModal({\n          "videoID": currentUUID,\n          "ccLang": cc,\n          "autoPlay": dataAutoPlay,\n          "optimized": dataOptimized,\n          "videoTitle": dataVideoTitle,\n          "title": title,\n          "contentsecdescription": contentsecdescription,\n          "cta1Text": cta1Text,\n          "cta1Url": cta1Url,\n          "cta1LinkUrlTarget": cta1LinkUrlTarget,\n          "cta1AnalyticsClass": cta1AnalyticsClass,\n          "cta2Text": cta2Text,\n          "cta2Url": cta2Url,\n          "cta2LinkUrlTarget": cta2LinkUrlTarget,\n          "cta2AnalyticsClass": cta2AnalyticsClass\n        });\n        $("body").append(superModalHTML);\n      }\n      $(videoModal).on(\'click\', function (evt) {\n        setTimeout(function () {\n          var $currentTarget = $(evt.currentTarget);\n          var modalId = $currentTarget.data(\'target\');\n          var $modalRef = $(modalId);\n          if (!($modalRef.hasClass(\'in\') || $modalRef.hasClass(\'show\'))) {\n            $modalRef.modal(\'show\');\n          }\n        }, 0);\n        setTimeout(function () {\n          if ($(window).width() < 768) {\n            $(\'.splunk-video-content-cta .splunk-btn\').each(function () {\n              if ($(this).find(\'span\').width() > $(this).width()) {\n                $(this).parent().addClass("stack");\n              }\n            });\n          }\n        }, 100);\n      });\n    });\n\n    // even bindings for modal buttons\n    $(\'.splunk-superModal\').find(\'.modal-header\').find(\'.close\').click(window.analyticsClickHandler);\n  } catch (error) {\n    console.log("Error setting video modals", error);\n  }\n  var vidyardParbaseClass = function vidyardParbaseClass() {\n    if ($(\'.splunk-videyardVideo-button\').length > 0) {\n      $(\'.splunk-videyardVideo-button\').parents(\'.video.base-component.parbase\').css({\n        \'display\': \'inline-block\',\n        \'width\': \'auto\'\n      });\n    }\n  };\n  vidyardParbaseClass();\n  var vidyardVideoEmbed = function vidyardVideoEmbed(el) {\n    var componentWrapper;\n    var vidyardInlineWrapper;\n    var lang = $(\'body\').attr(\'lang\').toLowerCase();\n    var localeLangCCCode = {\n      "en_us": "en",\n      "de_de": "de",\n      "fr_fr": "fr",\n      "ja_jp": \'ja\',\n      "ko_kr": "ko",\n      "zh_cn": "zh-cmn",\n      "zh_tw": "zh-tr"\n    };\n    var cc = localeLangCCCode[lang];\n    console.log(\'video-modal 2 video cc:\', cc);\n    var inlineVidyard = _.template(MODAL_TEMPLATES.INLINE_VIDEO);\n    if ($(el).hasClass(\'vidyard__customModal__wrapper__thumbnail\')) {\n      componentWrapper = $(el);\n    } else if ($(el).hasClass(\'vidyard__customModal__wrapper__playIcon\')) {\n      componentWrapper = $(el).parents(\'.vidyard__customModal\').find(\'.vidyard__customModal__wrapper__thumbnail\');\n    } else {\n      componentWrapper = $(el).find(\'.vidyard__customModal__wrapper__thumbnail\');\n    }\n    vidyardInlineWrapper = componentWrapper.find(\'.vidyard-player-embed--wrapper\');\n    var videoID = vidyardInlineWrapper.attr(\'data-uuid\');\n    var playerComplete = function playerComplete() {\n      var players = VidyardV4.players;\n      $.each(players, function (index, player) {\n        if (player.uuid == videoID) {\n          player.on(\'playerComplete\', function () {\n            componentWrapper.removeClass(\'showVideo videoEmbed\');\n            vidyardInlineWrapper.empty();\n          });\n        }\n      });\n    };\n    var playerReady = function playerReady() {\n      var players = VidyardV4.players;\n      if ($(el).hasClass(\'autoPlayed\')) {\n        $.each(players, function (index, player) {\n          if (player.uuid == videoID && $(window).width() < 768 && $(player.container).parents(".autoPlayed")[0] === el) {\n            player.on(\'ready\', function () {\n              player.play();\n            });\n          }\n        });\n      }\n    };\n    if (!componentWrapper.hasClass(\'showVideo\')) {\n      var inlineVidyardHtml = inlineVidyard({\n        "videoID": videoID,\n        "ccLang": cc,\n        "autoPlay": 1,\n        "optimized": true,\n        "videoTitle": \'My Video\'\n      });\n      vidyardInlineWrapper.append(inlineVidyardHtml);\n      setTimeout(function () {\n        componentWrapper.addClass(\'showVideo\');\n      }, 800);\n      setTimeout(function () {\n        playerComplete();\n      }, 5000);\n      setTimeout(function () {\n        playerReady();\n      }, 3000);\n    }\n  };\n  var configureVidyard = function configureVidyard() {\n    $(".vidyard__customModal .vidyard__customModal__content .contentHeader, .vidyard__customModal .vidyard__customModal__content .contentDescription").click(function (e) {\n      e.stopPropagation();\n    });\n    $(\'.vidyardInline.autoPlayed\').each(function () {\n      vidyardVideoEmbed(this);\n    });\n\n    // $(".vidyardInline .vidyard__customModal__wrapper__thumbnail, .vidyardInline .vidyard__customModal__wrapper__playIcon").click(function() {\n    //   vidyardVideoEmbed(this);\n    // });\n    $(".vidyardInline .vidyard__customModal__wrapper__thumbnail, .vidyardInline .vidyard__customModal__wrapper__playIcon").each(function () {\n      // First we look if the attribute \'data-eventloaded\' exists,\n      // if it does that means that we already gave it a click event and we can skip it.\n      if ($(this).attr(\'data-eventLoaded\') === undefined) {\n        // We add the click event\n        $(this).click(function () {\n          vidyardVideoEmbed(this);\n        });\n        // And now we add the event attribute so in future passes it doesn\'t multiply events on the same element\n        $(this).attr(\'data-eventLoaded\', \'true\');\n      }\n    });\n  };\n  configureVidyard();\n  var removeModalpadding = function removeModalpadding() {\n    if ($(\'.vidyard__customModal__content.noTitle.noDescription\').children().length == 0) {\n      $(\'.modal-body\').css(\'padding\', \'0px\');\n      $(\'.vidyard__customModal\').css(\'margin-bottom\', \'0px\');\n    }\n  };\n  removeModalpadding();\n  $(\'.splunk-video .video-link\').on(\'click\', function (evt) {\n    setTimeout(function () {\n      var $currentTarget = $(evt.currentTarget);\n      var modalId = $currentTarget.data(\'target\');\n      var $modalRef = $(modalId);\n      if (!($modalRef.hasClass(\'in\') || $modalRef.hasClass(\'show\'))) {\n        console.log(\'DEBUG: show modal\');\n        $modalRef.modal(\'show\');\n      }\n    }, 0);\n  });\n\n  //after all modals are set, add the autoplay on shown functionality\n  $(modalSelector).on("shown.bs.modal", function (e) {\n    $(\'html\').addClass(\'modal-open\');\n    try {\n      //make sure there is a vidyard-player-container in the modal\n      if (typeof $(e.currentTarget).find(".vidyard-player-container") !== "undefined") {\n        //get the uuid\n        var uuid = $(e.currentTarget).find(".vidyard-player-container").attr("uuid");\n\n        //make sure the uuid is not undefined\n        if (typeof uuid !== "undefined" && $(e.relatedTarget).data("autoplay") == 1) {\n          //cycle through players and pause the related one\n          var players = VidyardV4.players;\n          $.each(players, function (index, player) {\n            if (player.uuid == uuid) {\n              player.play();\n            }\n          });\n        }\n      }\n      trackAnalytics();\n    } catch (error) {\n      //do nothing\n    }\n  });\n  $(modalSelector).on("hidden.bs.modal", function (e) {\n    setTimeout(function () {\n      $(vidyardLink).blur();\n    }, 1);\n  });\n\n  //after all modals are set, add the pause on close functionality\n  $(modalSelector).on("hidden.bs.modal", function (e) {\n    $(\'html\').removeClass(\'modal-open\');\n    try {\n      //make sure there is a vidyard-player-container in the modal\n      if (typeof $(e.currentTarget).find(".vidyard-player-container") !== "undefined") {\n        //get the uuid\n        var uuid = $(e.currentTarget).find(".vidyard-player-container").attr("uuid");\n\n        //make sure the uuid is not undefined\n        if (typeof uuid !== "undefined") {\n          //cycle through players and pause the related one\n          var players = VidyardV4.players;\n          $.each(players, function (index, player) {\n            if (player.uuid == uuid) {\n              player.pause();\n            }\n          });\n        }\n      }\n    } catch (error) {\n      //do nothing\n    }\n  });\n  window.vidyardEmbed ? initApp(window.vidyardEmbed) : window.onVidyardAPI = function (vyApi) {\n    return initApp(vyApi);\n  };\n\n  // this code is used for adding, displaying and hiding the title and decription of videos\n  function initApp() {\n    window.vidyardEmbed.api.addReadyListener(function (_, player) {\n      player.on(\'play\', function () {\n        $(this.element).find(\'.yardvideo-container\').addClass(\'hidden\');\n      });\n      player.on(\'pause\', function () {\n        $(this.element).find(\'.yardvideo-container\').removeClass(\'hidden\');\n      });\n    });\n  }\n  //Video Analytics Tracking\n  function trackAnalytics() {\n    console.log(\'video Initiated\');\n    var count = 0;\n    vidyardEmbed.api.addReadyListener(function (data, player) {\n      while (count < 1) {\n        vidyardEmbed.api.progressEvents(function (result) {\n          if (result.event === 0) {\n            console.log("video started: " + result.player.metadata.chapters_attributes[result.chapter].video_attributes.name);\n            dataLayer.push({\n              event: \'vidyard\',\n              eventCategory: \'video\',\n              eventAction: "Play",\n              eventLabel: result.player.metadata.chapters_attributes[result.chapter].video_attributes.name\n            });\n            //GA4 Datalayer Push Video Start\n            dataLayer.push({\n              event: \'video_start\',\n              video_duration: result.player.metadata.length_in_seconds,\n              video_provider: \'vidyard\',\n              video_title: result.player.metadata.chapters_attributes[result.chapter].video_attributes.name\n            });\n          } else if (result.event === 100) {\n            console.log("video complete: " + result.player.metadata.chapters_attributes[result.chapter].video_attributes.name);\n            dataLayer.push({\n              event: \'vidyard\',\n              eventCategory: \'video\',\n              eventAction: "Finish",\n              eventLabel: result.player.metadata.chapters_attributes[result.chapter].video_attributes.name\n            });\n            //GA4 Datalayer Push Video Complete\n            dataLayer.push({\n              event: \'video_complete\',\n              video_duration: result.player.metadata.length_in_seconds,\n              video_provider: \'vidyard\',\n              video_title: result.player.metadata.chapters_attributes[result.chapter].video_attributes.name\n            });\n          } else {\n            console.log(result.event + "% of video: " + result.player.metadata.chapters_attributes[result.chapter].video_attributes.name);\n            dataLayer.push({\n              event: \'vidyard\',\n              eventCategory: \'video\',\n              eventAction: "Watched " + result.event + "%",\n              eventLabel: result.player.metadata.chapters_attributes[result.chapter].video_attributes.name\n            });\n            //GA4 Datalayer Push Video Progress\n            dataLayer.push({\n              event: \'video_progress\',\n              video_duration: result.player.metadata.length_in_seconds,\n              video_provider: \'vidyard\',\n              video_title: result.player.metadata.chapters_attributes[result.chapter].video_attributes.name,\n              video_threshold: result.event + "%"\n            });\n          }\n        }, [0, 1, 25, 50, 75, 95, 100]); // end progress events\n\n        count++;\n      } // end while loop\n    }); // end player listener\n  }\n  $(vimeoVideoLink).on(\'click\', function (e) {\n    var $currentTarget = $(e.currentTarget);\n    var modalId = $currentTarget.data(\'target\');\n    e.preventDefault();\n    $(modalId).css(\'display\', \'block\');\n    $(vimeoModalFooter).css(\'display\', \'none\');\n  });\n  $(vimeoModalClose).on(\'click\', function (e) {\n    $(vimoeModal).css(\'display\', \'none\');\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///707\n')},708:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJwYWNrL3NpdGUvdmlkZW8tY2xpZW50bGliLnNjc3M/M2MzMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI3MDguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///708\n")}});