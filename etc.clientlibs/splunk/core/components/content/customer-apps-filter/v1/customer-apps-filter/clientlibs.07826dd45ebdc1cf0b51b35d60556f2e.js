!(function(U){var B={};function e(Q){var F;return(B[Q]||(F=B[Q]={i:Q,l:!1,exports:{}},U[Q].call(F.exports,F,F.exports,e),F.l=!0,F)).exports}e.m=U,e.c=B,e.d=function(Q,F,U){e.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:U})},e.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},e.t=function(F,Q){if(1&Q&&(F=e(F)),8&Q)return F;if(4&Q&&"object"==typeof F&&F&&F.__esModule)return F;var U=Object.create(null);if(e.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:F}),2&Q&&"string"!=typeof F)for(var B in F)e.d(U,B,function(Q){return F[Q]}.bind(null,B));return U},e.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return e.d(F,"a",F),F},e.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},e.p="/",e(e.s=833)})({0:function(module,exports){eval('function _typeof(o) {\n  "@babel/helpers - typeof";\n\n  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanM/NzAzNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gKG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvO1xuICB9IDogZnVuY3Rpb24gKG8pIHtcbiAgICByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbztcbiAgfSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzKSwgX3R5cGVvZihvKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n')},1:function(module,exports,__webpack_require__){eval('// TODO(Babel 8): Remove this file.\n\nvar runtime = __webpack_require__(72)();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === "object") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function("r", "regeneratorRuntime = r")(runtime);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/YTM0YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxjQUFjLG1CQUFPLENBQUMsRUFBK0I7QUFDckQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPKEJhYmVsIDgpOiBSZW1vdmUgdGhpcyBmaWxlLlxuXG52YXIgcnVudGltZSA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3JlZ2VuZXJhdG9yUnVudGltZVwiKSgpO1xubW9kdWxlLmV4cG9ydHMgPSBydW50aW1lO1xuXG4vLyBDb3BpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvYmxvYi9tYWluL3BhY2thZ2VzL3J1bnRpbWUvcnVudGltZS5qcyNMNzM2PVxudHJ5IHtcbiAgcmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbn0gY2F0Y2ggKGFjY2lkZW50YWxTdHJpY3RNb2RlKSB7XG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gXCJvYmplY3RcIikge1xuICAgIGdsb2JhbFRoaXMucmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbiAgfSBlbHNlIHtcbiAgICBGdW5jdGlvbihcInJcIiwgXCJyZWdlbmVyYXRvclJ1bnRpbWUgPSByXCIpKHJ1bnRpbWUpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n')},122:function(module,exports){eval('function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hcnJheUxpa2VUb0FycmF5LmpzPzVhNDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLHdDQUF3QyxTQUFTO0FBQ2pEO0FBQ0E7QUFDQSIsImZpbGUiOiIxMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikge1xuICBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSBhcnIyW2ldID0gYXJyW2ldO1xuICByZXR1cm4gYXJyMjtcbn1cbm1vZHVsZS5leHBvcnRzID0gX2FycmF5TGlrZVRvQXJyYXksIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///122\n')},155:function(module,exports,__webpack_require__){eval('var arrayLikeToArray = __webpack_require__(122);\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qcz82NjEzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QixtQkFBTyxDQUFDLEdBQXVCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxNTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlMaWtlVG9BcnJheSA9IHJlcXVpcmUoXCIuL2FycmF5TGlrZVRvQXJyYXkuanNcIik7XG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gIGlmICghbykgcmV0dXJuO1xuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7XG4gIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXksIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///155\n')},198:function(module,exports,__webpack_require__){eval('var arrayLikeToArray = __webpack_require__(122);\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hcnJheVdpdGhvdXRIb2xlcy5qcz8yMjM2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QixtQkFBTyxDQUFDLEdBQXVCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjE5OC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcnJheUxpa2VUb0FycmF5ID0gcmVxdWlyZShcIi4vYXJyYXlMaWtlVG9BcnJheS5qc1wiKTtcbmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkoYXJyKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX2FycmF5V2l0aG91dEhvbGVzLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///198\n')},199:function(module,exports){eval('function _iterableToArray(iter) {\n  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pdGVyYWJsZVRvQXJyYXkuanM/MTFiMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxOTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgaXRlcltTeW1ib2wuaXRlcmF0b3JdICE9IG51bGwgfHwgaXRlcltcIkBAaXRlcmF0b3JcIl0gIT0gbnVsbCkgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9pdGVyYWJsZVRvQXJyYXksIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///199\n')},200:function(module,exports){eval('function _nonIterableSpread() {\n  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9ub25JdGVyYWJsZVNwcmVhZC5qcz8wNjc2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIwMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9ub25JdGVyYWJsZVNwcmVhZCwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///200\n')},3:function(module,exports){eval('function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzP2M5NzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoaW5mby5kb25lKSB7XG4gICAgcmVzb2x2ZSh2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICB9XG59XG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcbiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBfYXN5bmNUb0dlbmVyYXRvciwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n')},48:function(module,exports,__webpack_require__){eval('var arrayWithoutHoles = __webpack_require__(198);\nvar iterableToArray = __webpack_require__(199);\nvar unsupportedIterableToArray = __webpack_require__(155);\nvar nonIterableSpread = __webpack_require__(200);\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b0NvbnN1bWFibGVBcnJheS5qcz80NDhhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdCQUF3QixtQkFBTyxDQUFDLEdBQXdCO0FBQ3hELHNCQUFzQixtQkFBTyxDQUFDLEdBQXNCO0FBQ3BELGlDQUFpQyxtQkFBTyxDQUFDLEdBQWlDO0FBQzFFLHdCQUF3QixtQkFBTyxDQUFDLEdBQXdCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjQ4LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5V2l0aG91dEhvbGVzID0gcmVxdWlyZShcIi4vYXJyYXlXaXRob3V0SG9sZXMuanNcIik7XG52YXIgaXRlcmFibGVUb0FycmF5ID0gcmVxdWlyZShcIi4vaXRlcmFibGVUb0FycmF5LmpzXCIpO1xudmFyIHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5ID0gcmVxdWlyZShcIi4vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanNcIik7XG52YXIgbm9uSXRlcmFibGVTcHJlYWQgPSByZXF1aXJlKFwiLi9ub25JdGVyYWJsZVNwcmVhZC5qc1wiKTtcbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIGFycmF5V2l0aG91dEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5KGFycikgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBub25JdGVyYWJsZVNwcmVhZCgpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfdG9Db25zdW1hYmxlQXJyYXksIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///48\n')},680:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJwYWNrL3NpdGUvY29tcG9uZW50cy9jdXN0b21lckFwcHNGaWx0ZXItY29tcG9uZW50LnNjc3M/N2ExOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI2ODAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///680\n")},72:function(module,exports,__webpack_require__){eval('var _typeof = __webpack_require__(0)["default"];\nfunction _regeneratorRuntime() {\n  "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = "function" == typeof Symbol ? Symbol : {},\n    a = i.iterator || "@@iterator",\n    c = i.asyncIterator || "@@asyncIterator",\n    u = i.toStringTag || "@@toStringTag";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, "");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, "_invoke", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: "normal",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: "throw",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = "suspendedStart",\n    l = "suspendedYield",\n    f = "executing",\n    s = "completed",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    ["next", "throw", "return"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if ("throw" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {\n          invoke("next", t, i, a);\n        }, function (t) {\n          invoke("throw", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke("throw", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, "_invoke", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error("Generator is already running");\n      if (o === s) {\n        if ("throw" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else "return" === n.method && n.abrupt("return", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if ("normal" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = "normal", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: "root"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || "" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if ("function" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + " is not iterable");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, "constructor", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {\n    var e = "function" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {\n    return this;\n  }), define(g, "toString", function () {\n    return "[object Generator]";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if ("throw" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if ("root" === i.tryLoc) return handle("end");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, "catchLoc"),\n            u = n.call(i, "finallyLoc");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error("try statement without catch or finally");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if ("throw" === t.type) throw t.arg;\n      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    "catch": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if ("throw" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error("illegal catch attempt");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, "next" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///72\n')},833:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(3);\nvar asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(1);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n\n// CONCATENATED MODULE: ./src/main/webpack/components/customer-overview/v1/app-plugin-filter.js\n\n\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-constant-condition */\n\nvar app_plugin_filter_SplunkSignalfx_app_integration = app_plugin_filter_SplunkSignalfx_app_integration || {};\n(function (SplunkSignalfx_app_integration) {\n  /* Private Variables */\n  var baseJsonList;\n  var allItemList;\n  var filteredList = {\n    result: '',\n    resultCount: 0\n  };\n  var isSearchActive = false;\n  var searchText = '';\n  var componentObject = '#appsPluginListFilter-container';\n  var listObject = '#appsPluginListFilter-mainContainer';\n  var searchObject = '#appsPluginListFilter-keyword';\n  var sideNavElement = '#appsPluginListFilter-LeftContainer-wrapper';\n  var mobileCollapseToggle = '#appsPluginListFilter-filterSection-container';\n  var closeSearch = '#appsPluginListFilter-keyword-closeButton';\n  var featuredTitle = '';\n  var allIntegrationTitle = '';\n  var sideNavTopOffset = 100;\n  var sidenavElement;\n  var appFilterElement;\n\n  /* Private Functions */\n  SplunkSignalfx_app_integration.componentConstructor = function (featuredTitleOutside, allIntegrationTitleOutside) {\n    /* here we bind the search input keyup into our search function */\n    $(listObject).hide();\n    $(searchObject).keyup(_.debounce(function () {\n      var $this = $(this);\n      searchList($this.val());\n    }, 500));\n    $(closeSearch).click(clearSearch);\n    featuredTitle = featuredTitleOutside;\n    allIntegrationTitle = allIntegrationTitleOutside;\n    sidenavElement = document.querySelector('#appsPluginListFilter-LeftContainer-wrapper');\n    appFilterElement = document.querySelector('#appsPluginListFilter-container');\n\n    // function for sticky nav behavior\n    $(window).scroll(function (event) {\n      window.requestAnimationFrame(sideNavScrollPositioning);\n    });\n    getUrlParameters();\n  };\n  var sideNavScrollPositioning = function sideNavScrollPositioning() {\n    if ($(document).width() > 767) {\n      var appFilterPositionViewport = appFilterElement.getBoundingClientRect();\n      var sideNavPositionViewport = sidenavElement.getBoundingClientRect();\n      var sidenavStyles = window.getComputedStyle(sidenavElement);\n      var sidenavBottomMargin = Number.parseInt(sidenavStyles.marginBottom.replace('px', ''));\n      var sidenavOuterHeight = Math.round(sideNavPositionViewport.height) + sidenavBottomMargin;\n      if (sidenavOuterHeight < Math.round(appFilterPositionViewport.height)) {\n        // this is when the component slides up the viewport\n        // so we stick the sidenav to the viewport\n        if (appFilterPositionViewport.top < sideNavTopOffset && appFilterPositionViewport.bottom > sidenavOuterHeight + sideNavTopOffset) {\n          if (!sidenavElement.classList.contains('fixed')) {\n            sidenavElement.classList.add('fixed');\n            sidenavElement.classList.remove('stickInBottom');\n          }\n        }\n\n        // this is in case the component's top element slides down the viewport\n        // so we un-stick the sidebar and put it on it's original place\n        else if (appFilterPositionViewport.top > sideNavTopOffset) {\n          if (sidenavElement.classList.contains('fixed')) {\n            sidenavElement.classList.remove('fixed');\n            sidenavElement.classList.remove('stickInBottom');\n          }\n        }\n\n        // this is in case the component's top element slides up outside the viewport\n        // so we un-stick the sidebar and put it in the bottom of the component\n        else if (appFilterPositionViewport.bottom < sidenavOuterHeight + sideNavTopOffset) {\n          if (!sidenavElement.classList.contains('stickInBottom')) {\n            sidenavElement.classList.remove('fixed');\n            sidenavElement.classList.add('stickInBottom');\n          }\n        }\n      }\n    }\n  };\n  var matchHeights = function matchHeights() {\n    //code jusf for desktop version\n    if ($(document).width() > 767) {\n      var sideNavPositionBottom = $(sideNavElement).offset().top + $(sideNavElement).outerHeight(true);\n      var listObjectPositionBottom = $(listObject).offset().top + $(listObject).outerHeight(true);\n      if (sideNavPositionBottom > listObjectPositionBottom) {\n        $(sideNavElement).removeClass('fixed');\n        $(sideNavElement).addClass('stickInBottom');\n      }\n    }\n  };\n  var isMobile = function isMobile() {\n    if ($(document).width() > 767) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  var collapseSidenavMobile = function collapseSidenavMobile() {\n    $(mobileCollapseToggle).collapse('hide');\n    $('.mobileCategories').addClass('collapsed');\n  };\n  var getUrlParameters = function getUrlParameters() {\n    var vars = {};\n    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n      vars[key] = value;\n    });\n\n    /* now we look for a search parameter in case they copy the url from somewhere */\n    if (window.location.href.indexOf('search') > -1) {\n      $(searchObject).val(vars['search']);\n      searchList(vars['search']);\n    }\n  };\n  var addTitle = function addTitle(titleOfList) {\n    return \"<div class=\\\"splunk2-h3 integrationItem-container-title\\\">\".concat(titleOfList, \"</div>\");\n  };\n  var generateDescription = function generateDescription(descriptionContent, additionalDescriptionContent) {\n    // first we check that the description doesn't come as undefined so it doesn't break\n    if (descriptionContent !== undefined) {\n      // first we check if additionalDescriptionContent value doesn't come undefined\n      if (additionalDescriptionContent === undefined || additionalDescriptionContent === '') {\n        return \"<div class=\\\"integrationItem-mainContainer-description splunk-body\\\">\".concat(descriptionContent, \"</div>\");\n      } else {\n        // first we generate a random number for the accordeon\n        var randomId = Math.round(Math.random() * 1000000);\n        if ($(descriptionContent).last()[0].nodeName == \"P\") {\n          var $lastParagraph = $(descriptionContent);\n          $lastParagraph.last().addClass('addMoreElement');\n          return \"\\n                        <div class=\\\"integrationItem-mainContainer-description splunk-body collapsed\\\" >\".concat($lastParagraph[0].outerHTML, \" <a class=\\\"integrationItem-mainContainer-description-showMore collapsed\\\" id=\\\"buttonExpand-\").concat(randomId, \"\\\" role=\\\"button\\\" onclick=\\\"javascript:SplunkSignalfx_app_integration.expandDescription('#collapse-\").concat(randomId, \"', '#buttonExpand-\").concat(randomId, \"')\\\">More</a></div>\\n                        <div class=\\\"integrationItem-mainContainer-additionalDescription collapse\\\" id=\\\"collapse-\").concat(randomId, \"\\\">\\n                            \").concat(additionalDescriptionContent, \"\\n                            <div>\\n                                <a class=\\\"integrationItem-mainContainer-description-showMore collapsed\\\" role=\\\"button\\\" id=\\\"buttonCollapse-\").concat(randomId, \"\\\" onclick=\\\"SplunkSignalfx_app_integration.collapseDescription('#collapse-\").concat(randomId, \"', '#buttonExpand-\").concat(randomId, \"')\\\">Less</a>\\n                            </div>\\n                        </div>\\n                    \");\n        } else {\n          return \"\\n                        <div class=\\\"integrationItem-mainContainer-description splunk-body collapsed\\\" >\".concat(descriptionContent, \"</div>\\n                        <div class=\\\"integrationItem-mainContainer-additionalDescription collapse\\\" id=\\\"collapse-\").concat(randomId, \"\\\">\").concat(additionalDescriptionContent, \"</div>\\n                        <div><a class=\\\"integrationItem-mainContainer-description-showMore collapsed\\\" role=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapse-\").concat(randomId, \"\\\" aria-expanded=\\\"false\\\">More</a></div>\\n                    \");\n        }\n      }\n    } else {\n      console.error('Description is coming as undefined, this is a required value');\n      return \"\";\n    }\n  };\n  var addItem = function addItem(listToAdd, itemObject) {\n    var itemToList = \"\\n            <div class=\\\"integrationItem-container\\\">\\n                <div class=\\\"integrationItem-logoContainer\\\">\\n                    <img src=\\\"\".concat(itemObject.integrationapplogo, \"\\\" />\\n                </div>\\n                <div class=\\\"integrationItem-mainContainer\\\">\\n                    <div class=\\\"integrationItem-mainContainer-title splunk2-h4\\\">\").concat(itemObject.title, \"</div>\\n                    \").concat(generateDescription(itemObject.description, itemObject.additionalDescription), \"\\n                    <div class=\\\"integrationItem-mainContainer-buttonLinks\\\">\\n                        \").concat(generateContentButtons(itemObject.buttonLinks), \"\\n                    </div>\\n                    <div class=\\\"integrationItem-mainContainer-categories\\\">\\n                        <span class=\\\"integrationItem-mainContainer-categories-placeholder splunk2-eyebrow\\\">Categories: </span>\\n                        \").concat(generateCategoriesList(itemObject.tagvalues), \"\\n                    </div>\\n                </div>\\n            </div>\\n        \");\n    listToAdd.result += itemToList;\n    listToAdd.resultCount++;\n  };\n  var emptyResultContent = function emptyResultContent() {\n    var filteringTitle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var emptyResult = '';\n\n    //first we add the title of the filtering or seach we made that returned no items if there's any assigned\n    if (filteringTitle !== '') {\n      emptyResult = addTitle(filteringTitle);\n    }\n\n    // now we add the default no result content\n    emptyResult += \"\\n            <div class=\\\"integrationItem-container\\\">\\n                <div class=\\\"integrationItem-mainContainer\\\">\\n                <div class=\\\"integrationItem-mainContainer-title splunk2-h4\\\">No items found</div>\\n                </div>\\n            </div>\\n        \";\n\n    //now we return the result\n    return emptyResult;\n  };\n  var generateAllIntegrationsList = /*#__PURE__*/function () {\n    var _ref = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee(appList) {\n      var callback,\n        listLoop,\n        tagFound,\n        tagLoop,\n        tagValuesSplitted,\n        _listLoop,\n        _tagFound,\n        _tagLoop,\n        _tagValuesSplitted,\n        _args = arguments;\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            callback = _args.length > 1 && _args[1] !== undefined ? _args[1] : '';\n            // first we're gonna do the featured lists\n            if (appList.length > 0) {\n              // now that we know that there is indeed we can continue to loop to search for the one we need\n              filteredList.result = addTitle(featuredTitle);\n              for (listLoop = 0; listLoop < appList.length; listLoop++) {\n                tagFound = false;\n                for (tagLoop = 0; tagLoop < appList[listLoop].tagvalues.length; tagLoop++) {\n                  tagValuesSplitted = appList[listLoop].tagvalues[tagLoop].split('/'); //now we check if the value exists\n                  if (tagValuesSplitted[tagValuesSplitted.length - 1] === 'feature') {\n                    tagFound = true;\n                  }\n                }\n                if (tagFound) {\n                  addItem(filteredList, appList[listLoop]);\n                }\n              }\n\n              //now we go trough the rest of the lists\n              filteredList.result += addTitle(allIntegrationTitle);\n              for (_listLoop = 0; _listLoop < appList.length; _listLoop++) {\n                _tagFound = false;\n                for (_tagLoop = 0; _tagLoop < appList[_listLoop].tagvalues.length; _tagLoop++) {\n                  _tagValuesSplitted = appList[_listLoop].tagvalues[_tagLoop].split('/'); //now we check if the value exists\n                  if (_tagValuesSplitted[_tagValuesSplitted.length - 1] === 'feature') {\n                    _tagFound = true;\n                  }\n                }\n                if (!_tagFound) {\n                  addItem(filteredList, appList[_listLoop]);\n                }\n              }\n              if (typeof callback == \"function\") {\n                callback();\n              }\n            } else {\n              filteredList.result = emptyResultContent(allIntegrationTitle);\n            }\n\n            //then the rest of the list\n            return _context.abrupt(\"return\", filteredList.result);\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function generateAllIntegrationsList(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var generateContentButtons = function generateContentButtons(buttonsList) {\n    var resultList = '';\n\n    // first we check if the buttons list is not empty\n    if (buttonsList !== undefined && buttonsList.length > 0) {\n      resultList = '';\n      $.each(buttonsList, function (i, val) {\n        if (val != \"\") {\n          var parsedInfo = JSON.parse(val);\n          resultList += \"\\n                        <div class=\\\"splunk-button-aem\\\">\\n                            <a  class=\\\"splunk-btn sp-btn-borderless sp-btn-pink spacing-right ga-cta\\\" href=\\\"\".concat(parsedInfo.path, \"\\\" target=\\\"_blank\\\">\").concat(parsedInfo.title, \"</a>\\n                        </div>\\n                    \");\n        }\n      });\n    }\n    return resultList;\n  };\n  var generateCategoriesList = function generateCategoriesList(categoriesArray) {\n    var formattedCategories = '';\n    if (categoriesArray.length > 0) {\n      for (var x = 0; x < categoriesArray.length; x++) {\n        var tagValuesSplitted = categoriesArray[x].split('/');\n        // now we check if the categorie come with a parent childs\n        if (tagValuesSplitted.length === 3) {\n          var tagValueTitle = tagValuesSplitted[tagValuesSplitted.length - 1].replace(/-/g, ' ');\n          formattedCategories += \"\\n                        <div class=\\\"integrationItem-mainContainer-categories-item parentItem\\\">\\n                            <a  role=\\\"button\\\" \\n                                onclick=\\\"javascript:SplunkSignalfx_app_integration.filterBy('\".concat(tagValuesSplitted[tagValuesSplitted.length - 2], \"','\").concat(tagValueTitle, \"')\\\">\\n                                \").concat(tagValuesSplitted[tagValuesSplitted.length - 2], \"</a>\\n                        </div>\\n                        <span>&nbsp;&ndash;&nbsp;</span>\\n                        <div class=\\\"integrationItem-mainContainer-categories-item childrenItem\\\">\\n                            <a  role=\\\"button\\\" \\n                                onclick=\\\"javascript:SplunkSignalfx_app_integration.filterBy('\").concat(tagValuesSplitted[tagValuesSplitted.length - 1], \"','\").concat(tagValueTitle, \"')\\\">\\n                                \").concat(tagValuesSplitted[tagValuesSplitted.length - 1], \"</a>\\n                        </div>\\n                    \");\n        }\n\n        // this is in case there's only the parent\n        if (tagValuesSplitted.length === 2) {\n          var _tagValueTitle = tagValuesSplitted[tagValuesSplitted.length - 1].replace(/-/g, ' ');\n          formattedCategories += \"\\n                        <div class=\\\"integrationItem-mainContainer-categories-item\\\">\\n                            <a  role=\\\"button\\\" \\n                                onclick=\\\"javascript:SplunkSignalfx_app_integration.filterBy('\".concat(tagValuesSplitted[tagValuesSplitted.length - 1], \"','\").concat(_tagValueTitle, \"')\\\">\\n                                \").concat(tagValuesSplitted[tagValuesSplitted.length - 1], \"</a>\\n                        </div>\\n                    \");\n        }\n      }\n    }\n    return formattedCategories;\n  };\n  var showList = function showList() {\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    if (typeof callback == \"function\") {\n      $(listObject).append(filteredList.result).fadeIn('slow', callback());\n    } else {\n      $(listObject).append(filteredList.result).fadeIn('slow');\n    }\n  };\n  var hideList = function hideList() {\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    $(listObject).empty();\n    // if (typeof callback == \"function\") {\n    //     $(listObject).append(filteredList.result).fadeOut('slow', function() {\n    //         $(listObject).empty();\n    //         callback();\n    //     });\n    // } else {\n    //     $(listObject).append(filteredList.result).fadeOut('slow', function() {\n    //         $(listObject).empty();\n    //     });\n    // }\n  };\n  var searchList = function searchList(searchVal) {\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    hideList();\n    scrollToTop();\n    clearSideNav();\n    searchText = searchVal;\n    if (searchVal !== undefined) {\n      if (searchVal === '') {\n        clearSearch();\n      } else {\n        $(searchObject).addClass('inSearch');\n        $(closeSearch).fadeIn('fast');\n        filteredList = {\n          result: '',\n          resultCount: 0\n        };\n        filteredList.result = \"<div style=\\\"padding-bottom: 16px;\\\"><span class=\\\"splunk2-eyebrow\\\">Searching For: </span><span class=\\\"splunk2-h4 integrationItem-container-title\\\">\".concat(searchVal, \"</span></div>\");\n        $.each(allItemList, function (i, val) {\n          if (val.description !== undefined && (val.description.toLowerCase().search(searchVal.toLowerCase()) !== -1 || val.title.toLowerCase().search(searchVal.toLowerCase()) !== -1)) {\n            addItem(filteredList, val);\n          }\n        });\n        if (filteredList.resultCount > 0) {\n          showList();\n          isSearchActive = true;\n          // const state = {}\n          // const title = ''\n          // const url = `${window.location.pathname}?search=${encodeURI(searchVal)}`;\n\n          // history.pushState(state, title, url)\n        } else {\n          isSearchActive = true;\n          filteredList.result += emptyResultContent();\n          showList();\n        }\n      }\n    }\n    if (typeof callback == \"function\") {\n      callback();\n    }\n  };\n  var clearSearch = function clearSearch() {\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    isSearchActive = false;\n    $(searchObject).removeClass('inSearch');\n    $(closeSearch).hide();\n    $(searchObject).val(\"\");\n    searchText = '';\n    SplunkSignalfx_app_integration.displayAll();\n    scrollToTop();\n    if (typeof callback == \"function\") {\n      callback();\n    }\n  };\n  var lookForFilter = function lookForFilter(filterArray, filterToLook, categoryToLook) {\n    // For this we take into account that the filters or \"categories have a format like this: Splunk:/parent/child\"\n    // In this case in specific we need to just get the child section for this function\n    var found = false;\n\n    // first we check if the filter array has  any values\n    if (filterArray.length > 0) {\n      // now that we know that there is indeed we can continue to loop to search for the one we need\n      for (var x = 0; x < filterArray.length; x++) {\n        var tagValuesSplitted = filterArray[x].split('/');\n\n        // this case is for searching parent and child tag\n        if (tagValuesSplitted.length > 2) {\n          // first check if its child and has category available then filter for child and categories both\n          if (categoryToLook !== \"\") {\n            if ((tagValuesSplitted[tagValuesSplitted.length - 2] === filterToLook || tagValuesSplitted[tagValuesSplitted.length - 1] === filterToLook) && (tagValuesSplitted[tagValuesSplitted.length - 2] === categoryToLook || tagValuesSplitted[tagValuesSplitted.length - 1] === categoryToLook)) {\n              found = true;\n            }\n          } else {\n            if (tagValuesSplitted[tagValuesSplitted.length - 2] === filterToLook || tagValuesSplitted[tagValuesSplitted.length - 1] === filterToLook) {\n              found = true;\n            }\n          }\n        } else {\n          //here is when we only have a parent\n          if (tagValuesSplitted[tagValuesSplitted.length - 1] === filterToLook) {\n            found = true;\n          }\n        }\n      }\n    }\n    return found;\n  };\n  var clearSideNav = function clearSideNav() {\n    var $linkList = $('#appsPluginListFilter-filterSection-container a');\n    $.each($linkList, function (i, val) {\n      $(val).removeClass('active');\n    });\n  };\n  var activateSidenavLink = function activateSidenavLink(linkIdName) {\n    //first we create a variable to return if the id is present\n    var isIdPresent = false;\n    //first we clear the the sidenav active states\n    clearSideNav();\n\n    //now we search for the id of the link passed\n    var $linkList = $('#appsPluginListFilter-filterSection-container a');\n    $.each($linkList, function (i, val) {\n      if ($(val).attr(\"id\") === linkIdName) {\n        $(val).addClass('active');\n        isIdPresent = true;\n\n        //now we check if this link is a child link so we can make sure we expand the parent\n        if ($(val).hasClass('appsPluginListFilter-filterSection-item-childItem')) {\n          $(val).parent().collapse('show');\n        }\n      }\n    });\n\n    //now we return the result of this function\n    return isIdPresent;\n  };\n  var scrollToTop = function scrollToTop() {\n    $('html, body').animate({\n      scrollTop: $(componentObject).offset().top - 100\n    }, 300, 'linear', function () {\n      $(sideNavElement).removeClass('stickInBottom');\n      $(sideNavElement).removeClass('fixed');\n    });\n  };\n\n  /* Public Functions */\n  SplunkSignalfx_app_integration.loadJson = function (pathUrl) {\n    hideList();\n    $.ajax({\n      type: \"GET\",\n      url: pathUrl,\n      /*data : {\n          pass your request parameter here, currently we are not passing any data\n      },*/\n      success: function success(data, textStatus, jqXHR) {\n        baseJsonList = data;\n        allItemList = baseJsonList.contentFragmentDataList;\n        SplunkSignalfx_app_integration.displayAll();\n      },\n      error: function error(XMLHttpRequest, textStatus, errorThrown) {\n        //write your logic that you need to perform on error\n      }\n    });\n  };\n  SplunkSignalfx_app_integration.loadFilteredJson = function (pathUrl, title) {\n    hideList();\n    $.ajax({\n      type: \"GET\",\n      url: pathUrl,\n      /*data : {\n          pass your request parameter here, currently we are not passing any data\n      },*/\n      success: function success(data, textStatus, jqXHR) {\n        filteredList = {\n          result: '',\n          resultCount: 0\n        };\n        filteredList.result = addTitle(\"\".concat(title));\n        $.each(data.contentFragmentDataList, function (i, val) {\n          addItem(filteredList, val);\n        });\n        showList();\n      },\n      error: function error(XMLHttpRequest, textStatus, errorThrown) {\n        //write your logic that you need to perform on error\n      }\n    });\n  };\n  SplunkSignalfx_app_integration.filterBy = function (sidenavID) {\n    var filterTitle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var filterPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var elementPressed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n    hideList();\n    scrollToTop();\n    clearSideNav();\n\n    // check filterPath if child then extract category name\n    var categoryName;\n    var filterPathArray = filterPath.split('/');\n    if (filterPathArray.length > 6) {\n      categoryName = filterPathArray[5];\n    } else {\n      categoryName = '';\n    }\n    if (elementPressed !== '') {\n      $(elementPressed).addClass('active');\n    } else {\n      activateSidenavLink(sidenavID);\n    }\n    // here we check if the search is active so we filter only the result list instead of all results\n    if (isSearchActive) {\n      filteredList = {\n        result: '',\n        resultCount: 0\n      };\n      filteredList.result = \"<div style=\\\"padding-bottom: 16px;\\\"><span class=\\\"splunk2-eyebrow\\\">Searching For: </span><span class=\\\"splunk2-h4 integrationItem-container-title\\\">\".concat(searchText, \"</span><span style=\\\"margin-left: 16px;\\\" class=\\\"splunk2-eyebrow\\\">Filtered by: </span><span class=\\\"splunk2-h4 integrationItem-container-title\\\">\").concat(filterTitle, \"</span></div>\");\n      $.each(allItemList, function (i, val) {\n        if (val.description !== undefined && val.description.toLowerCase().search(searchText.toLowerCase()) !== -1 && lookForFilter(val.tagvalues, sidenavID)) {\n          addItem(filteredList, val);\n        }\n      });\n      if (filteredList.resultCount > 0) {\n        showList();\n      } else {\n        filteredList.result += emptyResultContent();\n        showList();\n      }\n      // then on this block means that this is a normal filtering without search\n    } else {\n      filteredList = {\n        result: '',\n        resultCount: 0\n      };\n      filteredList.result = addTitle(\"\".concat(filterTitle));\n      $.each(allItemList, function (i, val) {\n        if (lookForFilter(val.tagvalues, sidenavID, categoryName)) {\n          addItem(filteredList, val);\n        }\n      });\n      if (filteredList.resultCount > 0) {\n        showList();\n      } else {\n        filteredList.result += emptyResultContent();\n        showList();\n      }\n    }\n    if (isMobile()) {\n      //collapse the sidenav now topnav\n      collapseSidenavMobile();\n    }\n  };\n  SplunkSignalfx_app_integration.displayAll = function () {\n    var elementPressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    // here we check if the All Integrations link is the one who was pressed\n    if (elementPressed !== '' && $(elementPressed)[0].id == 'appsPluginListFilter-filterSection-allIntegrations') {\n      //now we check if the search was active\n      scrollToTop();\n      if (isSearchActive) {\n        isSearchActive = false;\n        $(searchObject).removeClass('inSearch');\n        $(closeSearch).hide();\n        $(searchObject).val(\"\");\n        searchText = '';\n      }\n      if (isMobile()) {\n        //collapse the sidenav now topnav\n        collapseSidenavMobile();\n      }\n    }\n    hideList();\n    clearSideNav();\n    filteredList = {\n      result: '',\n      resultCount: 0\n    };\n    $('#appsPluginListFilter-filterSection-allIntegrations').addClass('active');\n    generateAllIntegrationsList(allItemList, showList).then(function () {\n      //funtion for fix on the sidenav when is floating and the expand and can overlap components below\n      var sideNavHeight = setInterval(matchHeights, 500);\n    });\n  };\n  SplunkSignalfx_app_integration.expandDescription = function (elementID, buttonID) {\n    $(buttonID).fadeOut();\n    $(elementID).collapse(\"show\");\n  };\n  SplunkSignalfx_app_integration.collapseDescription = function (elementID, buttonID) {\n    $(buttonID).fadeIn();\n    $(elementID).collapse(\"hide\");\n  };\n})(window.SplunkSignalfx_app_integration = window.SplunkSignalfx_app_integration || {});\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/toConsumableArray.js\nvar toConsumableArray = __webpack_require__(48);\nvar toConsumableArray_default = /*#__PURE__*/__webpack_require__.n(toConsumableArray);\n\n// CONCATENATED MODULE: ./src/main/webpack/components/customer-overview/v1/customer-overview.js\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-constant-condition */\n/* eslint-disable no-fallthrough */\n\n\n\n\n\n\nvar customer_overview_Splunk_app_customerOverview = customer_overview_Splunk_app_customerOverview || {};\n(function (Splunk_app_customerOverview) {\n  // here we initialize the variables;\n  var componentBase;\n  var appSection;\n  var sortGroupSection;\n  var sortRadiosList;\n  var filterGroupList;\n  var filterGroupTitlesList;\n  var filterCheckboxesList;\n  var filterBreadcrumbsSection;\n  var filterBreadcrumbsSearchSection;\n  var filterBreadcrumbsSearchBadgeTerm;\n  var filterBreadcrumbsFilterSection;\n  var cardsSection;\n  var cardsSectionEvent;\n  var showFeaturedEvents = true;\n  var loadMoreButton;\n  var clearAllButton;\n  var filterStoriesSection;\n  var customerCountElements;\n  var emptySearchElement;\n  var videoOverlayElement;\n  var videoPlayerElement;\n  var videoPlayerId;\n  var searchElement;\n  var searchElementCloseButton;\n  var filterType = 1; // Filter Type 1: (A && B &&...N) Filter Type 2: (A || B ||...N)\n  var resourcesFrontPageElement;\n  var resourcesFrontPageLoadMore;\n  var initialCardCount = 9;\n  var numberOfCardsToServeCount = 9;\n  var actualCustomerCardsServed = 0;\n  var notFoundRelatedCards = 3;\n  var isEmptyFilterList = false;\n  var customerDataURL;\n  var customerJsonSource = null;\n  var customerJsonProcessed = null;\n  var isSearchActive;\n  var variationType;\n  var searchTerm = '';\n  var pageURL = window.location.href;\n  var customerSortElement = '.CustomerOverView-sort-element';\n  var customerSortTitle = $('.CustomerOverView-sort-title');\n  var customerFiltersTitle = $('.CustomerOverView-filters-title');\n  var customerFilters = $('.CustomerOverView-filters');\n  var customerFiltersGroup = $('.CustomerOverView-filters-group');\n  var customerFilterElement = $('.CustomerOverView-filters-element');\n  var customerFiltersLabel = $('.CustomerOverView-filters-element label');\n  var customerSortLabel = $('.CustomerOverView-sort-element label');\n  var customerClearAll = $('.CustomerOverView-clearAll a');\n  var GACLIENTID_nonGated = \"\";\n  var checkingDataLayer_timer_nonGated = 0;\n\n  // WWW-22307: Resource Filters do not work after loading the page with a filter preselected\n  var urlParam = window.location.href;\n  var sortNewest = false;\n  var sortAlphabetically = false;\n  var sortFeatured = false;\n  if (urlParam.indexOf('resources') > -1 && urlParam.indexOf('sort=') > -1) {\n    if (urlParam.indexOf('sort=Newest') > -1) {\n      document.cookie = \"sort=Newest\";\n      sortNewest = true;\n    } else if (urlParam.indexOf('sort=A-Z') > -1) {\n      document.cookie = \"sort=AZ\";\n      sortAlphabetically = true;\n    } else if (urlParam.indexOf('sort=Featured') > -1) {\n      document.cookie = \"sort=Featured\";\n      sortFeatured = true;\n    }\n    if (sortNewest) {\n      urlParam = urlParam.replace('sort=Newest', \" \");\n      window.location.replace(urlParam);\n    } else if (sortAlphabetically) {\n      urlParam = urlParam.replace('sort=A-Z', \" \");\n      window.location.replace(urlParam);\n    } else if (sortFeatured) {\n      urlParam = urlParam.replace('sort=Featured', \" \");\n      window.location.replace(urlParam);\n    }\n  }\n  var checkingDataLayer = setInterval(function () {\n    checkingDataLayer_timer_nonGated++;\n    if (window.dataLayer !== undefined && typeof ga === 'function') {\n      ga(function () {\n        var tracker = ga.getAll()[0];\n        var conversionId = \"\";\n        GACLIENTID_nonGated = tracker.get('clientId');\n        for (var b in dataLayer) {\n          if (\"conversionId\" == Object.keys(dataLayer[b])) {\n            clearInterval(checkingDataLayer);\n            console.log('conversionId loaded');\n            conversionId = dataLayer[b].conversionId;\n          }\n        }\n      });\n    } else {\n      //error handling\n      if (checkingDataLayer_timer_nonGated > 10) {\n        clearInterval(checkingDataLayer);\n      }\n    }\n  }, 500);\n  if (localStorage.getItem(\"SECURE_TOKEN\")) {\n    localStorage.removeItem(\"SECURE_TOKEN\");\n  }\n  $(customerSortTitle).on('keydown', function (e) {\n    var code = e.keyCode;\n    if (code == 40) {\n      $(customerFilters).find(customerFiltersTitle).first().focus();\n    }\n  });\n  $(customerFiltersTitle).on('keydown', function (e) {\n    if (e.keyCode == 40 || e.keyCode == 39) {\n      $(this).parent().next(customerFiltersGroup).find(customerFiltersTitle).focus();\n    }\n  });\n  $(customerFiltersTitle).on('keydown', function (e) {\n    if (e.keyCode == 38 || e.keyCode == 37) {\n      if ($(this).parent().prev(customerFiltersGroup).find(customerFiltersTitle).length <= 0) {\n        $(customerSortTitle).focus();\n      } else {\n        $(this).parent().prev(customerFiltersGroup).find(customerFiltersTitle).focus();\n      }\n    }\n  });\n  $(customerFiltersLabel).on('keydown', function (e) {\n    if (e.keyCode == 40 || e.keyCode == 39) {\n      //down arrow\n      $(this).parent().next(customerFilterElement).find('label').focus();\n    } else if (e.keyCode == 38 || e.keyCode == 37) {\n      // up arrow\n      $(this).parent().prev(customerFilterElement).find('label').focus();\n    }\n  });\n  $(customerSortLabel).on('keydown', function (e) {\n    if (e.keyCode == 40 || e.keyCode == 39) {\n      //down arrow\n      $(this).parent().next(customerSortElement).find('label').focus();\n    } else if (e.keyCode == 38 || e.keyCode == 37) {\n      // up arrow\n      $(this).parent().prev(customerSortElement).find('label').focus();\n      var previousElementLength = $(this).parent().prev(customerSortElement).length;\n      if (previousElementLength == 0) {\n        $(customerSortTitle).focus();\n      }\n    } else if (e.keyCode == 9) {\n      e.preventDefault();\n      $(customerFiltersTitle).first().focus();\n    }\n  });\n  $(customerSortTitle).on('keydown', function (e) {\n    if (e.keyCode == 38) {\n      $(customerClearAll).focus();\n    }\n  });\n  $(customerClearAll).on('keydown', function (e) {\n    if (e.keyCode == 40) {\n      $(customerSortTitle).focus();\n    }\n  });\n  $(customerFiltersTitle).on('keydown', function (e) {\n    if (e.keyCode == 38) {\n      if ($(this).parent().index() == 0) {\n        $(customerClearAll).focus();\n      }\n    }\n  });\n  var sortType = {\n    newest: \"Newest\",\n    aToz: \"A-Z\",\n    featured: \"Featured\",\n    contentType: \"Content Type\"\n  };\n  var sortValue = sortType.newest;\n  var appliedFilters = [];\n  var appliedFiltersResources = [];\n  var lazyLoadObserver;\n  var searchDelay;\n  var searchTime = 1000;\n  var isPageLoading = true;\n  Splunk_app_customerOverview.componentConstructor = /*#__PURE__*/asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee() {\n    var customerDataSource,\n      _args = arguments;\n    return regenerator_default.a.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          customerDataSource = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n          componentBase = document.querySelector('#customerOverview');\n          isSearchActive = componentBase.getAttribute('data-searchActive');\n          variationType = componentBase.getAttribute('data-selectSubtype');\n          if (variationType === 'resources' || variationType === 'training') filterType = 2;\n          if (customerDataSource === '') customerDataURL = componentBase.getAttribute('data-source');else customerDataURL = customerDataURL = customerDataSource;\n          lazyLoadObserver = new IntersectionObserver(handleLazyLoadCard, {\n            rootMargin: '0px',\n            threshold: 0.4\n          });\n          _context.next = 9;\n          return getCustomerData();\n        case 9:\n          _context.next = 11;\n          return processCustomerData();\n        case 11:\n          _context.next = 13;\n          return assignElements();\n        case 13:\n          _context.next = 15;\n          return constructElements();\n        case 15:\n          _context.next = 17;\n          return connectConstructedElements();\n        case 17:\n          _context.next = 19;\n          return setEventListeners();\n        case 19:\n          _context.next = 21;\n          return handleFrontPageElements();\n        case 21:\n          _context.next = 23;\n          return handleInitialBookmarks();\n        case 23:\n          _context.next = 25;\n          return verifyEmptyJson();\n        case 25:\n          if (!(variationType === 'resources')) {\n            _context.next = 28;\n            break;\n          }\n          _context.next = 28;\n          return sortCookieList();\n        case 28:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  // WWW-22307: Resource Filters do not work after loading the page with a filter preselected\n  var sortCookieList = /*#__PURE__*/function () {\n    var _ref2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee2() {\n      var getCookie;\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            getCookie = function _getCookie(name) {\n              var cDecode = decodeURIComponent(document.cookie);\n              var cArray = cDecode.split(\"; \");\n              var result = null;\n              cArray.forEach(function (element) {\n                if (element.indexOf(name) == 0) {\n                  result = element.substring(name.length + 1);\n                }\n              });\n              return result;\n            };\n            if (getCookie('sort') == 'Newest') {\n              $('#sortNewest-sp-radio').click();\n            } else if (getCookie('sort') == 'Featured') {\n              $('#sortFeatured-sp-radio').click();\n            } else if (getCookie('sort') == 'AZ') {\n              $('#sortA-Z-sp-radio').click();\n            }\n            document.cookie = \"sort=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function sortCookieList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  //#region Main functions\n  var getCustomerData = /*#__PURE__*/function () {\n    var _ref3 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee3() {\n      return regenerator_default.a.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(customerDataURL !== '')) {\n              _context3.next = 4;\n              break;\n            }\n            return _context3.abrupt(\"return\", fetch(customerDataURL).then(function (response) {\n              if (!response.ok) throw new Error(\"API not responding or not found status: \".concat(response.status, \" statusText: \").concat(response.statusText, \", URL: \").concat(response.url));\n              return response.json();\n            }).then(function (html) {\n              if (variationType === 'training') {\n                customerJsonSource = html.trainingList;\n              } else if (variationType === 'customer') {\n                customerJsonSource = html.customerList;\n              } else if (variationType === 'data-insider') {\n                customerJsonSource = html.dataInsiderList;\n              } else if (variationType === 'resources') {\n                customerJsonSource = html.resourcesList;\n              } else if (variationType === 'events') {\n                customerJsonSource = html.eventsContentFragmentModelList;\n              }\n              return true;\n            }));\n          case 4:\n            return _context3.abrupt(\"return\", new Error('data is missing from the component, json is missing'));\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function getCustomerData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var processCustomerData = /*#__PURE__*/function () {\n    var _ref4 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee4() {\n      return regenerator_default.a.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!(customerJsonSource === null)) {\n              _context4.next = 2;\n              break;\n            }\n            throw new Error('customerJsonSource is empty');\n          case 2:\n            customerJsonProcessed = customerJsonSource;\n            return _context4.abrupt(\"return\", true);\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return function processCustomerData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var processCustomerRadioData = /*#__PURE__*/function () {\n    var _ref5 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee5() {\n      return regenerator_default.a.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!(customerJsonSource === null)) {\n              _context5.next = 2;\n              break;\n            }\n            throw new Error('customerJsonSource is empty');\n          case 2:\n            customerJsonProcessed = customerJsonProcessed;\n            return _context5.abrupt(\"return\", true);\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return function processCustomerRadioData() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var assignElements = /*#__PURE__*/function () {\n    var _ref6 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee6() {\n      return regenerator_default.a.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            appSection = document.querySelector(\".customerOverview\");\n            if (!(appSection === null)) {\n              _context6.next = 3;\n              break;\n            }\n            throw new Error(\"Whelp what do you know? this app doesn't exists xD\");\n          case 3:\n            filterBreadcrumbsSection = appSection.querySelector(\".CustomerOverView-filterBreadcrumbs\");\n            if (!(filterBreadcrumbsSection === null)) {\n              _context6.next = 6;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for \\\".CustomerOverView-filterBreadcrumbs\\\"\");\n          case 6:\n            filterBreadcrumbsSearchSection = appSection.querySelector(\".CustomerOverView-filterBreadcrumbs .CustomerOverView-filterBreadcrumbs-searchSection #searchSection-badges\");\n            if (!(filterBreadcrumbsSearchSection === null)) {\n              _context6.next = 9;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for \\\".CustomerOverView-filterBreadcrumbs-searchSection\\\"\");\n          case 9:\n            filterBreadcrumbsSearchBadgeTerm = appSection.querySelector('#breadCrumb-searchTerm');\n            if (!(filterBreadcrumbsSearchBadgeTerm === null)) {\n              _context6.next = 12;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for \\\".CustomerOverView-filterBreadcrumbs-searchSection\\\"\");\n          case 12:\n            filterBreadcrumbsFilterSection = appSection.querySelector(\".CustomerOverView-filterBreadcrumbs .CustomerOverView-filterBreadcrumbs-filterSection #filterSection-badges\");\n            if (!(filterBreadcrumbsFilterSection === null)) {\n              _context6.next = 15;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for \\\".CustomerOverView-filterBreadcrumbs-filterSection\\\"\");\n          case 15:\n            cardsSection = appSection.querySelector('.CustomerOverView-cards .CustomerOverView-cards-cardContainer');\n            cardsSectionEvent = appSection.querySelector('.CustomerOverView-cards .CustomerOverView-cards-resourcesFrontpage');\n            if (!(cardsSection === null)) {\n              _context6.next = 19;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for filter checkboxes\");\n          case 19:\n            loadMoreButton = appSection.querySelector('#CustomerOverView-cards-loadMore');\n            if (!(loadMoreButton === null)) {\n              _context6.next = 22;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for the load more button\");\n          case 22:\n            clearAllButton = appSection.querySelector('.CustomerOverView-clearAll a');\n            if (!(clearAllButton === null)) {\n              _context6.next = 25;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for the clear all button\");\n          case 25:\n            filterStoriesSection = appSection.querySelector('.CustomerOverView-FilterStories-title');\n            if (!(filterStoriesSection === null)) {\n              _context6.next = 28;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for the filter Stories section\");\n          case 28:\n            customerCountElements = appSection.querySelectorAll('.CustomerOverView-ResultsCount');\n            if (!(filterStoriesSection === null)) {\n              _context6.next = 31;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for the results count section\");\n          case 31:\n            emptySearchElement = appSection.querySelector('.CustomerOverView-cards-emptySearch');\n            if (!(filterStoriesSection === null)) {\n              _context6.next = 34;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for the empty results section\");\n          case 34:\n            videoOverlayElement = appSection.querySelector('#CustomerOverView-videoOverlay');\n            if (!(filterStoriesSection === null)) {\n              _context6.next = 37;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for the video overlay section\");\n          case 37:\n            videoPlayerElement = appSection.querySelector('#CustomerOverView-videoOverlay .CustomerOverView-videoOverlay-playerSection');\n            if (!(filterStoriesSection === null)) {\n              _context6.next = 40;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for the video modal section\");\n          case 40:\n            if (!(isSearchActive !== null && isSearchActive === 'true')) {\n              _context6.next = 49;\n              break;\n            }\n            searchElement = appSection.querySelector('#CustomerOverView-Search-keyword');\n            if (!(searchElement === null)) {\n              _context6.next = 44;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for the search input section\");\n          case 44:\n            searchElementCloseButton = appSection.querySelector('#CustomerOverView-Search-keyword-closeButton');\n            if (!(searchElementCloseButton === null)) {\n              _context6.next = 47;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for the search input close button section\");\n          case 47:\n            _context6.next = 50;\n            break;\n          case 49:\n            searchElement = appSection.querySelector('#CustomerOverView-Search-keyword');\n          case 50:\n            if (!(variationType === 'resources')) {\n              _context6.next = 54;\n              break;\n            }\n            resourcesFrontPageElement = appSection.querySelector('.CustomerOverView-cards-resourcesFrontpage');\n            if (!(resourcesFrontPageElement === null)) {\n              _context6.next = 54;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for \\\".CustomerOverView-cards-resourcesFrontpage\\\"\");\n          case 54:\n            return _context6.abrupt(\"return\", true);\n          case 55:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n    return function assignElements() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var constructElements = /*#__PURE__*/function () {\n    var _ref7 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee7() {\n      return regenerator_default.a.wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return updateCustomerCountResults();\n          case 2:\n            _context7.next = 4;\n            return displayProcessedCardsToPage();\n          case 4:\n            return _context7.abrupt(\"return\", true);\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    }));\n    return function constructElements() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var connectConstructedElements = /*#__PURE__*/function () {\n    var _ref8 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee8() {\n      return regenerator_default.a.wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            sortGroupSection = appSection.querySelector('.CustomerOverView-sort-group');\n            if (!(sortGroupSection === null)) {\n              _context8.next = 3;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for \\\".CustomerOverView-sort-group\\\"\");\n          case 3:\n            sortRadiosList = appSection.querySelectorAll('.CustomerOverView-sort-group .CustomerOverView-sort-element input[type=\"radio\"]');\n            if (!(sortRadiosList === null)) {\n              _context8.next = 6;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for Sort radio options\");\n          case 6:\n            filterGroupList = appSection.querySelectorAll('.CustomerOverView-filters-group');\n            if (!(filterGroupList === null)) {\n              _context8.next = 9;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for \\\".CustomerOverView-filters-group\\\"\");\n          case 9:\n            filterCheckboxesList = appSection.querySelectorAll('.CustomerOverView-filters-group .CustomerOverView-filters-element input[type=\"checkbox\"]');\n            if (!(filterCheckboxesList === null)) {\n              _context8.next = 12;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for filter checkboxes\");\n          case 12:\n            filterGroupTitlesList = appSection.querySelectorAll('.CustomerOverView-filters-group .CustomerOverView-filters-title');\n            if (!(filterCheckboxesList === null)) {\n              _context8.next = 15;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for filter groups\");\n          case 15:\n            if (!(variationType === 'resources')) {\n              _context8.next = 19;\n              break;\n            }\n            resourcesFrontPageLoadMore = resourcesFrontPageElement.querySelector('#CustomerOverView-cards-loadMore-resources');\n            if (!(resourcesFrontPageLoadMore === null)) {\n              _context8.next = 19;\n              break;\n            }\n            throw new Error(\"We didn't found some of the needed elements when we ran this function, looking for resources load more button\");\n          case 19:\n            return _context8.abrupt(\"return\", true);\n          case 20:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    }));\n    return function connectConstructedElements() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var setEventListeners = /*#__PURE__*/function () {\n    var _ref9 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee9() {\n      var filterGroupTitle, filterCheckboxElement, sortRadioElement;\n      return regenerator_default.a.wrap(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            // Search Input Functionality\n            if (isSearchActive !== null && isSearchActive === 'true') {\n              searchElement.addEventListener('input', searchTrigger);\n              searchElement.addEventListener('input', hideEventFeaturedSection);\n              searchElementCloseButton.addEventListener('click', clearSearchTrigger);\n              // searchElementCloseButton.addEventListener('click', hideEventFeaturedSection);\n              filterBreadcrumbsSearchBadgeTerm.addEventListener('click', clearSearchTrigger);\n              // filterBreadcrumbsSearchBadgeTerm.addEventListener('click', hideEventFeaturedSection);\n            }\n\n            // Sort Dropdown functionality\n            sortGroupSection.addEventListener('click', toggleSection);\n            $('.CustomerOverView-sort-title').on('keydown', toggleSectionOnEnter);\n\n            // Filter Dropdown functionality\n            filterGroupList.forEach(function (filterGroup) {\n              filterGroup.addEventListener('click', toggleSection);\n            });\n            filterGroupTitle = document.querySelectorAll('.CustomerOverView-filters-title');\n            filterGroupTitle.forEach(function (filterTitle) {\n              filterTitle.addEventListener('keydown', toggleSectionOnEnter);\n            });\n\n            //Sort Click functionality\n            sortRadiosList.forEach(function (sortRadio) {\n              sortRadio.addEventListener('change', clickRadio);\n            });\n\n            // Filter Click functionality\n            filterCheckboxesList.forEach(function (filterCheckbox) {\n              filterCheckbox.addEventListener('click', clickCheckbox);\n            });\n\n            // Filter keydown filterCheckboxFunction\n            filterCheckboxElement = document.querySelectorAll('.CustomerOverView-filters-group .CustomerOverView-filters-element label');\n            filterCheckboxElement.forEach(function (filterBox) {\n              filterBox.addEventListener('keydown', filterCheckboxFunction);\n            });\n\n            // Filter clickRadioElement\n            sortRadioElement = document.querySelectorAll('.CustomerOverView-sort-group .CustomerOverView-sort-element label');\n            sortRadioElement.forEach(function (sortElement) {\n              sortElement.addEventListener('keydown', clickRadioElement);\n            });\n\n            // Load More button functionality\n            loadMoreButton.addEventListener('click', function (e) {\n              e.preventDefault();\n              loadMoreCards();\n            });\n\n            //clear all functionality\n            clearAllButton.addEventListener('click', clearAllFilters);\n            // clearAllButton.addEventListener('click', hideEventFeaturedSection);\n            //filter Stories mobile fold\n            filterStoriesSection.addEventListener('click', toggleFilterFold);\n\n            //Video modal eventListener\n            videoOverlayElement.addEventListener('click', closeVideoModal);\n            document.addEventListener('animationstart', handleAnimationStart);\n            document.addEventListener('animationend', handleAnimationEnd);\n\n            //Resources Load more button\n            if (variationType === 'resources') {\n              resourcesFrontPageLoadMore.addEventListener('click', deactivateResourcesFrontPage);\n            }\n            return _context9.abrupt(\"return\", true);\n          case 20:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9);\n    }));\n    return function setEventListeners() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var handleInitialBookmarks = /*#__PURE__*/function () {\n    var _ref10 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee10() {\n      var haveParameters;\n      return regenerator_default.a.wrap(function _callee10$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return checkUrlBookmark();\n          case 2:\n            haveParameters = _context10.sent;\n            if (!haveParameters) {\n              _context10.next = 10;\n              break;\n            }\n            _context10.next = 6;\n            return applyBookmarkParameters();\n          case 6:\n            //in case of resources variation, making sure we remove the front page\n            if (variationType === 'resources') deactivateResourcesFrontPage();\n            if (variationType === 'events') hideEventFeaturedSection();\n            _context10.next = 15;\n            break;\n          case 10:\n            _context10.next = 12;\n            return clearAllFilters();\n          case 12:\n            if (!(variationType !== 'resources' && !isPageLoading)) {\n              _context10.next = 15;\n              break;\n            }\n            _context10.next = 15;\n            return setDefaultSort();\n          case 15:\n            _context10.next = 17;\n            return updateCardResults();\n          case 17:\n            _context10.next = 19;\n            return finishPageLoading();\n          case 19:\n            return _context10.abrupt(\"return\", true);\n          case 20:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, _callee10);\n    }));\n    return function handleInitialBookmarks() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n  var updateCardResults = /*#__PURE__*/function () {\n    var _ref11 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee11() {\n      return regenerator_default.a.wrap(function _callee11$(_context11) {\n        while (1) switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return resetProcessedList();\n          case 2:\n            _context11.next = 4;\n            return applyFiltersToList();\n          case 4:\n            _context11.next = 6;\n            return searchFilteredResults();\n          case 6:\n            _context11.next = 8;\n            return applySortToList();\n          case 8:\n            _context11.next = 10;\n            return clearCustomerCardSection();\n          case 10:\n            _context11.next = 12;\n            return displayProcessedCardsToPage();\n          case 12:\n            _context11.next = 14;\n            return updateCustomerCountResults();\n          case 14:\n            _context11.next = 16;\n            return updateUrlBookmarkFilter();\n          case 16:\n          case \"end\":\n            return _context11.stop();\n        }\n      }, _callee11);\n    }));\n    return function updateCardResults() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n  var resetProcessedList = /*#__PURE__*/function () {\n    var _ref12 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee12() {\n      return regenerator_default.a.wrap(function _callee12$(_context12) {\n        while (1) switch (_context12.prev = _context12.next) {\n          case 0:\n            customerJsonProcessed = toConsumableArray_default()(customerJsonSource);\n            return _context12.abrupt(\"return\", true);\n          case 2:\n          case \"end\":\n            return _context12.stop();\n        }\n      }, _callee12);\n    }));\n    return function resetProcessedList() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n  var handleFrontPageElements = /*#__PURE__*/function () {\n    var _ref13 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee13() {\n      return regenerator_default.a.wrap(function _callee13$(_context13) {\n        while (1) switch (_context13.prev = _context13.next) {\n          case 0:\n            if (variationType === 'resources') {\n              activateResourcesFrontPage();\n              addLinkToResourcesCards();\n              addVideoFeaturesToResourcesCards();\n            }\n            return _context13.abrupt(\"return\", true);\n          case 2:\n          case \"end\":\n            return _context13.stop();\n        }\n      }, _callee13);\n    }));\n    return function handleFrontPageElements() {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n  //#endregion\n\n  //#region eventHandler Funtions (filters, sorts etc)\n  var searchTrigger = /*#__PURE__*/function () {\n    var _ref14 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee14() {\n      var event,\n        _args14 = arguments;\n      return regenerator_default.a.wrap(function _callee14$(_context14) {\n        while (1) switch (_context14.prev = _context14.next) {\n          case 0:\n            event = _args14.length > 0 && _args14[0] !== undefined ? _args14[0] : '';\n            if (event !== '') {\n              searchElement.classList.remove('inSearch');\n              if (searchDelay !== undefined) clearTimeout(searchDelay);\n              searchTerm = event.target.value; //we set/update the search term in case this comes from an event\n\n              searchDelay = setTimeout(function () {\n                searchDelay = undefined;\n                if (event.target.value !== '') {\n                  searchElement.classList.add('inSearch');\n                  showSearchBreadcrumb(event);\n                } else {\n                  searchElement.classList.remove('inSearch');\n                  hideSearchBreadcrumb();\n                }\n                updateUrlBookmarkSearch(event.target);\n                updateCardResults(); // <-- this one updates the cards including the search term\n              }, searchTime);\n            }\n            return _context14.abrupt(\"return\", true);\n          case 3:\n          case \"end\":\n            return _context14.stop();\n        }\n      }, _callee14);\n    }));\n    return function searchTrigger() {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n  var clearSearchTrigger = /*#__PURE__*/function () {\n    var _ref15 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee15(placeholderVar) {\n      var currentURL;\n      return regenerator_default.a.wrap(function _callee15$(_context15) {\n        while (1) switch (_context15.prev = _context15.next) {\n          case 0:\n            searchElement.value = '';\n            searchTerm = '';\n            currentURL = new URL(window.location);\n            currentURL.searchParams.delete('search');\n            window.history.pushState({}, \"\", currentURL);\n            searchElement.classList.remove('inSearch');\n            _context15.next = 8;\n            return hideSearchBreadcrumb();\n          case 8:\n            searchElement.focus();\n            _context15.next = 11;\n            return updateCardResults();\n          case 11:\n            if (typeof placeholderVar === 'undefined') {\n              showFeaturedEvents = false;\n            }\n            return _context15.abrupt(\"return\", true);\n          case 13:\n          case \"end\":\n            return _context15.stop();\n        }\n      }, _callee15);\n    }));\n    return function clearSearchTrigger(_x) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n  var clickRadio = /*#__PURE__*/function () {\n    var _ref16 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee16() {\n      var event,\n        _args16 = arguments;\n      return regenerator_default.a.wrap(function _callee16$(_context16) {\n        while (1) switch (_context16.prev = _context16.next) {\n          case 0:\n            event = _args16.length > 0 && _args16[0] !== undefined ? _args16[0] : '';\n            if (!(event === '')) {\n              _context16.next = 3;\n              break;\n            }\n            throw new Error(\"No radio button found\");\n          case 3:\n            sortValue = event.target.value;\n            _context16.next = 6;\n            return processCustomerRadioData();\n          case 6:\n            _context16.next = 8;\n            return setSelectedSortLabel(event.target);\n          case 8:\n            _context16.next = 10;\n            return applySortToList();\n          case 10:\n            showFeaturedEvents = false;\n            _context16.next = 13;\n            return clearCustomerCardSection();\n          case 13:\n            _context16.next = 15;\n            return displayProcessedCardsToPage();\n          case 15:\n            _context16.next = 17;\n            return updateUrlBookmarkSort(event.target);\n          case 17:\n            //in case of resources variation, making sure we remove it from the front page\n            if (variationType === 'resources') deactivateResourcesFrontPage();\n            return _context16.abrupt(\"return\", true);\n          case 19:\n          case \"end\":\n            return _context16.stop();\n        }\n      }, _callee16);\n    }));\n    return function clickRadio() {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n  var clickRadioElement = /*#__PURE__*/function () {\n    var _ref17 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee17() {\n      var event,\n        eventTargetId,\n        eventTargetValue,\n        _args17 = arguments;\n      return regenerator_default.a.wrap(function _callee17$(_context17) {\n        while (1) switch (_context17.prev = _context17.next) {\n          case 0:\n            event = _args17.length > 0 && _args17[0] !== undefined ? _args17[0] : '';\n            if (!(event === '')) {\n              _context17.next = 3;\n              break;\n            }\n            throw new Error(\"No radio button found\");\n          case 3:\n            if (!(event.keyCode == 13)) {\n              _context17.next = 23;\n              break;\n            }\n            $('.CustomerOverView-sort input[type=\"radio\"]').removeClass('selected');\n            eventTargetId = $(event.target).find('input[type=\"radio\"]').attr('id');\n            eventTargetValue = $(event.target).find('input[type=\"radio\"]').attr('value');\n            $(event.target).find('input[type=\"radio\"]').addClass('selected');\n            event.preventDefault();\n            $(\"#\".concat(eventTargetId)).trigger(\"click\");\n            sortValue = eventTargetValue.toString();\n            _context17.next = 13;\n            return setSelectedSortLabel(event.target);\n          case 13:\n            _context17.next = 15;\n            return applySortToList();\n          case 15:\n            showFeaturedEvents = false;\n            _context17.next = 18;\n            return clearCustomerCardSection();\n          case 18:\n            _context17.next = 20;\n            return displayProcessedCardsToPage();\n          case 20:\n            _context17.next = 22;\n            return updateUrlBookmarkSort(event.target);\n          case 22:\n            return _context17.abrupt(\"return\", true);\n          case 23:\n          case \"end\":\n            return _context17.stop();\n        }\n      }, _callee17);\n    }));\n    return function clickRadioElement() {\n      return _ref17.apply(this, arguments);\n    };\n  }();\n  var clickCheckbox = /*#__PURE__*/function () {\n    var _ref18 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee18() {\n      var checkboxElement,\n        checkboxId,\n        isBreadcrumb,\n        baseFilter,\n        checkboxLabel,\n        isChecked,\n        filterGroupElement,\n        checkboxCategory,\n        _checkboxCategory,\n        _args18 = arguments;\n      return regenerator_default.a.wrap(function _callee18$(_context18) {\n        while (1) switch (_context18.prev = _context18.next) {\n          case 0:\n            checkboxElement = _args18.length > 0 && _args18[0] !== undefined ? _args18[0] : '';\n            if (!(checkboxElement === '')) {\n              _context18.next = 3;\n              break;\n            }\n            throw new Error(\"No checkbox found\");\n          case 3:\n            checkboxId = checkboxElement.target.getAttribute('id');\n            isBreadcrumb = checkboxId.includes('breadCrumb-');\n            if (isBreadcrumb) checkboxId = checkboxId.replace('breadCrumb-', '');\n            baseFilter = appSection.querySelector(\"#\".concat(checkboxId));\n            checkboxLabel = baseFilter.getAttribute('name');\n            isChecked = baseFilter.checked;\n            filterGroupElement = baseFilter.parentElement.parentElement.parentElement;\n            if (filterGroupElement.classList.contains('CustomerOverView-filters-group')) {\n              _context18.next = 12;\n              break;\n            }\n            throw new Error('No filter group was found...');\n          case 12:\n            _context18.next = 14;\n            return updateFilterGroupCount(filterGroupElement);\n          case 14:\n            if (!(isChecked && !isBreadcrumb)) {\n              _context18.next = 27;\n              break;\n            }\n            _context18.next = 17;\n            return addFilterBreadcrumb(checkboxId, checkboxLabel);\n          case 17:\n            if (!(variationType === 'resources')) {\n              _context18.next = 23;\n              break;\n            }\n            checkboxCategory = checkboxElement.target.getAttribute('data-category-name');\n            _context18.next = 21;\n            return addFilter(checkboxId, checkboxCategory);\n          case 21:\n            _context18.next = 25;\n            break;\n          case 23:\n            _context18.next = 25;\n            return addFilter(checkboxId);\n          case 25:\n            _context18.next = 38;\n            break;\n          case 27:\n            baseFilter.checked = false;\n            _context18.next = 30;\n            return removeFilterBreadcrumb(checkboxId);\n          case 30:\n            if (!(variationType === 'resources')) {\n              _context18.next = 36;\n              break;\n            }\n            _checkboxCategory = checkboxElement.target.getAttribute('data-category-name');\n            _context18.next = 34;\n            return removeFilter(checkboxId, _checkboxCategory);\n          case 34:\n            _context18.next = 38;\n            break;\n          case 36:\n            _context18.next = 38;\n            return removeFilter(checkboxId);\n          case 38:\n            if (isPageLoading) {\n              _context18.next = 41;\n              break;\n            }\n            _context18.next = 41;\n            return updateCardResults();\n          case 41:\n            return _context18.abrupt(\"return\", true);\n          case 42:\n          case \"end\":\n            return _context18.stop();\n        }\n      }, _callee18);\n    }));\n    return function clickCheckbox() {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n  var filterCheckboxFunction = /*#__PURE__*/function () {\n    var _ref19 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee19() {\n      var checkboxElement,\n        checkboxId,\n        isBreadcrumb,\n        baseFilter,\n        checkboxLabel,\n        isChecked,\n        filterGroupElement,\n        _args19 = arguments;\n      return regenerator_default.a.wrap(function _callee19$(_context19) {\n        while (1) switch (_context19.prev = _context19.next) {\n          case 0:\n            checkboxElement = _args19.length > 0 && _args19[0] !== undefined ? _args19[0] : '';\n            if (!(checkboxElement === '')) {\n              _context19.next = 3;\n              break;\n            }\n            throw new Error(\"No checkbox found\");\n          case 3:\n            if (!(checkboxElement.keyCode == 13)) {\n              _context19.next = 33;\n              break;\n            }\n            checkboxId = $(checkboxElement.target).find('input[type=\"checkbox\"]').attr('id');\n            checkboxElement.preventDefault();\n            $(\"#\".concat(checkboxId)).trigger(\"click\");\n            isBreadcrumb = checkboxId.includes('breadCrumb-');\n            if (isBreadcrumb) checkboxId = checkboxId.replace('breadCrumb-', '');\n            baseFilter = appSection.querySelectorc;\n            checkboxLabel = baseFilter.getAttribute('name');\n            isChecked = baseFilter.checked;\n            filterGroupElement = baseFilter.parentElement.parentElement.parentElement;\n            if (filterGroupElement.classList.contains('CustomerOverView-filters-group')) {\n              _context19.next = 15;\n              break;\n            }\n            throw new Error('No filter group was found...');\n          case 15:\n            _context19.next = 17;\n            return updateFilterGroupCount(filterGroupElement);\n          case 17:\n            if (!(isChecked && !isBreadcrumb)) {\n              _context19.next = 24;\n              break;\n            }\n            _context19.next = 20;\n            return addFilterBreadcrumb(checkboxId, checkboxLabel);\n          case 20:\n            _context19.next = 22;\n            return addFilter(checkboxId);\n          case 22:\n            _context19.next = 29;\n            break;\n          case 24:\n            baseFilter.checked = false;\n            _context19.next = 27;\n            return removeFilterBreadcrumb(checkboxId);\n          case 27:\n            _context19.next = 29;\n            return removeFilter(checkboxId);\n          case 29:\n            if (isPageLoading) {\n              _context19.next = 32;\n              break;\n            }\n            _context19.next = 32;\n            return updateCardResults();\n          case 32:\n            return _context19.abrupt(\"return\", true);\n          case 33:\n          case \"end\":\n            return _context19.stop();\n        }\n      }, _callee19);\n    }));\n    return function filterCheckboxFunction() {\n      return _ref19.apply(this, arguments);\n    };\n  }();\n  var handleAnimationStart = function handleAnimationStart(event) {\n    if (event.animationName === 'unfoldGroupElement') {\n      showElement(event.target);\n    }\n    if (event.animationName === 'showVideoModal-background') {\n      loadVideoPlayer();\n    }\n  };\n  var handleAnimationEnd = function handleAnimationEnd(event) {\n    if (event.animationName === 'foldGroupElement') {\n      hideElement(event.target);\n    }\n    if (event.animationName === 'hideVideoModal-background') {\n      removeVideo(event.target);\n    }\n  };\n  //#endregion\n\n  //#region Search Functions\n  var searchFilteredResults = /*#__PURE__*/function () {\n    var _ref20 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee20() {\n      return regenerator_default.a.wrap(function _callee20$(_context20) {\n        while (1) switch (_context20.prev = _context20.next) {\n          case 0:\n            if (!(searchTerm !== '')) {\n              _context20.next = 9;\n              break;\n            }\n            if (!(customerJsonProcessed !== null)) {\n              _context20.next = 7;\n              break;\n            }\n            //in case of resources variation, making sure we remove the front page\n            if (variationType === 'resources') deactivateResourcesFrontPage();\n\n            // now we search the filtered results for the search string\n            // breadCrumb-searchTerm\n            _context20.next = 5;\n            return searchPass(searchTerm);\n          case 5:\n            customerJsonProcessed = _context20.sent;\n            console.log('customerJsonProcessed after Search', customerJsonProcessed);\n          case 7:\n            _context20.next = 12;\n            break;\n          case 9:\n            hideSearchBreadcrumb();\n\n            //in case of resources variation, making sure we add the front page\n            if (variationType === 'resources' && appliedFilters.length === 0) activateResourcesFrontPage();\n            if (variationType === 'events' && appliedFilters.length === 0) showEventFeaturedSection();\n          case 12:\n            return _context20.abrupt(\"return\", true);\n          case 13:\n          case \"end\":\n            return _context20.stop();\n        }\n      }, _callee20);\n    }));\n    return function searchFilteredResults() {\n      return _ref20.apply(this, arguments);\n    };\n  }();\n  var searchPass = /*#__PURE__*/function () {\n    var _ref21 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee21() {\n      var searchString,\n        combinedSearchResults,\n        searchResultsCompanyName,\n        searchResultsHeaderTitle,\n        searchResultsHeadlineName,\n        searchResultsBodyContent,\n        _searchResultsCompanyName,\n        _searchResultsHeaderTitle,\n        _args21 = arguments;\n      return regenerator_default.a.wrap(function _callee21$(_context21) {\n        while (1) switch (_context21.prev = _context21.next) {\n          case 0:\n            searchString = _args21.length > 0 && _args21[0] !== undefined ? _args21[0] : '';\n            if (!(searchString === '')) {\n              _context21.next = 3;\n              break;\n            }\n            return _context21.abrupt(\"return\", customerJsonProcessed);\n          case 3:\n            combinedSearchResults = [];\n            if (variationType === 'customer') {\n              searchResultsCompanyName = customerJsonProcessed.filter(function (element) {\n                if (Object.entries(element).length > 0) {\n                  element.companyName.toLowerCase() === searchString.toLowerCase();\n                }\n              });\n              searchResultsHeaderTitle = customerJsonProcessed.filter(function (element) {\n                if (Object.entries(element).length > 0) {\n                  return element.headerTitle.toLowerCase().includes(searchString.toLowerCase());\n                }\n              });\n              if (searchResultsCompanyName.length > 0) {\n                combinedSearchResults = searchResultsCompanyName;\n                if (searchResultsHeaderTitle.length > 0) {\n                  searchResultsHeaderTitle.forEach(function (card) {\n                    if (combinedSearchResults.find(function (value) {\n                      return value.headerTitle === card.headerTitle;\n                    }) === undefined) {\n                      combinedSearchResults.push(card);\n                    }\n                  });\n                }\n              } else {\n                if (searchResultsHeaderTitle.length > 0) combinedSearchResults = searchResultsHeaderTitle;\n              }\n            }\n            // Now for the Training Search functions, stil TODO add the correct variables for the training data\n            else if (variationType === 'training' || variationType === 'data-insider' || variationType === 'events') {\n              searchResultsHeadlineName = customerJsonProcessed.filter(function (element) {\n                if (Object.entries(element).length > 0) {\n                  if (variationType === 'events') {\n                    return element.eventTitle.toLowerCase().includes(searchString.toLowerCase());\n                  } else {\n                    return element.headlineText.toLowerCase().includes(searchString.toLowerCase());\n                  }\n                }\n              });\n              searchResultsBodyContent = customerJsonProcessed.filter(function (element) {\n                if (Object.entries(element).length > 0) {\n                  if (element.bodyText !== undefined) {\n                    return element.bodyText.toLowerCase().includes(searchString.toLowerCase());\n                  }\n                }\n              });\n              if (searchResultsHeadlineName.length > 0) {\n                combinedSearchResults = searchResultsHeadlineName;\n                if (searchResultsBodyContent.length > 0) {\n                  searchResultsBodyContent.forEach(function (card) {\n                    if (combinedSearchResults.find(function (value) {\n                      return value.headerTitle === card.headerTitle;\n                    }) === undefined) {\n                      combinedSearchResults.push(card);\n                    }\n                  });\n                }\n              } else {\n                if (searchResultsBodyContent.length > 0) combinedSearchResults = searchResultsBodyContent;\n              }\n            }\n            // Now for the resources variation\n            else if (variationType === 'resources') {\n              _searchResultsCompanyName = customerJsonProcessed.filter(function (element) {\n                if (Object.entries(element).length > 0) {\n                  element.eyebrow.toLowerCase() === searchString.toLowerCase();\n                }\n              });\n              _searchResultsHeaderTitle = customerJsonProcessed.filter(function (element) {\n                if (Object.entries(element).length > 0) {\n                  return element.bodyText.toLowerCase().includes(searchString.toLowerCase());\n                }\n              });\n              if (_searchResultsCompanyName.length > 0) {\n                combinedSearchResults = _searchResultsCompanyName;\n                if (_searchResultsHeaderTitle.length > 0) {\n                  _searchResultsHeaderTitle.forEach(function (card) {\n                    if (combinedSearchResults.find(function (value) {\n                      return value.headerTitle === card.headerTitle;\n                    }) === undefined) {\n                      combinedSearchResults.push(card);\n                    }\n                  });\n                }\n              } else {\n                if (_searchResultsHeaderTitle.length > 0) combinedSearchResults = _searchResultsHeaderTitle;\n              }\n            }\n            return _context21.abrupt(\"return\", combinedSearchResults);\n          case 6:\n          case \"end\":\n            return _context21.stop();\n        }\n      }, _callee21);\n    }));\n    return function searchPass() {\n      return _ref21.apply(this, arguments);\n    };\n  }();\n  var showSearchBreadcrumb = /*#__PURE__*/function () {\n    var _ref22 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee22(evt) {\n      return regenerator_default.a.wrap(function _callee22$(_context22) {\n        while (1) switch (_context22.prev = _context22.next) {\n          case 0:\n            if (!(searchTerm === '')) {\n              _context22.next = 2;\n              break;\n            }\n            throw new Error('Search Therm is empty or missing, we shouldnt be here...');\n          case 2:\n            if (!(filterBreadcrumbsSearchBadgeTerm === null)) {\n              _context22.next = 4;\n              break;\n            }\n            throw new Error(\"Don't seem to find the search badge to update...\");\n          case 4:\n            filterBreadcrumbsSearchBadgeTerm.innerText = searchTerm;\n            filterBreadcrumbsSection.classList.add('hasSearch');\n            if (evt) {\n              window.analyticsClickHandler(evt);\n            }\n            return _context22.abrupt(\"return\", true);\n          case 8:\n          case \"end\":\n            return _context22.stop();\n        }\n      }, _callee22);\n    }));\n    return function showSearchBreadcrumb(_x2) {\n      return _ref22.apply(this, arguments);\n    };\n  }();\n  var hideSearchBreadcrumb = /*#__PURE__*/function () {\n    var _ref23 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee23() {\n      return regenerator_default.a.wrap(function _callee23$(_context23) {\n        while (1) switch (_context23.prev = _context23.next) {\n          case 0:\n            if (!(searchTerm !== '')) {\n              _context23.next = 2;\n              break;\n            }\n            throw new Error('Search Therm is not empty, we shouldnt be here...');\n          case 2:\n            if (!(filterBreadcrumbsSearchBadgeTerm === null)) {\n              _context23.next = 4;\n              break;\n            }\n            throw new Error(\"Don't seem to find the search badge to update...\");\n          case 4:\n            filterBreadcrumbsSearchBadgeTerm.innerText = searchTerm;\n            filterBreadcrumbsSection.classList.remove('hasSearch');\n            return _context23.abrupt(\"return\", true);\n          case 7:\n          case \"end\":\n            return _context23.stop();\n        }\n      }, _callee23);\n    }));\n    return function hideSearchBreadcrumb() {\n      return _ref23.apply(this, arguments);\n    };\n  }();\n  var updateUrlBookmarkSearch = /*#__PURE__*/function () {\n    var _ref24 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee24() {\n      var searchEvent,\n        currentURL,\n        _args24 = arguments;\n      return regenerator_default.a.wrap(function _callee24$(_context24) {\n        while (1) switch (_context24.prev = _context24.next) {\n          case 0:\n            searchEvent = _args24.length > 0 && _args24[0] !== undefined ? _args24[0] : '';\n            if (!(searchEvent === '')) {\n              _context24.next = 3;\n              break;\n            }\n            throw new Error(\"Need an Event object or Value it's coming up empty\");\n          case 3:\n            currentURL = new URL(window.location);\n            if (searchEvent.value !== undefined && searchEvent.value !== '') {\n              currentURL.searchParams.set('search', searchEvent.value); //this is in case the update comes from a click on the radio button\n            } else {\n              currentURL.searchParams.delete('search');\n            }\n            window.history.pushState({}, \"\", currentURL);\n            return _context24.abrupt(\"return\", true);\n          case 7:\n          case \"end\":\n            return _context24.stop();\n        }\n      }, _callee24);\n    }));\n    return function updateUrlBookmarkSearch() {\n      return _ref24.apply(this, arguments);\n    };\n  }();\n  //#endregion\n\n  //#region Sort Radio Functions\n  var updateUrlBookmarkSort = /*#__PURE__*/function () {\n    var _ref25 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee25() {\n      var sortEvent,\n        currentURL,\n        _args25 = arguments;\n      return regenerator_default.a.wrap(function _callee25$(_context25) {\n        while (1) switch (_context25.prev = _context25.next) {\n          case 0:\n            sortEvent = _args25.length > 0 && _args25[0] !== undefined ? _args25[0] : '';\n            if (!(sortEvent === '')) {\n              _context25.next = 3;\n              break;\n            }\n            throw new Error(\"Need an Event object or Value it's coming up empty\");\n          case 3:\n            currentURL = new URL(window.location);\n            if (sortEvent.value !== undefined) {\n              currentURL.searchParams.set('sort', sortEvent.value); //this is in case the update comes from a click on the radio button\n            } else {\n              currentURL.searchParams.set('sort', sortEvent); // this is for when the user clicks on the 'clear all' link\n            }\n            window.history.pushState({}, \"\", currentURL);\n            return _context25.abrupt(\"return\", true);\n          case 7:\n          case \"end\":\n            return _context25.stop();\n        }\n      }, _callee25);\n    }));\n    return function updateUrlBookmarkSort() {\n      return _ref25.apply(this, arguments);\n    };\n  }();\n  var applySortToList = /*#__PURE__*/function () {\n    var _ref26 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee26() {\n      return regenerator_default.a.wrap(function _callee26$(_context26) {\n        while (1) switch (_context26.prev = _context26.next) {\n          case 0:\n            if (!(sortValue === sortType.newest)) {\n              _context26.next = 6;\n              break;\n            }\n            _context26.next = 3;\n            return sortListDate();\n          case 3:\n            customerJsonProcessed = _context26.sent;\n            _context26.next = 37;\n            break;\n          case 6:\n            if (!(sortValue === sortType.aToz)) {\n              _context26.next = 24;\n              break;\n            }\n            if (!(variationType === 'customer')) {\n              _context26.next = 13;\n              break;\n            }\n            _context26.next = 10;\n            return sortListAlphabetically();\n          case 10:\n            customerJsonProcessed = _context26.sent;\n            _context26.next = 22;\n            break;\n          case 13:\n            if (!(variationType === 'resources')) {\n              _context26.next = 19;\n              break;\n            }\n            _context26.next = 16;\n            return sortListAlphabetically();\n          case 16:\n            customerJsonProcessed = _context26.sent;\n            _context26.next = 22;\n            break;\n          case 19:\n            _context26.next = 21;\n            return sortListAlphabeticallyTitle();\n          case 21:\n            customerJsonProcessed = _context26.sent;\n          case 22:\n            _context26.next = 37;\n            break;\n          case 24:\n            if (!(sortValue === sortType.featured)) {\n              _context26.next = 30;\n              break;\n            }\n            _context26.next = 27;\n            return sortListFeatured();\n          case 27:\n            customerJsonProcessed = _context26.sent;\n            _context26.next = 37;\n            break;\n          case 30:\n            if (!(sortValue === sortType.contentType)) {\n              _context26.next = 36;\n              break;\n            }\n            _context26.next = 33;\n            return sortListContentType();\n          case 33:\n            customerJsonProcessed = _context26.sent;\n            _context26.next = 37;\n            break;\n          case 36:\n            throw new Error(\"Weird, we don't recognize the value of the sort activated...\");\n          case 37:\n            console.log('sort', customerJsonProcessed);\n            return _context26.abrupt(\"return\", true);\n          case 39:\n          case \"end\":\n            return _context26.stop();\n        }\n      }, _callee26);\n    }));\n    return function applySortToList() {\n      return _ref26.apply(this, arguments);\n    };\n  }();\n  var sortListDate = /*#__PURE__*/function () {\n    var _ref27 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee27() {\n      var temporalCustomerList;\n      return regenerator_default.a.wrap(function _callee27$(_context27) {\n        while (1) switch (_context27.prev = _context27.next) {\n          case 0:\n            temporalCustomerList = toConsumableArray_default()(customerJsonProcessed);\n            temporalCustomerList.sort(function (a, b) {\n              if (a.createdDate == b.createdDate) return 0;\n              if (a.createdDate < b.createdDate) return 1;\n              if (a.createdDate > b.createdDate) return -1;\n            });\n            return _context27.abrupt(\"return\", temporalCustomerList);\n          case 3:\n          case \"end\":\n            return _context27.stop();\n        }\n      }, _callee27);\n    }));\n    return function sortListDate() {\n      return _ref27.apply(this, arguments);\n    };\n  }();\n  var sortListAlphabetically = /*#__PURE__*/function () {\n    var _ref28 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee28() {\n      var temporalCustomerList;\n      return regenerator_default.a.wrap(function _callee28$(_context28) {\n        while (1) switch (_context28.prev = _context28.next) {\n          case 0:\n            temporalCustomerList = toConsumableArray_default()(customerJsonProcessed);\n            temporalCustomerList.sort(function (a, b) {\n              if (a.bodyText == b.bodyText) return 0;\n              if (a.bodyText < b.bodyText) return -1;\n              if (a.bodyText > b.bodyText) return 1;\n            });\n            return _context28.abrupt(\"return\", temporalCustomerList);\n          case 3:\n          case \"end\":\n            return _context28.stop();\n        }\n      }, _callee28);\n    }));\n    return function sortListAlphabetically() {\n      return _ref28.apply(this, arguments);\n    };\n  }();\n  var sortListAlphabeticallyTitle = /*#__PURE__*/function () {\n    var _ref29 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee29() {\n      var temporalCustomerList;\n      return regenerator_default.a.wrap(function _callee29$(_context29) {\n        while (1) switch (_context29.prev = _context29.next) {\n          case 0:\n            temporalCustomerList = toConsumableArray_default()(customerJsonProcessed);\n            temporalCustomerList.sort(function (a, b) {\n              if (a.headlineText == b.headlineText) return 0;\n              if (a.headlineText < b.headlineText) return -1;\n              if (a.headlineText > b.headlineText) return 1;\n            });\n            return _context29.abrupt(\"return\", temporalCustomerList);\n          case 3:\n          case \"end\":\n            return _context29.stop();\n        }\n      }, _callee29);\n    }));\n    return function sortListAlphabeticallyTitle() {\n      return _ref29.apply(this, arguments);\n    };\n  }();\n  var sortListFeatured = /*#__PURE__*/function () {\n    var _ref30 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee30() {\n      var temporalCustomerList, sortedFilterString;\n      return regenerator_default.a.wrap(function _callee30$(_context30) {\n        while (1) switch (_context30.prev = _context30.next) {\n          case 0:\n            temporalCustomerList = toConsumableArray_default()(customerJsonProcessed);\n            if (variationType === 'data-insider' || variationType === 'customer') {\n              sortedFilterString = 'sortedFilterFeatured';\n              temporalCustomerList.sort(function (a, b) {\n                return a.taggedFilters.includes(sortedFilterString) === b.taggedFilters.includes(sortedFilterString) ? 0 : a.taggedFilters.includes(sortedFilterString) ? -1 : 1;\n              });\n            } else {\n              temporalCustomerList.sort(function (a, b) {\n                return a.featuredStory === b.featuredStory ? 0 : a.featuredStory ? -1 : 1;\n              });\n            }\n            return _context30.abrupt(\"return\", temporalCustomerList);\n          case 3:\n          case \"end\":\n            return _context30.stop();\n        }\n      }, _callee30);\n    }));\n    return function sortListFeatured() {\n      return _ref30.apply(this, arguments);\n    };\n  }();\n  var sortListContentType = /*#__PURE__*/function () {\n    var _ref31 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee31() {\n      var temporalCustomerList;\n      return regenerator_default.a.wrap(function _callee31$(_context31) {\n        while (1) switch (_context31.prev = _context31.next) {\n          case 0:\n            temporalCustomerList = toConsumableArray_default()(customerJsonProcessed);\n            temporalCustomerList.sort(function (a, b) {\n              if (a.cardType == b.cardType) return 0;\n              if (a.cardType < b.cardType) return 1;\n              if (a.cardType > b.cardType) return -1;\n            });\n            return _context31.abrupt(\"return\", temporalCustomerList);\n          case 3:\n          case \"end\":\n            return _context31.stop();\n        }\n      }, _callee31);\n    }));\n    return function sortListContentType() {\n      return _ref31.apply(this, arguments);\n    };\n  }();\n  var setDefaultSort = /*#__PURE__*/function () {\n    var _ref32 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee32() {\n      var defaultSort;\n      return regenerator_default.a.wrap(function _callee32$(_context32) {\n        while (1) switch (_context32.prev = _context32.next) {\n          case 0:\n            defaultSort = appSection.querySelector('#sortNewest');\n            if (defaultSort !== null) defaultSort.checked = true;\n            return _context32.abrupt(\"return\", true);\n          case 3:\n          case \"end\":\n            return _context32.stop();\n        }\n      }, _callee32);\n    }));\n    return function setDefaultSort() {\n      return _ref32.apply(this, arguments);\n    };\n  }();\n  //#endregion\n\n  //#region Filter Checkbox Functions\n  var updateUrlBookmarkFilter = /*#__PURE__*/function () {\n    var _ref33 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee33() {\n      var currentURL;\n      return regenerator_default.a.wrap(function _callee33$(_context33) {\n        while (1) switch (_context33.prev = _context33.next) {\n          case 0:\n            currentURL = new URL(window.location);\n            if (appliedFilters.length === 0) {\n              currentURL.searchParams.delete('filters');\n            } else {\n              //if (variationType === 'resources') currentURL.searchParams.set('filters', appliedFilters.filterName);\n              currentURL.searchParams.set('filters', appliedFilters);\n            }\n            window.history.pushState({}, \"\", currentURL);\n            return _context33.abrupt(\"return\", true);\n          case 4:\n          case \"end\":\n            return _context33.stop();\n        }\n      }, _callee33);\n    }));\n    return function updateUrlBookmarkFilter() {\n      return _ref33.apply(this, arguments);\n    };\n  }();\n  var addFilter = /*#__PURE__*/function () {\n    var _ref34 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee34() {\n      var filterId,\n        filterGroup,\n        filterPlaceinList,\n        _args34 = arguments;\n      return regenerator_default.a.wrap(function _callee34$(_context34) {\n        while (1) switch (_context34.prev = _context34.next) {\n          case 0:\n            filterId = _args34.length > 0 && _args34[0] !== undefined ? _args34[0] : '';\n            filterGroup = _args34.length > 1 && _args34[1] !== undefined ? _args34[1] : '';\n            if (!(filterId === '')) {\n              _context34.next = 4;\n              break;\n            }\n            throw new Error('Filter id was not provided, is blank...');\n          case 4:\n            if (!appliedFilters.includes(filterId)) appliedFilters.push(filterId);\n\n            //in case of resources variation, making sure we remove the front page\n            if (variationType === 'resources') {\n              deactivateResourcesFrontPage();\n              filterPlaceinList = appliedFiltersResources.findIndex(function (position) {\n                return position.filterGroup === filterGroup && position.filterName === filterId;\n              });\n              if (filterPlaceinList === -1) appliedFiltersResources.push({\n                'filterName': filterId,\n                'filterGroup': filterGroup\n              });\n            }\n            if (variationType === 'events') hideEventFeaturedSection();\n            return _context34.abrupt(\"return\", true);\n          case 8:\n          case \"end\":\n            return _context34.stop();\n        }\n      }, _callee34);\n    }));\n    return function addFilter() {\n      return _ref34.apply(this, arguments);\n    };\n  }();\n  var removeFilter = /*#__PURE__*/function () {\n    var _ref35 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee35() {\n      var filterId,\n        filterGroup,\n        filterPlaceinList,\n        filterPlaceinListResources,\n        _args35 = arguments;\n      return regenerator_default.a.wrap(function _callee35$(_context35) {\n        while (1) switch (_context35.prev = _context35.next) {\n          case 0:\n            filterId = _args35.length > 0 && _args35[0] !== undefined ? _args35[0] : '';\n            filterGroup = _args35.length > 1 && _args35[1] !== undefined ? _args35[1] : '';\n            if (!(filterId === '')) {\n              _context35.next = 4;\n              break;\n            }\n            throw new Error('Filter id was not provided, is blank...');\n          case 4:\n            filterPlaceinList = appliedFilters.indexOf(filterId);\n            if (filterPlaceinList !== -1) appliedFilters.splice(filterPlaceinList, 1);\n\n            //in case of resources variation, making sure we add the front page\n            if (variationType === 'resources') {\n              // We remove the filters resource section\n              filterPlaceinListResources = appliedFiltersResources.findIndex(function (position) {\n                return position.filterGroup === filterGroup && position.filterName === filterId;\n              });\n              if (filterPlaceinListResources !== -1) appliedFiltersResources.splice(filterPlaceinListResources, 1);\n              if (appliedFilters.length === 0) {\n                activateResourcesFrontPage();\n              }\n            }\n            if (variationType === 'events' && appliedFilters.length === 0) showEventFeaturedSection();\n            return _context35.abrupt(\"return\", true);\n          case 9:\n          case \"end\":\n            return _context35.stop();\n        }\n      }, _callee35);\n    }));\n    return function removeFilter() {\n      return _ref35.apply(this, arguments);\n    };\n  }();\n  var applyFiltersToList = /*#__PURE__*/function () {\n    var _ref36 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee36() {\n      return regenerator_default.a.wrap(function _callee36$(_context36) {\n        while (1) switch (_context36.prev = _context36.next) {\n          case 0:\n            if (appliedFilters.length > 0) {\n              if (filterType === 1) {\n                appliedFilters.forEach(function (filter) {\n                  customerJsonProcessed = filterPassOR(filter);\n                });\n              } else if (variationType === 'resources') {\n                // so far this is only for resources special filter\n                customerJsonProcessed = toConsumableArray_default()(customerJsonSource);\n                customerJsonProcessed = filterPassResources(appliedFiltersResources);\n              } else {\n                // this is for training variation\n                customerJsonProcessed = toConsumableArray_default()(customerJsonSource);\n                customerJsonProcessed = filterPassAND(appliedFilters);\n              }\n            }\n            console.log('customerJsonProcessed', customerJsonProcessed);\n            return _context36.abrupt(\"return\", true);\n          case 3:\n          case \"end\":\n            return _context36.stop();\n        }\n      }, _callee36);\n    }));\n    return function applyFiltersToList() {\n      return _ref36.apply(this, arguments);\n    };\n  }();\n  var filterPassOR = function filterPassOR() {\n    var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    if (filter === '') throw new Error('No filter to pass...');\n    return customerJsonProcessed.filter(function (cusotmerElement) {\n      if (Object.entries(cusotmerElement).length > 0) {\n        if (cusotmerElement.taggedFilters !== undefined) {\n          return cusotmerElement.taggedFilters.includes(filter);\n        }\n      }\n    });\n  };\n  var filterPassAND = function filterPassAND() {\n    var appliedFilters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    if (appliedFilters === '') throw new Error('No filter to pass...');\n    return customerJsonProcessed.filter(function (cusotmerElement) {\n      if (Object.entries(cusotmerElement).length > 0) {\n        if (cusotmerElement.taggedFilters !== undefined) {\n          var hasTag = false;\n          appliedFilters.forEach(function (filter) {\n            if (cusotmerElement.taggedFilters.includes(filter)) hasTag = true;\n          });\n          return hasTag;\n        }\n      }\n    });\n  };\n  var filterPassResources = function filterPassResources() {\n    var appliedFilters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    if (appliedFilters === '') throw new Error('No filter to pass...');\n    console.log('multipleCategories:', hasMultipleCategories(appliedFilters));\n\n    // First we need to figure out what type of use case we have to decide how to filter the list\n    // The desition on how to filter depends on whether the filters are in the same category or not.\n\n    // Here we add the function to figure out if it's just one or multiple categories\n    if (!hasMultipleCategories(appliedFilters)) {\n      // Case 1: All filters are on the same category\n      // in this case we use a simple OR filtering and return the results\n      return customerJsonProcessed.filter(function (cusotmerElement) {\n        if (Object.entries(cusotmerElement).length > 0) {\n          if (cusotmerElement.taggedFilters !== undefined) {\n            var hasTag = false;\n            appliedFilters.forEach(function (filter) {\n              if (cusotmerElement.taggedFilters.includes(filter.filterName)) hasTag = true;\n            });\n            return hasTag;\n          }\n        }\n      });\n    } else {\n      // multiple categories section\n      // Case 2: One or more filters are in a different category\n      // First we need to rearrange all categories with it's selected filters so we can start the sweep\n      var categoryOrderedFilters = organizeFiltersPerCategory(appliedFilters);\n      console.log('categoryOrderedFilters', categoryOrderedFilters);\n\n      // Now we check if the unique use case gets called (one filter per category)\n      if (isOneFilterOneCategory(categoryOrderedFilters)) {\n        // Case 2.1 Check if it's only one filter per category We use AND\n        console.log('2.1 one filter per cat');\n        return customerJsonProcessed.filter(function (cusotmerElement) {\n          if (Object.entries(cusotmerElement).length > 0) {\n            if (cusotmerElement.taggedFilters !== undefined) {\n              var hasTag = true;\n              appliedFilters.forEach(function (filter) {\n                if (!cusotmerElement.taggedFilters.includes(filter.filterName)) hasTag = false;\n              });\n              return hasTag;\n            }\n          }\n        });\n      } else {\n        // Case 2.2 more than one filter per category\n        console.log('2.2 more than one filter per cat');\n        var reosurcesMultipleCategoryArray = resourcesMultipleCategoryFilterList(categoryOrderedFilters);\n        console.log('reosurcesMultipleCategoryArray', reosurcesMultipleCategoryArray);\n        var multipleCategoryFilteredCards = [];\n        reosurcesMultipleCategoryArray.forEach(function (categorySet) {\n          var filteredPart = toConsumableArray_default()(customerJsonSource);\n          filteredPart = filteredPart.filter(function (cusotmerElement) {\n            if (Object.entries(cusotmerElement).length > 0) {\n              if (cusotmerElement.taggedFilters !== undefined) {\n                var hasTag = true;\n                categorySet.forEach(function (filter) {\n                  if (!cusotmerElement.taggedFilters.includes(filter)) hasTag = false;\n                });\n                return hasTag;\n              }\n            }\n          });\n          console.log('multipleCategoryFilteredCards adding:', multipleCategoryFilteredCards, 'filteredPart', filteredPart);\n          multipleCategoryFilteredCards = multipleCategoryFilteredCards.concat(filteredPart);\n        });\n        customerJsonProcessed = toConsumableArray_default()(multipleCategoryFilteredCards);\n        //WWW-21447: Removes duplicates\n        var uniqueCustomerJsonProcessed = customerJsonProcessed.filter(function (element, index) {\n          return customerJsonProcessed.indexOf(element) === index;\n        });\n        customerJsonProcessed = uniqueCustomerJsonProcessed;\n        return customerJsonProcessed; // TODO remove this when algorithm is ready\n      }\n    }\n  };\n  var isOneFilterOneCategory = function isOneFilterOneCategory() {\n    var orderedFilters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    if (orderedFilters === '') throw new Error('No filter to pass...');\n    var isOneonOne = true;\n    orderedFilters.forEach(function (category) {\n      if (category.categoryFilters.length > 1) isOneonOne = false;\n    });\n    return isOneonOne;\n  };\n  var organizeFiltersPerCategory = function organizeFiltersPerCategory() {\n    var filterArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    if (filterArray === '') throw new Error('No filter to pass...');\n    var categoryArray = [{\n      'categoryName': filterArray[0].filterGroup,\n      'categoryFilters': [filterArray[0].filterName]\n    }];\n    filterArray.forEach(function (filterObject) {\n      // First we check if the category is present\n      var categoryIndex = categoryArray.findIndex(function (category) {\n        return category.categoryName === filterObject.filterGroup;\n      });\n      if (categoryIndex === -1) {\n        var categoryObject = {\n          'categoryName': filterObject.filterGroup,\n          'categoryFilters': [filterObject.filterName]\n        };\n        categoryArray.push(categoryObject);\n      } else {\n        var filterIndex = categoryArray[categoryIndex].categoryFilters.includes(filterObject.filterName);\n        if (!filterIndex) {\n          categoryArray[categoryIndex].categoryFilters.push(filterObject.filterName);\n        }\n      }\n    });\n    return categoryArray;\n  };\n  var resourcesMultipleCategoryFilterList = function resourcesMultipleCategoryFilterList() {\n    var initialFilterRules = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    if (initialFilterRules === null) return new Error('need filter rules to work on this function');\n    var finalFilterSet = [];\n    var processArray = toConsumableArray_default()(initialFilterRules);\n    processArray.forEach(function (category) {\n      category.calcIndex = 0;\n      category.totalFilters = category.categoryFilters.length;\n    });\n    var _loop = function _loop() {\n      var temporalSet = [];\n      var isFullPass = true;\n      processArray.forEach(function (category, categoryIndex) {\n        var algo = processArray.length - 1;\n        if (categoryIndex !== processArray.length - 1) {\n          temporalSet.push(category.categoryFilters[category.calcIndex]);\n          if (categoryIndex > 0 && category.calcIndex < category.totalFilters) category.calcIndex++;\n        } else {\n          category.categoryFilters.forEach(function (finalCategory, finalCatIndex) {\n            var endFilterSet = [].concat(temporalSet);\n            endFilterSet.push(finalCategory);\n            finalFilterSet.push(endFilterSet);\n            category.calcIndex++;\n          });\n          category.calcIndex = category.totalFilters;\n        }\n      });\n\n      //We revise that the elements are all passed\n      processArray.forEach(function (category, categoryIndex) {\n        if (categoryIndex > 0 && category.calcIndex < category.totalFilters) isFullPass = false;\n      });\n      if (isFullPass) {\n        processArray.forEach(function (category, categoryIndex) {\n          if (categoryIndex === 0) category.calcIndex++;else category.calcIndex = 0;\n        });\n      }\n    };\n    while (processArray[0].calcIndex < processArray[0].totalFilters) {\n      _loop();\n    }\n    return finalFilterSet;\n  };\n  var hasMultipleCategories = function hasMultipleCategories() {\n    var filterArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    if (filterArray === '') throw new Error('No filter to pass...');\n    if (filterArray.length === 1) return false; // Use case where there's only one filter there's only one category so we return false\n\n    // In case there's more than one filter we check each category.\n    var isMultiple = false;\n    var currentCategory = filterArray[0].filterGroup;\n    filterArray.forEach(function (filter) {\n      if (currentCategory !== filter.filterGroup) {\n        isMultiple = true;\n      }\n      currentCategory = filter.filterGroup;\n    });\n    return isMultiple;\n  };\n  var updateCustomerCountResults = /*#__PURE__*/function () {\n    var _ref37 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee37() {\n      var totalCardCount;\n      return regenerator_default.a.wrap(function _callee37$(_context37) {\n        while (1) switch (_context37.prev = _context37.next) {\n          case 0:\n            totalCardCount = 0;\n            if (!isEmptyFilterList) totalCardCount = customerJsonProcessed.length;\n            customerCountElements.forEach(function (resultsElement) {\n              resultsElement.textContent = totalCardCount;\n            });\n            return _context37.abrupt(\"return\", true);\n          case 4:\n          case \"end\":\n            return _context37.stop();\n        }\n      }, _callee37);\n    }));\n    return function updateCustomerCountResults() {\n      return _ref37.apply(this, arguments);\n    };\n  }();\n  var updateFilterGroupCount = /*#__PURE__*/function () {\n    var _ref38 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee38() {\n      var filterGroupElement,\n        filterCheckedCount,\n        groupFiltersArray,\n        _args38 = arguments;\n      return regenerator_default.a.wrap(function _callee38$(_context38) {\n        while (1) switch (_context38.prev = _context38.next) {\n          case 0:\n            filterGroupElement = _args38.length > 0 && _args38[0] !== undefined ? _args38[0] : '';\n            if (!(filterGroupElement === '')) {\n              _context38.next = 3;\n              break;\n            }\n            throw new Error('Filter Group element is not found or empty');\n          case 3:\n            filterCheckedCount = 0;\n            groupFiltersArray = filterGroupElement.querySelectorAll('.CustomerOverView-filters-element input[type=\"checkbox\"]');\n            groupFiltersArray.forEach(function (filterCheckbox) {\n              if (filterCheckbox.checked) filterCheckedCount++;\n            });\n            _context38.next = 8;\n            return updateFilterGroupCountLabel(filterGroupElement, filterCheckedCount);\n          case 8:\n            return _context38.abrupt(\"return\", true);\n          case 9:\n          case \"end\":\n            return _context38.stop();\n        }\n      }, _callee38);\n    }));\n    return function updateFilterGroupCount() {\n      return _ref38.apply(this, arguments);\n    };\n  }();\n  var updateFilterGroupCountLabel = /*#__PURE__*/function () {\n    var _ref39 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee39() {\n      var filterGroupElement,\n        filterCheckedCount,\n        filterElement,\n        _args39 = arguments;\n      return regenerator_default.a.wrap(function _callee39$(_context39) {\n        while (1) switch (_context39.prev = _context39.next) {\n          case 0:\n            filterGroupElement = _args39.length > 0 && _args39[0] !== undefined ? _args39[0] : '';\n            filterCheckedCount = _args39.length > 1 && _args39[1] !== undefined ? _args39[1] : '';\n            if (!(filterGroupElement === '')) {\n              _context39.next = 4;\n              break;\n            }\n            throw new Error('Filter Group Element is not found');\n          case 4:\n            if (!(filterCheckedCount === '')) {\n              _context39.next = 6;\n              break;\n            }\n            throw new Error('No count was given to update');\n          case 6:\n            filterElement = filterGroupElement.querySelector('.CustomerOverView-filters-title');\n            if (!(filterElement === null)) {\n              _context39.next = 9;\n              break;\n            }\n            throw new Error(\"Couldn't find the title section of the Filter Group\");\n          case 9:\n            if (filterCheckedCount === 0) {\n              filterElement.setAttribute('data-selected-Items', '');\n            } else {\n              filterElement.setAttribute('data-selected-Items', \"(\".concat(filterCheckedCount, \")\"));\n            }\n            return _context39.abrupt(\"return\", true);\n          case 11:\n          case \"end\":\n            return _context39.stop();\n        }\n      }, _callee39);\n    }));\n    return function updateFilterGroupCountLabel() {\n      return _ref39.apply(this, arguments);\n    };\n  }();\n  var addFilterBreadcrumb = /*#__PURE__*/function () {\n    var _ref40 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee40() {\n      var filterId,\n        filterName,\n        breadCrumbElement,\n        _args40 = arguments;\n      return regenerator_default.a.wrap(function _callee40$(_context40) {\n        while (1) switch (_context40.prev = _context40.next) {\n          case 0:\n            filterId = _args40.length > 0 && _args40[0] !== undefined ? _args40[0] : '';\n            filterName = _args40.length > 1 && _args40[1] !== undefined ? _args40[1] : '';\n            if (!(filterId === '' || filterName === '')) {\n              _context40.next = 4;\n              break;\n            }\n            throw new Error('Filter id or name are missing.');\n          case 4:\n            if (!isBreadcrumbElementPresent(filterId)) {\n              _context40.next = 6;\n              break;\n            }\n            throw Error('Looks like the element is already in the list seems like an id is duplicated.');\n          case 6:\n            breadCrumbElement = document.createElement('button');\n            breadCrumbElement.setAttribute('id', \"breadCrumb-\".concat(filterId));\n            breadCrumbElement.setAttribute('type', 'button');\n            breadCrumbElement.setAttribute('title', \"remove \".concat(filterName, \" filter\"));\n            breadCrumbElement.setAttribute('role', 'button');\n            breadCrumbElement.setAttribute('aria-labelledby', \"breadcrumb for \".concat(filterName));\n            breadCrumbElement.setAttribute('aria-label', \"breadcrumb for \".concat(filterName));\n            breadCrumbElement.classList.add('CustomerOverView-filterBreadcrumbs-element');\n            breadCrumbElement.textContent = filterName;\n            breadCrumbElement.addEventListener('click', clickCheckbox);\n            filterBreadcrumbsFilterSection.appendChild(breadCrumbElement);\n            filterBreadcrumbsSection.classList.add('hasFilters');\n            return _context40.abrupt(\"return\", true);\n          case 19:\n          case \"end\":\n            return _context40.stop();\n        }\n      }, _callee40);\n    }));\n    return function addFilterBreadcrumb() {\n      return _ref40.apply(this, arguments);\n    };\n  }();\n  var removeFilterBreadcrumb = /*#__PURE__*/function () {\n    var _ref41 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee41() {\n      var filterId,\n        filterBreadCrumbToRemove,\n        _args41 = arguments;\n      return regenerator_default.a.wrap(function _callee41$(_context41) {\n        while (1) switch (_context41.prev = _context41.next) {\n          case 0:\n            filterId = _args41.length > 0 && _args41[0] !== undefined ? _args41[0] : '';\n            if (!(filterId === '')) {\n              _context41.next = 3;\n              break;\n            }\n            throw new Error('Filterid or name are missing.');\n          case 3:\n            if (isBreadcrumbElementPresent(filterId)) {\n              _context41.next = 5;\n              break;\n            }\n            throw Error(\"Looks like the element is no present in the breadcrumb list. Looking for Filter with id: \".concat(filterId));\n          case 5:\n            filterBreadCrumbToRemove = filterBreadcrumbsFilterSection.querySelector(\"#breadCrumb-\".concat(filterId));\n            filterBreadCrumbToRemove.remove();\n\n            // We're using 1 instead of 0 because looks like this function is being run before updating the appliedFilter Array\n            if (appliedFilters.length === 1) filterBreadcrumbsSection.classList.remove('hasFilters');\n            return _context41.abrupt(\"return\", true);\n          case 9:\n          case \"end\":\n            return _context41.stop();\n        }\n      }, _callee41);\n    }));\n    return function removeFilterBreadcrumb() {\n      return _ref41.apply(this, arguments);\n    };\n  }();\n  var clearAllFilters = /*#__PURE__*/function () {\n    var _ref42 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee42() {\n      var event,\n        placeholder,\n        _args42 = arguments;\n      return regenerator_default.a.wrap(function _callee42$(_context42) {\n        while (1) switch (_context42.prev = _context42.next) {\n          case 0:\n            event = _args42.length > 0 && _args42[0] !== undefined ? _args42[0] : '';\n            if (event !== '') event.preventDefault();\n            appliedFilters = [];\n            updateUrlBookmarkFilter();\n            placeholder = 'autoTrigger'; //logic for events featured\n            clearSearchTrigger(placeholder);\n            filterCheckboxesList.forEach(function (filterCheckbox) {\n              if (filterCheckbox.checked) {\n                //filterCheckbox.click();\n                $(\".customCheckBox\").prev().prop(\"checked\", false);\n              }\n            });\n            if (variationType === 'events') showEventFeaturedSection();\n            while (filterBreadcrumbsFilterSection.firstChild) {\n              filterBreadcrumbsFilterSection.removeChild(filterBreadcrumbsFilterSection.firstChild);\n            }\n            filterBreadcrumbsSection.classList.remove('hasFilters');\n            sortValue = \"Newest\";\n            customerJsonProcessed = toConsumableArray_default()(customerJsonSource);\n            if (!(variationType !== 'resources' && !isPageLoading)) {\n              _context42.next = 16;\n              break;\n            }\n            updateUrlBookmarkSort(sortValue);\n            _context42.next = 16;\n            return setDefaultSort();\n          case 16:\n            _context42.next = 18;\n            return applySortToList();\n          case 18:\n            _context42.next = 20;\n            return clearCustomerCardSection();\n          case 20:\n            _context42.next = 22;\n            return displayProcessedCardsToPage();\n          case 22:\n            _context42.next = 24;\n            return updateCustomerCountResults();\n          case 24:\n            //in case of resources variation, making sure we add the front page\n            if (variationType === 'resources') activateResourcesFrontPage();\n            $(\".CustomerOverView-filters-title\").removeAttr(\"data-selected-Items\");\n            $(\".CustomerOverView-sort-title\").removeAttr(\"data-selected-Items\");\n            return _context42.abrupt(\"return\", true);\n          case 28:\n          case \"end\":\n            return _context42.stop();\n        }\n      }, _callee42);\n    }));\n    return function clearAllFilters() {\n      return _ref42.apply(this, arguments);\n    };\n  }();\n  var clearAllFiltersOnLoad = /*#__PURE__*/function () {\n    var _ref43 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee43() {\n      return regenerator_default.a.wrap(function _callee43$(_context43) {\n        while (1) switch (_context43.prev = _context43.next) {\n          case 0:\n            filterCheckboxesList.forEach(function (filterCheckbox) {\n              if (filterCheckbox.checked) {\n                filterCheckbox.checked = false;\n              }\n            });\n            filterBreadcrumbsSection.classList.remove('hasFilters');\n            return _context43.abrupt(\"return\", true);\n          case 3:\n          case \"end\":\n            return _context43.stop();\n        }\n      }, _callee43);\n    }));\n    return function clearAllFiltersOnLoad() {\n      return _ref43.apply(this, arguments);\n    };\n  }();\n  var collapseAllFilterGroups = /*#__PURE__*/function () {\n    var _ref44 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee44() {\n      return regenerator_default.a.wrap(function _callee44$(_context44) {\n        while (1) switch (_context44.prev = _context44.next) {\n          case 0:\n            filterGroupTitlesList.forEach(function (filterGroupTitle) {\n              if (!filterGroupTitle.classList.contains('collapsed')) filterGroupTitle.click();\n            });\n            return _context44.abrupt(\"return\", true);\n          case 2:\n          case \"end\":\n            return _context44.stop();\n        }\n      }, _callee44);\n    }));\n    return function collapseAllFilterGroups() {\n      return _ref44.apply(this, arguments);\n    };\n  }();\n  //#endregion\n\n  //#region Bookmark Functions\n  var applyBookmarkParameters = /*#__PURE__*/function () {\n    var _ref45 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee45() {\n      var actualUrl, filterList, searchWord, bookmarkedSortElement;\n      return regenerator_default.a.wrap(function _callee45$(_context45) {\n        while (1) switch (_context45.prev = _context45.next) {\n          case 0:\n            actualUrl = new URL(window.location);\n            _context45.next = 3;\n            return clearAllFiltersOnLoad();\n          case 3:\n            // check if we have filters assigned\n            if (actualUrl.searchParams.has('filters')) {\n              filterList = actualUrl.searchParams.get('filters').split(',');\n              if (filterList.length > 0) {\n                filterCheckboxesList.forEach(function (filterCheckbox) {\n                  if (filterList.includes(filterCheckbox.id) && !filterCheckbox.checked) {\n                    filterCheckbox.click();\n                    if (filterCheckbox.parentElement.parentElement.parentElement.classList.contains('collapsed')) {\n                      filterCheckbox.parentElement.parentElement.parentElement.querySelector('.CustomerOverView-filters-title').click();\n                    }\n                  }\n                });\n              }\n            }\n\n            //check if we have search assigned\n            if (actualUrl.searchParams.has('search')) {\n              /// TODO search assignation\n              searchWord = actualUrl.searchParams.get('search');\n              if (searchWord !== '') {\n                searchTerm = searchWord;\n                searchElement.value = searchTerm;\n                searchElement.classList.add('inSearch');\n                showSearchBreadcrumb();\n              }\n            }\n\n            //check if we have sort assigned\n            if (!actualUrl.searchParams.has('sort')) {\n              _context45.next = 11;\n              break;\n            }\n            //put sort into variable\n            sortValue = actualUrl.searchParams.get('sort');\n            bookmarkedSortElement = appSection.querySelector(\"[value=\".concat(sortValue, \"]\"));\n            if (bookmarkedSortElement !== null) bookmarkedSortElement.checked = true;\n            _context45.next = 13;\n            break;\n          case 11:\n            _context45.next = 13;\n            return setDefaultSort();\n          case 13:\n            return _context45.abrupt(\"return\", true);\n          case 14:\n          case \"end\":\n            return _context45.stop();\n        }\n      }, _callee45);\n    }));\n    return function applyBookmarkParameters() {\n      return _ref45.apply(this, arguments);\n    };\n  }();\n  var finishPageLoading = /*#__PURE__*/function () {\n    var _ref46 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee46() {\n      return regenerator_default.a.wrap(function _callee46$(_context46) {\n        while (1) switch (_context46.prev = _context46.next) {\n          case 0:\n            isPageLoading = false;\n            return _context46.abrupt(\"return\", true);\n          case 2:\n          case \"end\":\n            return _context46.stop();\n        }\n      }, _callee46);\n    }));\n    return function finishPageLoading() {\n      return _ref46.apply(this, arguments);\n    };\n  }();\n  var checkUrlBookmark = /*#__PURE__*/function () {\n    var _ref47 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee47() {\n      var urlSource;\n      return regenerator_default.a.wrap(function _callee47$(_context47) {\n        while (1) switch (_context47.prev = _context47.next) {\n          case 0:\n            urlSource = new URL(window.location);\n            if (!(urlSource.search === '' || urlSource.search === '?wcmmode=disabled')) {\n              _context47.next = 3;\n              break;\n            }\n            return _context47.abrupt(\"return\", false);\n          case 3:\n            if (!(variationType === 'resources' && urlSource.search === '?wcmmode=disabled&sort=Newest')) {\n              _context47.next = 5;\n              break;\n            }\n            return _context47.abrupt(\"return\", false);\n          case 5:\n            _context47.next = 7;\n            return processBookMarks(urlSource.searchParams);\n          case 7:\n            return _context47.abrupt(\"return\", true);\n          case 8:\n          case \"end\":\n            return _context47.stop();\n        }\n      }, _callee47);\n    }));\n    return function checkUrlBookmark() {\n      return _ref47.apply(this, arguments);\n    };\n  }();\n  var processBookMarks = /*#__PURE__*/function () {\n    var _ref48 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee48() {\n      var paramList,\n        _args48 = arguments;\n      return regenerator_default.a.wrap(function _callee48$(_context48) {\n        while (1) switch (_context48.prev = _context48.next) {\n          case 0:\n            paramList = _args48.length > 0 && _args48[0] !== undefined ? _args48[0] : '';\n            if (!(paramList === '')) {\n              _context48.next = 3;\n              break;\n            }\n            throw new Error(\"Parameter List passed is empty\");\n          case 3:\n            if (!paramList.has('filters')) {\n              _context48.next = 6;\n              break;\n            }\n            _context48.next = 6;\n            return processBookmarkFilters(paramList.get('filters'));\n          case 6:\n            if (!paramList.has('search')) {\n              _context48.next = 9;\n              break;\n            }\n            _context48.next = 9;\n            return processBookmarkSearch(paramList.get('search'));\n          case 9:\n            if (!paramList.has('sort')) {\n              _context48.next = 12;\n              break;\n            }\n            _context48.next = 12;\n            return processBookmarkSort(paramList.get('sort'));\n          case 12:\n            return _context48.abrupt(\"return\", true);\n          case 13:\n          case \"end\":\n            return _context48.stop();\n        }\n      }, _callee48);\n    }));\n    return function processBookMarks() {\n      return _ref48.apply(this, arguments);\n    };\n  }();\n  var processBookmarkFilters = /*#__PURE__*/function () {\n    var _ref49 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee49() {\n      var filterArray,\n        _args49 = arguments;\n      return regenerator_default.a.wrap(function _callee49$(_context49) {\n        while (1) switch (_context49.prev = _context49.next) {\n          case 0:\n            filterArray = _args49.length > 0 && _args49[0] !== undefined ? _args49[0] : '';\n            if (!(filterArray === '')) {\n              _context49.next = 3;\n              break;\n            }\n            throw new Error(\"Filter Array is empty\");\n          case 3:\n            if (!(filterArray.length === 0)) {\n              _context49.next = 5;\n              break;\n            }\n            return _context49.abrupt(\"return\", false);\n          case 5:\n            appliedFilters = filterArray.split(',');\n            return _context49.abrupt(\"return\", true);\n          case 7:\n          case \"end\":\n            return _context49.stop();\n        }\n      }, _callee49);\n    }));\n    return function processBookmarkFilters() {\n      return _ref49.apply(this, arguments);\n    };\n  }();\n  var processBookmarkSearch = /*#__PURE__*/function () {\n    var _ref50 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee50() {\n      var searchTerm,\n        _args50 = arguments;\n      return regenerator_default.a.wrap(function _callee50$(_context50) {\n        while (1) switch (_context50.prev = _context50.next) {\n          case 0:\n            searchTerm = _args50.length > 0 && _args50[0] !== undefined ? _args50[0] : '';\n            if (!(searchTerm === '')) {\n              _context50.next = 3;\n              break;\n            }\n            throw new Error(\"Search Term passed is empty\");\n          case 3:\n            return _context50.abrupt(\"return\", true);\n          case 4:\n          case \"end\":\n            return _context50.stop();\n        }\n      }, _callee50);\n    }));\n    return function processBookmarkSearch() {\n      return _ref50.apply(this, arguments);\n    };\n  }();\n  var processBookmarkSort = /*#__PURE__*/function () {\n    var _ref51 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee51() {\n      var sortName,\n        _args51 = arguments;\n      return regenerator_default.a.wrap(function _callee51$(_context51) {\n        while (1) switch (_context51.prev = _context51.next) {\n          case 0:\n            sortName = _args51.length > 0 && _args51[0] !== undefined ? _args51[0] : '';\n            if (!(sortName === '')) {\n              _context51.next = 3;\n              break;\n            }\n            throw new Error(\"Sort Name passed is empty\");\n          case 3:\n            sortValue = sortName;\n            return _context51.abrupt(\"return\", true);\n          case 5:\n          case \"end\":\n            return _context51.stop();\n        }\n      }, _callee51);\n    }));\n    return function processBookmarkSort() {\n      return _ref51.apply(this, arguments);\n    };\n  }();\n  //#endregion\n\n  //#region Card Functions\n  var displayProcessedCardsToPage = /*#__PURE__*/function () {\n    var _ref52 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee52() {\n      var cardstoServe, pageCounter, customerPointer, _customerPointer, loadCounter, perPageCounter;\n      return regenerator_default.a.wrap(function _callee52$(_context52) {\n        while (1) switch (_context52.prev = _context52.next) {\n          case 0:\n            cardstoServe = initialCardCount; // this is for when we don't get any results\n            if (customerJsonProcessed.length === 0) {\n              emptySearchElement.classList.add('show');\n              addRelatedCards();\n              isEmptyFilterList = true;\n            } else {\n              emptySearchElement.classList.remove('show');\n              isEmptyFilterList = false;\n            }\n            if (customerJsonProcessed.length < initialCardCount) cardstoServe = customerJsonProcessed.length;\n\n            //  WWW-18467: if pageURL has ?page=,  Load cards for respective page number, else load normal\n            if (pageURL.indexOf(\"?page=\") > -1) {\n              pageCounter = pageURL.split('page=')[1] * 9 - 9;\n              for (customerPointer = pageCounter; customerPointer < cardstoServe + pageCounter; customerPointer++) {\n                addNewCard(customerJsonProcessed[customerPointer]);\n              }\n            } else {\n              for (_customerPointer = 0; _customerPointer < cardstoServe; _customerPointer++) {\n                addNewCard(customerJsonProcessed[_customerPointer]);\n              }\n            }\n            actualCustomerCardsServed = initialCardCount;\n            // WWW-18467: Add initial value to loadMore button ?page=2\n            if (actualCustomerCardsServed == numberOfCardsToServeCount) {\n              appSection.querySelector('.CustomerOverView-cards-loadMore-button').setAttribute(\"href\", \"?page=2\");\n              $('.CustomerOverView-cards-loadMore-button').each(function () {\n                $(this).attr(\"href\", \"?page=2\");\n              });\n            }\n\n            // WWW-18467: On page load if pageURL has ?page=, add 1 and set ?page=\n            if (pageURL.indexOf(\"?page=\") > -1) {\n              loadCounter = parseInt(pageURL.split('page=')[1]) + 1;\n              appSection.querySelector('.CustomerOverView-cards-loadMore-button').setAttribute(\"href\", \"?page=\" + loadCounter);\n            }\n            if (canWeServeMoreCards()) revealLoadMoreSection();\n\n            // WWW-18581: Load more button is still displaying though no more cards are available\n            if (pageURL.indexOf(\"?page=\") > -1) {\n              perPageCounter = pageURL.split('page=')[1] * 9;\n              if (perPageCounter >= customerJsonProcessed.length) {\n                hideLoadMoreSection();\n              }\n            }\n            if ($(window).width() > 767) {\n              if ($('.CustomerOverView-filterBreadcrumbs').hasClass('hasFilters') || $('.CustomerOverView-filterBreadcrumbs').hasClass('hasSearch')) {\n                $('.CustomerOverView-cards-emptySearch.show').css({\n                  '-webkit-transform': 'translateY(0px)',\n                  'transform': 'translateY(0px)'\n                });\n              } else {\n                $('.CustomerOverView-cards-emptySearch.show').css({\n                  '-webkit-transform': 'translateY(-76px)',\n                  'transform': 'translateY(-76px)'\n                });\n              }\n            }\n            return _context52.abrupt(\"return\", true);\n          case 11:\n          case \"end\":\n            return _context52.stop();\n        }\n      }, _callee52);\n    }));\n    return function displayProcessedCardsToPage() {\n      return _ref52.apply(this, arguments);\n    };\n  }();\n  var addNewCard = /*#__PURE__*/function () {\n    var _ref53 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee53() {\n      var customerData,\n        card,\n        cardElementInside,\n        _args53 = arguments;\n      return regenerator_default.a.wrap(function _callee53$(_context53) {\n        while (1) switch (_context53.prev = _context53.next) {\n          case 0:\n            customerData = _args53.length > 0 && _args53[0] !== undefined ? _args53[0] : '';\n            if (!(customerData === '')) {\n              _context53.next = 3;\n              break;\n            }\n            throw new Error(\"Customer is empty, can't add Card\");\n          case 3:\n            _context53.next = 5;\n            return createCard(customerData);\n          case 5:\n            card = _context53.sent;\n            if (variationType === 'customer') {\n              addImage(card, customerData);\n              addLogo(card, customerData);\n              observeCard(card);\n            } else if (variationType === 'training' || variationType === 'events') {\n              addIcon(card, customerData);\n              observeCard(card);\n            } else if (variationType === 'resources' || variationType === 'data-insider') {\n              cardElementInside = card.querySelector('.CustomerOverViewCard');\n              addImage(cardElementInside, customerData);\n              observeCard(cardElementInside);\n            }\n            return _context53.abrupt(\"return\", true);\n          case 8:\n          case \"end\":\n            return _context53.stop();\n        }\n      }, _callee53);\n    }));\n    return function addNewCard() {\n      return _ref53.apply(this, arguments);\n    };\n  }();\n  var addImage = function addImage() {\n    var cardElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var customerData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    if (cardElement === '') throw new Error('Card element is not present to add image');\n    if (customerData === '') throw new Error('Customer data is not present to add image');\n    return new Promise(function (resolve, reject) {\n      var cardElementImageSection = cardElement.querySelector('.CustomerOverViewCard-headerImage');\n      if (cardElementImageSection === null) reject(new Error('weird, Card element image wasnt found, check the card template'));\n      var imageElement = new Image();\n      imageElement.onload = function () {\n        return resolve(imageElement);\n      };\n      imageElement.onerror = function () {\n        return resolve(addMissingImageTag(imageElement, cardElementImageSection));\n      };\n      var cardImage = customerData.backgroundImage;\n      if (customerData.cardType === 'video' && customerData.backgroundImage === '') {\n        cardImage = \"//play.vidyard.com/\".concat(customerData.videoId, \".jpg\");\n      }\n      imageElement.dataset.src = cardImage;\n      if (variationType === 'resources' && customerData.cardType === 'video') {\n        imageElement.alt = customerData.bgImageAltText !== '' ? customerData.bgImageAltText : customerData.videoUrltitle;\n      } else {\n        imageElement.alt = customerData.bgImageAltText;\n      }\n      cardElementImageSection.appendChild(imageElement);\n    });\n  };\n  var addLogo = /*#__PURE__*/function () {\n    var _ref54 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee54() {\n      var cardElement,\n        customerData,\n        _args54 = arguments;\n      return regenerator_default.a.wrap(function _callee54$(_context54) {\n        while (1) switch (_context54.prev = _context54.next) {\n          case 0:\n            cardElement = _args54.length > 0 && _args54[0] !== undefined ? _args54[0] : '';\n            customerData = _args54.length > 1 && _args54[1] !== undefined ? _args54[1] : '';\n            if (!(cardElement === '')) {\n              _context54.next = 4;\n              break;\n            }\n            throw new Error('Card element is not present to add image');\n          case 4:\n            if (!(customerData === '')) {\n              _context54.next = 6;\n              break;\n            }\n            throw new Error('Customer data is not present to add image');\n          case 6:\n            return _context54.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var cardElementImageSection = cardElement.querySelector('.CustomerOverViewCard-customerIcon');\n              if (cardElementImageSection === null) reject(new Error('weird, Card element logo wasnt found, check the card template'));\n              var logoElement = new Image();\n              logoElement.onload = function () {\n                return resolve(logoElement);\n              };\n              logoElement.onerror = function () {\n                return resolve(addMissingLogoTag(logoElement, cardElementImageSection));\n              };\n              logoElement.dataset.src = customerData.logoImage;\n              logoElement.alt = customerData.logoImageAltText;\n              cardElementImageSection.appendChild(logoElement);\n            }));\n          case 7:\n          case \"end\":\n            return _context54.stop();\n        }\n      }, _callee54);\n    }));\n    return function addLogo() {\n      return _ref54.apply(this, arguments);\n    };\n  }();\n  var addIcon = /*#__PURE__*/function () {\n    var _ref55 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee55() {\n      var cardElement,\n        customerData,\n        _args55 = arguments;\n      return regenerator_default.a.wrap(function _callee55$(_context55) {\n        while (1) switch (_context55.prev = _context55.next) {\n          case 0:\n            cardElement = _args55.length > 0 && _args55[0] !== undefined ? _args55[0] : '';\n            customerData = _args55.length > 1 && _args55[1] !== undefined ? _args55[1] : '';\n            if (!(cardElement === '')) {\n              _context55.next = 4;\n              break;\n            }\n            throw new Error('Card element is not present to add icon');\n          case 4:\n            if (!(customerData === '')) {\n              _context55.next = 6;\n              break;\n            }\n            throw new Error('Customer data is not present to add icon');\n          case 6:\n            return _context55.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var cardElementLogoSection = cardElement.querySelector('.CustomerOverViewCard-customerIcon .customerIconLogo');\n              if (cardElementLogoSection === null) reject(new Error('weird, Card element logo wasnt found, check the card template'));\n\n              //Here we're gonna check if the logo is coming from the dataset\n              var logoImageUrl = '';\n              if (customerData.logoImage !== null && customerData.logoImage !== undefined && customerData.logoImage !== '') {\n                logoImageUrl = customerData.logoImage;\n              }\n\n              //Here we're gonna check if the altText is coming from the dataset\n              var logoAlt = '';\n              if (customerData.altText !== null && customerData.altText !== undefined && customerData.altText !== '') {\n                logoAlt = customerData.altText;\n              }\n              var iconElement = new Image();\n              iconElement.onload = function () {\n                return resolve(iconElement);\n              };\n              iconElement.onerror = function () {\n                return resolve(addMissingLogoTag(iconElement, cardElementLogoSection));\n              };\n              iconElement.dataset.src = logoImageUrl;\n              iconElement.alt = logoAlt;\n              cardElementLogoSection.appendChild(iconElement);\n            }));\n          case 7:\n          case \"end\":\n            return _context55.stop();\n        }\n      }, _callee55);\n    }));\n    return function addIcon() {\n      return _ref55.apply(this, arguments);\n    };\n  }();\n  var revealCard = /*#__PURE__*/function () {\n    var _ref56 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee56() {\n      var cardElement,\n        _args56 = arguments;\n      return regenerator_default.a.wrap(function _callee56$(_context56) {\n        while (1) switch (_context56.prev = _context56.next) {\n          case 0:\n            cardElement = _args56.length > 0 && _args56[0] !== undefined ? _args56[0] : '';\n            if (!(cardElement === '')) {\n              _context56.next = 3;\n              break;\n            }\n            throw new Error('Card element is not present to add image');\n          case 3:\n            cardElement.classList.remove('loadingContent');\n            return _context56.abrupt(\"return\", true);\n          case 5:\n          case \"end\":\n            return _context56.stop();\n        }\n      }, _callee56);\n    }));\n    return function revealCard() {\n      return _ref56.apply(this, arguments);\n    };\n  }();\n  var createCard = /*#__PURE__*/function () {\n    var _ref57 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee57() {\n      var customerData,\n        anchorTarget,\n        anchorTarget2,\n        AbsoluteUrlRgExp,\n        fileExt,\n        _fileExt,\n        taggedFiltersData,\n        cardElement,\n        anchorWrapper,\n        iconType,\n        _anchorWrapper,\n        hasImage,\n        displayTime,\n        eventUrl,\n        extUrlAttribute,\n        placeHolderStartDate,\n        placeHolderEndDate,\n        startDate,\n        endDate,\n        _args57 = arguments;\n      return regenerator_default.a.wrap(function _callee57$(_context57) {\n        while (1) switch (_context57.prev = _context57.next) {\n          case 0:\n            customerData = _args57.length > 0 && _args57[0] !== undefined ? _args57[0] : '';\n            if (!(customerData === '')) {\n              _context57.next = 3;\n              break;\n            }\n            throw new Error(\"Customer is empty, can't add Card\");\n          case 3:\n            anchorTarget = '_self';\n            if (customerData.openNewTab !== undefined && customerData.openNewTab) anchorTarget = '_blank';\n            anchorTarget2 = '_self';\n            if (customerData.openNewTab2 !== undefined && customerData.openNewTab2) anchorTarget2 = '_blank';\n            AbsoluteUrlRgExp = new RegExp('^(?:[a-z]+:)?//', 'i'); //Regex to test for absolute url.\n            if (AbsoluteUrlRgExp.test(customerData.ctaUrl) === false && AbsoluteUrlRgExp.test(customerData.ctaLink)) {\n              if (customerData.ctaUrl) {\n                fileExt = customerData.ctaUrl.split('.').pop().split(/\\#|\\?/)[0];\n                if (fileExt !== 'html' && fileExt !== 'pdf') {\n                  customerData.ctaUrl = customerData.ctaUrl + '.html';\n                }\n              } else if (customerData.ctaLink) {\n                _fileExt = customerData.ctaLink.split('.').pop().split(/\\#|\\?/)[0];\n                if (_fileExt !== 'html' && _fileExt !== 'pdf') {\n                  customerData.ctaLink = customerData.ctaLink + '.html';\n                }\n              }\n            }\n            taggedFiltersData = \"\";\n            if (customerData.taggedFilters) {\n              taggedFiltersData = customerData.taggedFilters.replaceAll(',', ' ');\n            }\n            cardElement = document.createElement('div');\n            cardElement.classList.add('CustomerOverViewCard');\n            cardElement.classList.add('loadingContent');\n            cardElement.setAttribute('data-track-analytics', 'true');\n            cardElement.setAttribute('id', \"customerCard\".concat(Math.floor(Math.random() * (10000 - 1 + 1)) + 1));\n            cardElement.setAttribute('data-tagged-filters', taggedFiltersData);\n            cardElement.setAttribute('tabindex', '0');\n            cardElement.setAttribute('role', 'link');\n            cardElement.setAttribute(\"aria-labelledby\", \"Resource Card\");\n            cardElement.setAttribute(\"aria-describedby\", \"Resource Card\");\n            cardElement.setAttribute(\"aria-description\", \"Resource Card With a link to such resource\");\n            if (!(variationType === 'customer')) {\n              _context57.next = 26;\n              break;\n            }\n            cardElement.innerHTML = \"\\n        <div class=\\\"CustomerOverViewCard-headerImage\\\" role=\\\"img\\\"></div>\\n        <div class=\\\"CustomerOverViewCard-customerIcon\\\" role=\\\"img\\\"></div>\\n        <div class=\\\"CustomerOverViewCard-headerText\\\" role=\\\"heading\\\">\\n          \".concat(customerData.headerTitle, \"\\n        </div>\\n        <div class=\\\"CustomerOverViewCard-cta\\\">\\n          <a data-track-analytics=\\\"true\\\" target=\\\"\").concat(anchorTarget, \"\\\" href=\\\"\").concat(customerData.ctaUrl, \"\\\" class=\\\"splunk-btn sp-btn-borderless sp-btn-darkGray box__cta\\\" role=\\\"link\\\">\").concat(customerData.ctaText, \"</a>\\n        </div>\\n      \");\n            _context57.next = 41;\n            break;\n          case 26:\n            if (!(variationType === 'data-insider')) {\n              _context57.next = 32;\n              break;\n            }\n            cardElement.classList.add('DataInsider');\n            cardElement.innerHTML = \"\\n        <div class=\\\"CustomerOverViewCard-headerImage\\\" role=\\\"img\\\"></div>\\n        <div class=\\\"CustomerOverViewCard-headerText\\\" role=\\\"heading\\\">\\n          <a data-track-analytics=\\\"true\\\" target=\\\"\".concat(anchorTarget, \"\\\" href=\\\"\").concat(customerData.ctaLink, \"\\\" role=\\\"link\\\">\").concat(customerData.headlineText, \"</a>\\n        </div>\\n        <div class=\\\"CustomerOverViewCard-descriptionText\\\" role=\\\"heading\\\">\").concat(customerData.bodyText, \"</div>\\n      \");\n            if (customerData.ctaUrl !== '' && customerData.ctaUrl !== '/') {\n              anchorWrapper = document.createElement('a');\n              anchorWrapper.classList.add('resources-card-link-wrapper');\n              anchorWrapper.setAttribute('data-track-analytics', 'true');\n              anchorWrapper.setAttribute('href', customerData.ctaLink);\n              anchorWrapper.setAttribute('title', \"\".concat(customerData.bgImageAltText !== '' ? customerData.bgImageAltText : customerData.videoUrltitle));\n              anchorWrapper.innerHTML = cardElement.outerHTML;\n              cardElement = anchorWrapper;\n            }\n            _context57.next = 41;\n            break;\n          case 32:\n            if (!(variationType === 'training')) {\n              _context57.next = 40;\n              break;\n            }\n            _context57.next = 35;\n            return setTrainingIcon(customerData.altText);\n          case 35:\n            iconType = _context57.sent;\n            cardElement.classList.add('TrainingCard');\n            if (customerData.ctaText2 == \"\" || customerData.ctaUrl2 == \"\") {\n              cardElement.innerHTML = \"\\n          <div class=\\\"CustomerOverViewCard-customerIcon\\\" role=\\\"section\\\">\\n          <div class=\\\"customerIconLogo\\\" role=\\\"img\\\"></div>\\n          <div class=\\\"customerIconLabel\\\" role=\\\"heading\\\">\".concat(customerData.eyebrow, \"</div>\\n          </div>\\n          <div class=\\\"CustomerOverViewCard-headerText\\\" role=\\\"heading\\\">\").concat(customerData.headlineText, \"</div>\\n          <div class=\\\"CustomerOverViewCard-descriptionText\\\" role=\\\"heading\\\">\").concat(customerData.bodyText, \"</div>\\n          <div class=\\\"CustomerOverViewCard-cta\\\">\\n            <a  data-track-analytics=\\\"true\\\"\\n                target=\\\"\").concat(anchorTarget, \"\\\"\\n                href=\\\"\").concat(customerData.ctaUrl, \"\\\"\\n                class=\\\"splunk-btn sp-btn-borderless sp-btn-darkGray box__cta\\\"\\n                role=\\\"link\\\">\").concat(customerData.ctaText, \"</a>\\n          </div>\\n        \");\n            } else {\n              cardElement.classList.add('doubleCTA');\n              cardElement.innerHTML = \"\\n        <div class=\\\"CustomerOverViewCard-customerIcon\\\" role=\\\"section\\\">\\n        <div class=\\\"customerIconLogo\\\" role=\\\"img\\\"></div>\\n        <div class=\\\"customerIconLabel\\\" role=\\\"heading\\\">\".concat(customerData.eyebrow, \"</div>\\n        </div>\\n        <div class=\\\"CustomerOverViewCard-headerText\\\" role=\\\"heading\\\">\").concat(customerData.headlineText, \"</div>\\n        <div class=\\\"CustomerOverViewCard-descriptionText\\\" role=\\\"heading\\\">\").concat(customerData.bodyText, \"</div>\\n        <div class=\\\"CustomerOverViewCard-cta-2\\\">\\n          <a  data-track-analytics=\\\"true\\\"\\n              target=\\\"\").concat(anchorTarget, \"\\\"\\n              href=\\\"\").concat(customerData.ctaUrl, \"\\\"\\n              class=\\\"splunk-btn sp-btn-borderless sp-btn-darkGray box__cta\\\"\\n              role=\\\"link\\\">\").concat(customerData.ctaText, \"</a>\\n        </div>\\n        <div class=\\\"CustomerOverViewCard-cta-2\\\">\\n          <a  data-track-analytics=\\\"true\\\"\\n              target=\\\"\").concat(anchorTarget2, \"\\\"\\n              href=\\\"\").concat(customerData.ctaUrl2, \"\\\"\\n              class=\\\"splunk-btn sp-btn-borderless sp-btn-darkGray box__cta\\\"\\n              role=\\\"link\\\">\").concat(customerData.ctaText2, \"</a>\\n        </div>\\n        \");\n            }\n            _context57.next = 41;\n            break;\n          case 40:\n            if (variationType === 'resources') {\n              cardElement.classList.add('ResourcesCard');\n              cardElement.setAttribute('data-card-url', \"\".concat(customerData.ctaUrl));\n              cardElement.setAttribute('data-ctaurl', \"\".concat(customerData.ctaUrl));\n              cardElement.setAttribute('aria-details', \"Goes to the link: \".concat(customerData.ctaUrl));\n              cardElement.innerHTML = \"\\n        <div class=\\\"CustomerOverViewCard-headerImage\\\" role=\\\"img\\\"></div>\\n        <div class=\\\"CustomerOverViewCard-headerText\\\" role=\\\"heading\\\">\".concat(customerData.urlContentType, \"</div>\\n        <div class=\\\"CustomerOverViewCard-descriptionText\\\" role=\\\"heading\\\">\").concat(customerData.bodyText, \"</div>\\n      \");\n              if (customerData.ctaUrl !== '' && customerData.ctaUrl !== '/') {\n                _anchorWrapper = document.createElement('a');\n                _anchorWrapper.classList.add('resources-card-link-wrapper');\n                _anchorWrapper.setAttribute('data-track-analytics', 'true');\n                _anchorWrapper.setAttribute('href', customerData.ctaUrl);\n                _anchorWrapper.setAttribute('title', \"\".concat(customerData.bgImageAltText !== '' ? customerData.bgImageAltText : customerData.videoUrltitle));\n                _anchorWrapper.innerHTML = cardElement.outerHTML;\n                cardElement = _anchorWrapper;\n              }\n            } else if (variationType === 'events') {\n              hasImage = 'noImage';\n              displayTime = \"showTime\";\n              eventUrl = new URL(customerData.ctaUrl);\n              extUrlAttribute = \"\";\n              if (eventUrl.hostname !== 'www.splunk.com' || eventUrl.hostname !== 'www.staging.splunk.com' || eventUrl.hostname !== 'www.qa.splunk.com' || eventUrl.hostname !== 'www-dev.dms.splunk.com' || eventUrl.hostname !== 'cmsstg.splunk.com' || eventUrl.hostname !== 'cms.splunk.com' || eventUrl.hostname !== 'cmsqa.splunk.com' || eventUrl.hostname !== 'cmsdev.splunk.com') {\n                extUrlAttribute = 'rel=\"noopener\"';\n              }\n              if (customerData.eventImage) {\n                hasImage = 'hasImage';\n              }\n              if (customerData.eventTime.length < 1) {\n                displayTime = 'hide';\n              }\n              cardElement.classList.add('CustomerOverViewCard');\n              cardElement.classList.add('EventsCard');\n              cardElement.classList.add(hasImage);\n              cardElement.setAttribute('data-card-url', \"\".concat(customerData.ctaUrl));\n              cardElement.setAttribute('aria-details', \"Goes to the link: \".concat(customerData.ctaUrl));\n              placeHolderStartDate = customerData.eventStartDate + \" 00:00\";\n              placeHolderEndDate = customerData.eventEndDate + \" 00:00\";\n              startDate = new Date(placeHolderStartDate).toString().split(\" \").slice(1, 4).toString();\n              startDate = startDate.split(\",\");\n              startDate = startDate[0] + \" \" + startDate[1] + \", \" + startDate[2];\n              endDate = new Date(placeHolderEndDate).toString().split(\" \").slice(1, 4).toString();\n              endDate = endDate.split(\",\");\n              endDate = endDate[0] + \" \" + endDate[1] + \", \" + endDate[2];\n              if (startDate !== endDate && endDate !== 'Date undefined, undefined') {\n                startDate = startDate + \" - \" + endDate;\n              }\n              cardElement.innerHTML = \"\\n      <div class=\\\"CustomerOverViewCard-headerImage\\\" role=\\\"img\\\">\\n\\n      <img alt=\\\"\".concat(customerData.eventImageAltText, \"\\\" src=\\\"\").concat(customerData.eventImage, \"\\\" role=\\\"img\\\">\\n      </div>\\n      <div class=\\\"CustomerOverViewCard-customerIcon\\\" role=\\\"section\\\">\\n\\n      <div class=\\\"customerIconLabel eventType\\\" role=\\\"heading\\\">\").concat(customerData.eyebrow, \"</div>\\n      </div>\\n\\n        <div class=\\\"CustomerOverViewCard-headerText\\\" role=\\\"heading\\\">\").concat(customerData.eventTitle, \"</div>\\n        <div class=\\\"event-details\\\">\\n        <div class=\\\"CustomerOverViewCard-customerIcon event-location-section\\\" role=\\\"section\\\">\\n          <div class=\\\"customerIconLogo event-location-icon\\\" role=\\\"img\\\"><img data-src=\\\"/content/dam/splunk2/images/icon-library/pink/geolocation.svg\\\" alt=\\\"Location\\\" src=\\\"/content/dam/splunk2/images/icon-library/pink/geolocation.svg\\\" class=\\\"lazyLoaded\\\"></div>\\n          <div class=\\\"customerIconLabel event-location\\\" role=\\\"heading\\\">\").concat(customerData.eventLocation, \"</div>\\n        </div>\\n        <div class=\\\"CustomerOverViewCard-customerIcon event-time-section \").concat(displayTime, \"\\\" role=\\\"section\\\">\\n          <div class=\\\"customerIconLogo event-time-icon\\\" role=\\\"img\\\"><img data-src=\\\"/content/dam/splunk2/images/icon-library/pink/clock.svg\\\" alt=\\\"Time\\\" src=\\\"/content/dam/splunk2/images/icon-library/pink/clock.svg\\\" class=\\\"lazyLoaded\\\"></div>\\n          <div class=\\\"customerIconLabel event-time\\\" role=\\\"heading\\\">\").concat(customerData.eventTime, \"</div>\\n        </div>\\n        <div class=\\\"CustomerOverViewCard-customerIcon event-date-section\\\" role=\\\"section\\\">\\n          <div class=\\\"customerIconLogo event-time-icon\\\" role=\\\"img\\\"><img data-src=\\\"/content/dam/splunk2/images/icon-library/pink/predictive-maintenance.svg\\\" alt=\\\"date\\\" src=\\\"/content/dam/splunk2/images/icon-library/pink/predictive-maintenance.svg\\\" class=\\\"lazyLoaded\\\"></div>\\n          <div class=\\\"customerIconLabel event-date\\\" role=\\\"heading\\\">\").concat(startDate, \"</div>\\n        </div>\\n        </div>\\n      <div class=\\\"CustomerOverViewCard-cta\\\">\\n        <a  data-track-analytics=\\\"true\\\"\\n            target=\\\"\").concat(anchorTarget, \"\\\"\\n            href=\\\"\").concat(customerData.ctaUrl, \"\\\"  \").concat(extUrlAttribute, \"\\n            class=\\\"splunk-btn sp-btn-borderless sp-btn-darkGray box__cta\\\"\\n            role=\\\"link\\\">\").concat(customerData.ctaText, \"</a>\\n      </div>\\n      \");\n              cardElement.classList.remove('loadingContent');\n            }\n          case 41:\n            cardElement.addEventListener('click', function (event) {\n              //cardClickFunction(event, customerData, cardElement, anchorTarget);\n              console.log(\"customerData.ctaUrl:\", customerData.ctaUrl);\n              console.log(\"variationType:\", variationType);\n              var cardURL = customerData.ctaUrl;\n              if (variationType === 'data-insider') cardURL = customerData.ctaLink;\n              if (cardURL.includes('.pdf') && variationType === 'resources') {\n                console.log('going to pdf redirect');\n                cardClickFunctionPDF(event, customerData, cardElement, anchorTarget);\n              } else {\n                console.log('going to non-pdf pages');\n                cardClickFunction(event, customerData, cardElement, anchorTarget);\n              }\n            }, false);\n            cardElement.addEventListener('keydown', function (event) {\n              if (event.keyCode === 13 || event.keyCode === 32) cardClickFunction(event, customerData, cardElement, anchorTarget);\n            }, false);\n            if (customerData.cardType === 'video' && variationType !== 'training') {\n              cardElement.classList.add('videoCard');\n              addVideoEvent(cardElement, customerData.videoId);\n            }\n            cardsSection.appendChild(cardElement);\n            return _context57.abrupt(\"return\", cardElement);\n          case 46:\n          case \"end\":\n            return _context57.stop();\n        }\n      }, _callee57);\n    }));\n    return function createCard() {\n      return _ref57.apply(this, arguments);\n    };\n  }();\n  var cardClickFunction = function cardClickFunction(e) {\n    var customerData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var cardElement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var anchorTarget = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '_blank';\n    var buttonId = $(e.target.classList)[0];\n    var buttonTxt = e.target.innerText;\n    var ctaLink = e.target.href;\n    if (ctaLink === undefined && customerData.ctaUrl !== undefined) {\n      ctaLink = customerData.ctaUrl;\n    } else if (ctaLink === undefined && customerData.ctaLink !== undefined) {\n      ctaLink = customerData.ctaLink;\n    }\n    var card = \"\";\n    if (cardElement.classList.contains('doubleCTA')) {\n      card = \"CustomerOverviewCard\";\n      if ($(e.target).closest('.TrainingCard').length > 0) {\n        card = \"CustomerOverviewCard_TrainingVariation\";\n      }\n    } else if ($(e.target).closest('.ResourcesCard').length > 0) {\n      card = \"CustomerOverviewCard_ResourcesCardVariation\";\n    } else if ($(e.target).closest('.TrainingCard').length > 0) {\n      card = \"CustomerOverviewCard_TrainingVariation\";\n    } else {\n      card = \"CustomerOverviewCard\";\n    }\n    var ga4Link = ctaLink;\n    if (ctaLink.match(/:\\/\\/(.[^/]+)/) !== null) {\n      ga4Link = ctaLink.match(/:\\/\\/(.[^/]+)/)[1].replace(/^https?:\\/\\//, '');\n    } else {\n      ga4Link = ctaLink.replace(/^https?:\\/\\//, '');\n    }\n    var section_title = [];\n    var obj = {};\n    var filterChangeObj = {};\n    var EVENT_OBJECT_FILTER_GA4 = {\n      event: 'filter_result_click',\n      link_text: buttonTxt,\n      link_domain: ga4Link,\n      link_url: ctaLink.split(\"?\")[0].replace(/^https?:\\/\\//, ''),\n      //removing https from the url\n      link_position: card,\n      search_term: \"\" + $('.CustomerOverView-Search-keyword').val(),\n      sort_value: '' + $(\".CustomerOverView-sort input[name='sortType']:checked\").val()\n    };\n    var EVENT_OBJECT_GA4 = {\n      event: 'link_click',\n      link_text: buttonTxt,\n      link_domain: ga4Link,\n      link_url: ctaLink.replace(/^https?:\\/\\//, ''),\n      //removing https from the url\n      link_position: card\n    };\n    var hasFileExt = false;\n    var fileExt = \"\";\n    if (ctaLink.match(/\\.([0-9a-z]+)(?:[\\?#]|$)/i)) {\n      //checking if fileextension exsists\n      fileExt = ctaLink.match(/\\.([0-9a-z]+)(?:[\\?#]|$)/i)[1];\n    }\n    var EVENT_OBJECT_GA4_DOWNLOAD = {\n      event: 'file_download',\n      link_text: buttonTxt,\n      link_domain: ga4Link,\n      link_url: ctaLink.split(\"?\")[0].replace(/^https?:\\/\\//, ''),\n      //removing https from the url\n      file_extension: fileExt,\n      file_name: ctaLink.split('/').pop().split('#')[0].split('?')[0]\n    };\n    $('.CustomerOverView-filters').find('.CustomerOverView-filters-title').each(function (index2) {\n      if ($(this).hasClass('CustomerOverView-filters-title')) {\n        section_title.push($(this).text().trim());\n      }\n    });\n    $('.CustomerOverView-filters .CustomerOverView-filters-group').each(function (index1) {\n      $(this).attr(\"index\", index1 + 1);\n      $(this).find(\"input[type='checkbox']:checked\").each(function (index) {\n        if ($(this).is(':checked')) {\n          var counter = $(this).closest('.CustomerOverView-filters-group').attr('index');\n          var key = $(this).closest('.CustomerOverView-filters-group').find('.CustomerOverView-filters-title').text().trim();\n          var value = $(this).val();\n          if (key in obj) {\n            obj[key] = obj[key] + \"|\" + value;\n          } else {\n            obj[key] = value;\n          }\n          filterChangeObj['filter' + counter] = section_title[index1] + '=' + obj[key];\n        }\n      });\n    });\n    var count = Object.keys(filterChangeObj).length;\n    for (var i = 0; i <= count; i++) {\n      EVENT_OBJECT_FILTER_GA4['filter' + parseInt(i + 1)] = filterChangeObj['filter' + parseInt(i + 1)];\n    }\n    window.dataLayer.push(EVENT_OBJECT_FILTER_GA4);\n    if (EVENT_OBJECT_GA4_DOWNLOAD.file_name !== 'html' && EVENT_OBJECT_GA4_DOWNLOAD.file_name !== 'php' && EVENT_OBJECT_GA4_DOWNLOAD.file_name !== '') {\n      window.dataLayer.push(EVENT_OBJECT_GA4_DOWNLOAD);\n    }\n    window.dataLayer.push(EVENT_OBJECT);\n    console.log(\"GA4--\x3e \", EVENT_OBJECT_GA4);\n    window.dataLayer.push(EVENT_OBJECT_GA4);\n    var EVENT_OBJECT = {\n      event: 'linkClick',\n      eventInfo: {\n        category: 'All clicks on Customer Overview Card',\n        modernization: true,\n        component: 'CustomerOverviewCard_' + buttonTxt + \"(\" + customerData.headlineText + \")_\" + buttonId,\n        componentName: buttonId,\n        clickUrl: window.location.href,\n        destinationUrl: ctaLink,\n        container: 'CustomerOverviewCard'\n      }\n    };\n    window.dataLayer.push(EVENT_OBJECT);\n    if (anchorTarget === \"_self\") {\n      window.location = ctaLink;\n    } else {\n      e.preventDefault();\n      window.open(ctaLink);\n    }\n  };\n  var cardClickFunctionPDF = function cardClickFunctionPDF(e) {\n    var customerData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var cardElement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var anchorTarget = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '_blank';\n    var buttonId = $(e.target.classList)[0];\n    var buttonTxt = e.target.innerText;\n    var ctaLink = e.target.href;\n    if (ctaLink === undefined && customerData.ctaUrl !== undefined) {\n      ctaLink = customerData.ctaUrl;\n    } else if (ctaLink === undefined && customerData.ctaLink !== undefined) {\n      ctaLink = customerData.ctaLink;\n    }\n    var card = \"CustomerOverviewCard\";\n    if (cardElement.classList.contains('doubleCTA')) {\n      if ($(e.target).closest('.TrainingCard').length > 0) {\n        card = \"CustomerOverviewCard_TrainingVariation\";\n      }\n    } else if ($(e.target).closest('.ResourcesCard').length > 0) {\n      card = \"CustomerOverviewCard_ResourcesCardVariation\";\n    } else if ($(e.target).closest('.TrainingCard').length > 0) {\n      card = \"CustomerOverviewCard_TrainingVariation\";\n    } else {\n      card = \"CustomerOverviewCard\";\n    }\n    var ga4Link = ctaLink;\n    if (ctaLink.match(/:\\/\\/(.[^/]+)/) !== null) {\n      ga4Link = ctaLink.match(/:\\/\\/(.[^/]+)/)[1].replace(/^https?:\\/\\//, '');\n    } else {\n      ga4Link = ctaLink.replace(/^https?:\\/\\//, '');\n    }\n    var section_title = [];\n    var obj = {};\n    var filterChangeObj = {};\n    var EVENT_OBJECT_FILTER_GA4 = {\n      event: 'filter_result_click',\n      link_text: buttonTxt,\n      link_domain: ga4Link,\n      link_url: ctaLink.split(\"?\")[0].replace(/^https?:\\/\\//, ''),\n      //removing https from the url\n      link_position: card,\n      search_term: \"\" + $('.CustomerOverView-Search-keyword').val(),\n      sort_value: '' + $(\".CustomerOverView-sort input[name='sortType']:checked\").val()\n    };\n    var EVENT_OBJECT_GA4 = {\n      event: 'link_click',\n      link_text: buttonTxt,\n      link_domain: ga4Link,\n      link_url: ctaLink.split(\"?\")[0].replace(/^https?:\\/\\//, ''),\n      //removing https from the url\n      link_position: card\n    };\n    var EVENT_OBJECT_GA4_DOWNLOAD = {\n      event: 'file_download',\n      link_text: buttonTxt,\n      link_domain: ga4Link,\n      link_url: ctaLink.split(\"?\")[0].replace(/^https?:\\/\\//, ''),\n      //removing https from the url\n      file_extension: ctaLink.match(/\\.([0-9a-z]+)(?:[\\?#]|$)/i)[1] || '',\n      file_name: ctaLink.split('/').pop().split('#')[0].split('?')[0]\n    };\n    $('.CustomerOverView-filters').find('.CustomerOverView-filters-title').each(function (index2) {\n      if ($(this).hasClass('CustomerOverView-filters-title')) {\n        section_title.push($(this).text().trim());\n      }\n    });\n    $('.CustomerOverView-filters .CustomerOverView-filters-group').each(function (index1) {\n      $(this).attr(\"index\", index1 + 1);\n      $(this).find(\"input[type='checkbox']:checked\").each(function (index) {\n        if ($(this).is(':checked')) {\n          var counter = $(this).closest('.CustomerOverView-filters-group').attr('index');\n          var key = $(this).closest('.CustomerOverView-filters-group').find('.CustomerOverView-filters-title').text().trim();\n          var value = $(this).val();\n          if (key in obj) {\n            obj[key] = obj[key] + \"|\" + value;\n          } else {\n            obj[key] = value;\n          }\n          filterChangeObj['filter' + counter] = section_title[index1] + '=' + obj[key];\n        }\n      });\n    });\n    var count = Object.keys(filterChangeObj).length;\n    for (var i = 0; i <= count; i++) {\n      EVENT_OBJECT_FILTER_GA4['filter' + parseInt(i + 1)] = filterChangeObj['filter' + parseInt(i + 1)];\n    }\n    window.dataLayer.push(EVENT_OBJECT_FILTER_GA4);\n    if (EVENT_OBJECT_GA4_DOWNLOAD.file_name !== 'html' && EVENT_OBJECT_GA4_DOWNLOAD.file_name !== 'php' && EVENT_OBJECT_GA4_DOWNLOAD.file_name !== '') {\n      window.dataLayer.push(EVENT_OBJECT_GA4_DOWNLOAD);\n    }\n    window.dataLayer.push(EVENT_OBJECT);\n    console.log(\"GA4--\x3e \", EVENT_OBJECT_GA4);\n    window.dataLayer.push(EVENT_OBJECT_GA4);\n    var EVENT_OBJECT = {\n      event: 'linkClick',\n      eventInfo: {\n        category: 'All clicks on Customer Overview Card',\n        modernization: true,\n        component: 'CustomerOverviewCard_' + buttonTxt + \"(\" + customerData.headlineText + \")_\" + buttonId,\n        componentName: buttonId,\n        clickUrl: window.location.href,\n        destinationUrl: ctaLink,\n        container: 'CustomerOverviewCard'\n      }\n    };\n    window.dataLayer.push(EVENT_OBJECT);\n\n    //start: bForm submission\n    var REQUEST_RETRIES = 1;\n    var TIMEOUT = 7000;\n    var originalPath = window.location.origin + window.location.pathname;\n    var checkingSecureToken_timer = 0;\n    var secureToken = \"\";\n    function isFeatureFlagMktoPostEnabled() {\n      return !!featureFlagMktoRestEnable && featureFlagMktoRestEnable.mktoRestEnable;\n    }\n    var bformSubmitEndpoint = isFeatureFlagMktoPostEnabled() ? \"/api/bin/lead/mkto/bform\" : \"/api/bin/lead/bform\";\n    var contactEndpoint = isFeatureFlagMktoPostEnabled() ? \"/api/bin/lead/mkto/contact\" : \"/api/bin/lead/contact\";\n    function getSecureToken() {\n      $.ajax({\n        url: \"/api/bin/lead/auth/token\",\n        success: function success(data) {\n          var token = data.response;\n          localStorage.setItem(\"SECURE_TOKEN\", token);\n          secureToken = token;\n          pdfRedirect();\n        },\n        error: function error() {\n          checkingSecureToken_timer++;\n          if (checkingSecureToken_timer < 10) {\n            getSecureToken();\n          } else {\n            //after trying to get the token for 10 times, stop trying and the secure token is not available.\n            cardRedirect();\n          }\n        }\n      });\n    }\n    function getCookie(name) {\n      var value = \"; \".concat(document.cookie);\n      var parts = value.split(\"; \".concat(name, \"=\"));\n      if (parts.length === 2) return parts.pop().split(';').shift();\n    }\n    function getLocalStorageValue(name) {\n      return localStorage.getItem(name);\n    }\n    function isAuthoring() {\n      var urlSearchParams = new URLSearchParams(window.location.search);\n      var params = Object.fromEntries(urlSearchParams.entries());\n      var AEMMode = $.cookie('wcmmode');\n      var authoring = AEMMode === 'edit' && !params.wcmmode;\n      var authoringViewAsPublished = params.wcmmode === 'disabled';\n      return authoring || authoringViewAsPublished;\n    }\n    function saveUserInformation(pdf, contactId, triesLeft) {\n      var controller = new AbortController();\n      var timer = setTimeout(function () {\n        return controller.abort();\n      }, TIMEOUT);\n      var params = {\n        method: 'POST',\n        signal: controller.signal,\n        headers: {\n          'Authorization': 'Bearer ' + secureToken\n        }\n      };\n      var asset = \"https://www.splunk.com\".concat(pdf);\n      var url = \"\".concat(bformSubmitEndpoint, \"?id=\").concat(contactId, \"&asset=\").concat(asset, \"&GACLIENTID=\") + GACLIENTID_nonGated;\n\n      //history.pushState({}, \"\", originalPath);//display the new url without the pdf querystring pair in the address bar\n\n      fetch(url, params).then(function () {\n        cardRedirect();\n        clearTimeout(timer);\n      }).catch(function (e) {\n        console.log('bform connection failed');\n        if (e instanceof DOMException) {\n          cardRedirect();\n        }\n        ;\n        if (triesLeft) {\n          saveUserInformation(pdf, contactId, triesLeft - 1);\n        } else {\n          cardRedirect();\n        }\n      });\n    }\n    function handleEmailAddress(email) {\n      $.ajax({\n        url: window.location.origin + contactEndpoint + \"?id=\" + email,\n        headers: {\n          \"Authorization\": \"Bearer \" + secureToken\n        },\n        success: function success(data) {\n          var contactid;\n          if (isFeatureFlagMktoPostEnabled()) {\n            contactid = data.response.result[0].id;\n          } else {\n            contactid = data.elements[0].id;\n          }\n          localStorage.setItem(\"SPLUNK_CONTACTID\", contactid);\n        }\n      });\n    }\n    function getLoggedInUserEmail() {\n      var sessionValidatorService = \"/api/bin/user/info\";\n      $.ajax({\n        cache: false,\n        url: sessionValidatorService,\n        dataType: \"json\",\n        success: function success(userinfo) {\n          var userEmail = userinfo.email;\n          handleEmailAddress(userEmail);\n        },\n        failure: function failure() {\n          //do nothing\n        }\n      });\n    }\n    function initSendBForm() {\n      if (!isAuthoring()) {\n        if (secureToken === \"\") {\n          getSecureToken();\n        } else {\n          pdfRedirect();\n        }\n      }\n    }\n    function pdfRedirect() {\n      var contactId = getLocalStorageValue('SPLUNK_CONTACTID');\n      if (!contactId) {\n        var ssoid = getCookie(\"WEBID\");\n        if (ssoid) {\n          getLoggedInUserEmail(); //no contact id, but logged-in\n        } else {\n          //redirectTo(pdf);//no contact id, not logged-in, unknowable users\n          cardRedirect();\n        }\n      } else {\n        // ctaLink -> pdf\n        saveUserInformation(ctaLink, contactId, REQUEST_RETRIES); //with contact id\n      }\n    }\n    function cardRedirect() {\n      if (anchorTarget === \"_self\") {\n        window.location = ctaLink;\n      } else {\n        window.open(ctaLink);\n      }\n    }\n    initSendBForm();\n    //end: bForm submission\n  };\n  var loadMoreCards = /*#__PURE__*/function () {\n    var _ref58 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee58() {\n      var countCardsServed, cardsToServe, customerCardPointer, nextCustomer, _cardsToServe, _customerCardPointer, _nextCustomer, loadMoreURL, loadMoreButtonUrl, nextPageUrl, totalPages;\n      return regenerator_default.a.wrap(function _callee58$(_context58) {\n        while (1) switch (_context58.prev = _context58.next) {\n          case 0:\n            if (canWeServeMoreCards()) {\n              _context58.next = 2;\n              break;\n            }\n            throw new Error(\"We can't serve more cards\");\n          case 2:\n            hideEventFeaturedSection();\n            // WWW-18467: On loadMore click if pageURL has string ?page= do new calculations else use old logic\n            countCardsServed = pageURL.split('page=')[1] * 9 - 9;\n            if (pageURL.indexOf(\"?page=\") > -1) {\n              cardsToServe = getNumberOfCardsToServe();\n              for (customerCardPointer = countCardsServed; customerCardPointer < cardsToServe + countCardsServed; customerCardPointer++) {\n                nextCustomer = actualCustomerCardsServed + customerCardPointer;\n                addNewCard(customerJsonProcessed[nextCustomer]);\n              }\n              actualCustomerCardsServed += cardsToServe;\n            } else {\n              _cardsToServe = getNumberOfCardsToServe();\n              for (_customerCardPointer = 0; _customerCardPointer < _cardsToServe; _customerCardPointer++) {\n                _nextCustomer = actualCustomerCardsServed + _customerCardPointer;\n                addNewCard(customerJsonProcessed[_nextCustomer]);\n              }\n              actualCustomerCardsServed += _cardsToServe;\n            }\n            if (actualCustomerCardsServed >= customerJsonProcessed.length) hideLoadMoreSection();\n\n            // WWW-18467: Logic to add href=\"?page=\" to loadMore button\n            if (actualCustomerCardsServed < customerJsonProcessed.length) {\n              countCardsServed = actualCustomerCardsServed / 9;\n              if (pageURL.indexOf(\"?page=\") > -1) {\n                loadMoreURL = parseInt(pageURL.split('page=')[1]);\n                appSection.querySelector('.CustomerOverView-cards-loadMore-button').setAttribute(\"href\", \"?page=\" + (loadMoreURL + countCardsServed));\n              } else {\n                appSection.querySelector('.CustomerOverView-cards-loadMore-button').setAttribute(\"href\", \"?page=\" + (countCardsServed + 1));\n              }\n            }\n\n            // WWW-18581: Load more button is still displaying though no more cards are available\n            if (pageURL.indexOf(\"?page=\") > -1) {\n              loadMoreButtonUrl = $('.CustomerOverView-cards-loadMore-button').attr('href');\n              if (loadMoreButton !== null) {\n                nextPageUrl = loadMoreButtonUrl.split('page=')[1];\n                totalPages = Math.ceil(customerJsonProcessed.length / 9);\n                if (nextPageUrl > totalPages) {\n                  hideLoadMoreSection();\n                }\n              }\n            }\n            return _context58.abrupt(\"return\", true);\n          case 9:\n          case \"end\":\n            return _context58.stop();\n        }\n      }, _callee58);\n    }));\n    return function loadMoreCards() {\n      return _ref58.apply(this, arguments);\n    };\n  }();\n  var addRelatedCards = function addRelatedCards() {\n    var totalCards = customerJsonSource.length;\n    var cardListSelected = [];\n    var randomCardPosition;\n    if (totalCards < notFoundRelatedCards) {\n      notFoundRelatedCards = totalCards;\n    }\n    for (var card = 0; card < notFoundRelatedCards; card++) {\n      do {\n        randomCardPosition = addRandomCard(totalCards);\n      } while (cardListSelected.includes(randomCardPosition));\n      customerJsonProcessed.push(customerJsonSource[randomCardPosition]);\n      cardListSelected.push(randomCardPosition);\n    }\n  };\n  var addMissingLogoTag = function addMissingLogoTag(imageElement, cardElementImageSection) {\n    cardElementImageSection.classList.add('imageNotFound');\n  };\n  var addMissingImageTag = function addMissingImageTag(imageElement, cardElementImageSection) {\n    cardElementImageSection.classList.add('imageNotFound');\n  };\n  var observeCard = /*#__PURE__*/function () {\n    var _ref59 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee59(cardElement) {\n      return regenerator_default.a.wrap(function _callee59$(_context59) {\n        while (1) switch (_context59.prev = _context59.next) {\n          case 0:\n            lazyLoadObserver.observe(cardElement);\n            return _context59.abrupt(\"return\", true);\n          case 2:\n          case \"end\":\n            return _context59.stop();\n        }\n      }, _callee59);\n    }));\n    return function observeCard(_x3) {\n      return _ref59.apply(this, arguments);\n    };\n  }();\n  var setTrainingIcon = /*#__PURE__*/function () {\n    var _ref60 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee60() {\n      var cardName,\n        _args60 = arguments;\n      return regenerator_default.a.wrap(function _callee60$(_context60) {\n        while (1) switch (_context60.prev = _context60.next) {\n          case 0:\n            cardName = _args60.length > 0 && _args60[0] !== undefined ? _args60[0] : '';\n            cardName = cardName.trim().toLocaleLowerCase();\n            if (!(cardName === '')) {\n              _context60.next = 4;\n              break;\n            }\n            return _context60.abrupt(\"return\", 'course');\n          case 4:\n            if (!(cardName === 'course')) {\n              _context60.next = 6;\n              break;\n            }\n            return _context60.abrupt(\"return\", 'course');\n          case 6:\n            if (!(cardName === 'free course')) {\n              _context60.next = 8;\n              break;\n            }\n            return _context60.abrupt(\"return\", 'freeCourse');\n          case 8:\n            if (!(cardName === 'cretification exam')) {\n              _context60.next = 10;\n              break;\n            }\n            return _context60.abrupt(\"return\", 'cretificationExam');\n          case 10:\n            return _context60.abrupt(\"return\", 'course');\n          case 11:\n          case \"end\":\n            return _context60.stop();\n        }\n      }, _callee60);\n    }));\n    return function setTrainingIcon() {\n      return _ref60.apply(this, arguments);\n    };\n  }();\n  //#endregion\n\n  //#region Video Functions\n  var closeVideoModal = function closeVideoModal(event) {\n    if (event.target.classList.contains('CustomerOverView-videoOverlay') || event.target.classList.contains('videoOverlay-closeButton')) {\n      videoOverlayElement.classList.add('fadeOut');\n    }\n  };\n  var removeVideo = function removeVideo() {\n    if (videoPlayerId === '') throw new Error('No player ID to destory...');\n    vidyardEmbed.api.destroyPlayer(videoPlayerId);\n    videoPlayerId = '';\n    videoPlayerElement.innerHTML = '';\n    videoOverlayElement.classList.remove('fadeIn', 'fadeOut');\n  };\n  var addVideoEvent = function addVideoEvent() {\n    var customerCard = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var videoId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    if (customerCard === '' || videoId === '') throw new Error(\"Customer card or video id is missing\");\n    var videoTarget = customerCard.querySelector('.CustomerOverViewCard-headerImage');\n    if (variationType === 'resources') videoTarget = customerCard;\n    videoTarget.addEventListener('click', function (event) {\n      event.stopPropagation();\n      addVideo(videoId);\n    }, true);\n    videoTarget.addEventListener('keydown', function (event) {\n      event.stopPropagation();\n      if (event.keyCode === 13 || event.keyCode === 32) addVideo(videoId);\n    }, true);\n  };\n  var addVideo = function addVideo() {\n    var videoId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    videoPlayerElement.setAttribute('data-video-id', videoId);\n    videoOverlayElement.classList.add('fadeIn');\n  };\n  var loadVideoPlayer = /*#__PURE__*/function () {\n    var _ref61 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee61() {\n      var videoId;\n      return regenerator_default.a.wrap(function _callee61$(_context61) {\n        while (1) switch (_context61.prev = _context61.next) {\n          case 0:\n            videoId = videoPlayerElement.getAttribute('data-video-id');\n            _context61.next = 3;\n            return renderVideoPlayer(videoId, videoPlayerElement);\n          case 3:\n            return _context61.abrupt(\"return\", true);\n          case 4:\n          case \"end\":\n            return _context61.stop();\n        }\n      }, _callee61);\n    }));\n    return function loadVideoPlayer() {\n      return _ref61.apply(this, arguments);\n    };\n  }();\n  var renderVideoPlayer = /*#__PURE__*/function () {\n    var _ref62 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee62() {\n      var videoId,\n        videoContainer,\n        lang,\n        localeLangCCCode,\n        cc,\n        _args62 = arguments;\n      return regenerator_default.a.wrap(function _callee62$(_context62) {\n        while (1) switch (_context62.prev = _context62.next) {\n          case 0:\n            videoId = _args62.length > 0 && _args62[0] !== undefined ? _args62[0] : '';\n            videoContainer = _args62.length > 1 && _args62[1] !== undefined ? _args62[1] : '';\n            if (!(videoId === '' || videoContainer === '')) {\n              _context62.next = 4;\n              break;\n            }\n            throw new Error('video id or video container is missing, cant render video...');\n          case 4:\n            lang = $('body').attr('lang').toLowerCase();\n            localeLangCCCode = {\n              \"en_us\": \"en\",\n              \"de_de\": \"de\",\n              \"fr_fr\": \"fr\",\n              \"ja_jp\": 'ja',\n              \"ko_kr\": \"ko\",\n              \"zh_cn\": \"zh-cmn\",\n              \"zh_tw\": \"zh-tr\"\n            };\n            cc = localeLangCCCode[lang];\n            console.log('customer overview cc:', cc);\n            vidyardEmbed.api.renderPlayer({\n              uuid: videoId,\n              container: videoContainer,\n              type: 'inline',\n              autoplay: 2,\n              cc: cc\n            }).then(function (videoElement) {\n              videoPlayerId = videoElement.uuid;\n            });\n            return _context62.abrupt(\"return\", true);\n          case 10:\n          case \"end\":\n            return _context62.stop();\n        }\n      }, _callee62);\n    }));\n    return function renderVideoPlayer() {\n      return _ref62.apply(this, arguments);\n    };\n  }();\n  //#endregion\n\n  //#region Resources Functions\n  var activateResourcesFrontPage = function activateResourcesFrontPage() {\n    resourcesFrontPageElement.classList.add('show');\n    cardsSection.classList.add('hide');\n    loadMoreButton.classList.add('hideFromResources');\n  };\n  var deactivateResourcesFrontPage = function deactivateResourcesFrontPage() {\n    resourcesFrontPageElement.classList.remove('show');\n    cardsSection.classList.remove('hide');\n    loadMoreButton.classList.remove('hideFromResources');\n  };\n  var addLinkToResourcesCards = function addLinkToResourcesCards() {\n    var frontPageCards = appSection.querySelectorAll('.CustomerOverView-cards-resourcesFrontpage .resources-featuredSection-cardSection .CustomerOverViewCard');\n    frontPageCards.forEach(function (card) {\n      card.addEventListener('keydown', function () {\n        if (event.keyCode === 13 || event.keyCode === 32) {\n          var ctaLink = \"#\";\n          var compName = card.getAttribute('class').split(\" \")[0];\n          var headerTitle = card.querySelector('.CustomerOverViewCard-descriptionText').textContent;\n          var comp = compName + headerTitle + \"_\" + compName;\n          var cardCtaUrl = card.getAttribute('data-ctaurl');\n          if (cardCtaUrl !== undefined) {\n            ctaLink = cardCtaUrl;\n          }\n          var EVENT_OBJECT = {\n            event: 'linkClick',\n            eventInfo: {\n              category: 'All clicks on Front Page Resources Card',\n              modernization: true,\n              component: comp,\n              componentName: compName,\n              clickUrl: window.location.href,\n              destinationUrl: ctaLink,\n              container: 'Resources_card'\n            }\n          };\n          window.dataLayer.push(EVENT_OBJECT);\n          var resourcesAnchorTarget = card.getAttribute('data-openNewTab');\n          if (!resourcesAnchorTarget === \"_self\") {\n            window.location = ctaLink;\n          } else {\n            window.open(ctaLink, '_blank');\n          }\n        }\n      }, false);\n    });\n  };\n  var addVideoFeaturesToResourcesCards = function addVideoFeaturesToResourcesCards() {\n    var frontPageCards = appSection.querySelectorAll('.CustomerOverView-cards-resourcesFrontpage .resources-featuredSection-cardSection .CustomerOverViewCard.videoCard');\n    frontPageCards.forEach(function (videoCard) {\n      var videoCardId = videoCard.getAttribute('data-vidyardid');\n      videoCard.addEventListener('click', function (event) {\n        event.stopPropagation();\n        var tileDescription = $(event.target).parents('.videoCard').find('.CustomerOverViewCard-descriptionText').text().trim();\n        var EVENT_OBJECT_GA4 = {\n          event: 'link_click',\n          link_text: tileDescription,\n          link_domain: 'www.splunk.com',\n          link_url: 'na',\n          //no link available for Video card\n          link_position: 'CustomerOverViewCard_ResourcesCard_videoCard'\n        };\n        var EVENT_OBJECT = {\n          event: 'linkClick',\n          eventInfo: {\n            category: \"All clicks on Resources Card\",\n            clickUrl: window.location.href,\n            component: 'Resources_card_' + tileDescription + '_CustomerOverViewCard_ResourcesCard_videoCard_',\n            destinationUrl: window.location.href,\n            componentName: 'CustomerOverViewCard_ResourcesCard_videoCard'\n          }\n        };\n        window, dataLayer.push(EVENT_OBJECT_GA4);\n        window, dataLayer.push(EVENT_OBJECT);\n        addVideo(videoCardId);\n      }, true);\n      videoCard.addEventListener('keydown', function (event) {\n        event.stopPropagation();\n        if (event.keyCode === 13 || event.keyCode === 32) addVideo(videoCardId);\n      }, true);\n    });\n  };\n  //#endregion\n\n  //#region Utility functions\n  var showElement = function showElement(element) {\n    element.classList.remove('hide');\n  };\n  var hideElement = function hideElement(element) {\n    element.classList.add('hide');\n  };\n  var toggleSection = function toggleSection(event) {\n    var groupElement = event.target.parentElement.classList;\n    groupElement.toggle('collapsed');\n\n    //here we're gonna cycle through\n    if (!groupElement.contains('collapsed')) {\n      var groupElements = event.target.parentElement.querySelectorAll('[class*=\"-element\"]');\n      groupElements.forEach(function (filterElement) {\n        showElement(filterElement);\n      });\n    }\n  };\n  var toggleSectionOnEnter = function toggleSectionOnEnter(event) {\n    if (event.keyCode == 13) {\n      var groupElement = event.target.parentElement.classList;\n      groupElement.toggle('collapsed');\n\n      //here we're gonna cycle through\n      if (!groupElement.contains('collapsed')) {\n        var groupElements = event.target.parentElement.querySelectorAll('[class*=\"-element\"]');\n        groupElements.forEach(function (filterElement) {\n          showElement(filterElement);\n        });\n      }\n    }\n    ;\n  };\n  var toggleFilterFold = function toggleFilterFold(event) {\n    event.target.classList.toggle('collapsed');\n    if (!event.target.classList.contains('collapsed')) {\n      showElement(document.querySelector('.CustomerOverView-clearAll'));\n      showElement(document.querySelector('.CustomerOverView-sort'));\n      showElement(document.querySelector('.CustomerOverView-filters'));\n    }\n  };\n  var isBreadcrumbElementPresent = function isBreadcrumbElementPresent(filterId) {\n    return filterBreadcrumbsFilterSection.querySelector(\"#breadCrumb-\".concat(filterId)) !== null;\n  };\n  var delay = function delay(ms) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n  };\n  var revealLoadMoreSection = function revealLoadMoreSection() {\n    appSection.querySelector('#CustomerOverView-cards-loadMore').classList.remove('hide');\n  };\n  var hideLoadMoreSection = function hideLoadMoreSection() {\n    appSection.querySelector('#CustomerOverView-cards-loadMore').classList.add('hide');\n    $('.CustomerOverView-cards-loadMore-button').removeAttr('href');\n  };\n  var canWeServeMoreCards = function canWeServeMoreCards() {\n    return customerJsonProcessed.length - actualCustomerCardsServed > 0;\n  };\n  var getNumberOfCardsToServe = function getNumberOfCardsToServe() {\n    var leftoverCards = customerJsonProcessed.length - actualCustomerCardsServed;\n    if (leftoverCards > numberOfCardsToServeCount) {\n      return numberOfCardsToServeCount;\n    } else {\n      return leftoverCards;\n    }\n  };\n  var setSelectedSortLabel = /*#__PURE__*/function () {\n    var _ref63 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee63(sortLabel) {\n      var sortTitleElement, sortNameLabel;\n      return regenerator_default.a.wrap(function _callee63$(_context63) {\n        while (1) switch (_context63.prev = _context63.next) {\n          case 0:\n            sortTitleElement = sortLabel.parentElement.parentElement.parentElement.querySelector('.CustomerOverView-sort-title');\n            if (!(sortTitleElement === null)) {\n              _context63.next = 3;\n              break;\n            }\n            throw new Error('Couldnt find the title element of the sort group');\n          case 3:\n            sortNameLabel = sortLabel.value;\n            sortTitleElement.setAttribute('data-selected-Items', \"(\".concat(sortNameLabel, \")\"));\n            return _context63.abrupt(\"return\", true);\n          case 6:\n          case \"end\":\n            return _context63.stop();\n        }\n      }, _callee63);\n    }));\n    return function setSelectedSortLabel(_x4) {\n      return _ref63.apply(this, arguments);\n    };\n  }();\n  var clearCustomerCardSection = /*#__PURE__*/function () {\n    var _ref64 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee64() {\n      return regenerator_default.a.wrap(function _callee64$(_context64) {\n        while (1) switch (_context64.prev = _context64.next) {\n          case 0:\n            cardsSection.innerHTML = '';\n            if (!showFeaturedEvents) {\n              hideEventFeaturedSection();\n            }\n            actualCustomerCardsServed = 0;\n            hideLoadMoreSection();\n            return _context64.abrupt(\"return\", true);\n          case 5:\n          case \"end\":\n            return _context64.stop();\n        }\n      }, _callee64);\n    }));\n    return function clearCustomerCardSection() {\n      return _ref64.apply(this, arguments);\n    };\n  }();\n  var convertDatetoUnixTime = function convertDatetoUnixTime(date) {\n    //new Date('2021-03-17T15:00:00.000-07:00').getTime()/1000\n    return new Date(date).getTime() / 1000;\n  };\n  var hideEventFeaturedSection = function hideEventFeaturedSection() {\n    var $fETitle = $('h2.featuredEventTitle');\n    var hasFeaturedEvent = $fETitle.length > 0;\n    if (hasFeaturedEvent) {\n      $('.CustomerOverView-cards .CustomerOverView-cards-resourcesFrontpage').removeClass('show');\n      $fETitle.addClass('hide');\n    }\n  };\n  var showEventFeaturedSection = function showEventFeaturedSection() {\n    var $fETitle = $('h2.featuredEventTitle');\n    var hasFeaturedEvent = $fETitle.length > 0;\n    if (hasFeaturedEvent) {\n      $('.CustomerOverView-cards .CustomerOverView-cards-resourcesFrontpage').addClass('show');\n      $fETitle.removeClass('hide');\n    }\n  };\n  var addRandomCard = function addRandomCard(totalNumber) {\n    return Math.floor(Math.random() * totalNumber);\n  };\n  var handleLazyLoadCard = function handleLazyLoadCard(entries) {\n    console.log(entries);\n    entries.forEach(function (entry) {\n      if (entry.isIntersecting) {\n        if (variationType === 'customer' || variationType === 'data-insider' || variationType === 'resources') {\n          var backgroundImageElement = entry.target.querySelector('.CustomerOverViewCard-headerImage img');\n          backgroundImageElement.src = backgroundImageElement.dataset.src;\n          backgroundImageElement.classList.add('lazyLoaded');\n          if (variationType === 'customer') {\n            var backgroundLogoElement = entry.target.querySelector('.CustomerOverViewCard-customerIcon img');\n            backgroundLogoElement.src = backgroundLogoElement.dataset.src;\n            backgroundLogoElement.classList.add('lazyLoaded');\n          }\n        } else if (variationType === 'training' || variationType === 'events') {\n          var _backgroundLogoElement = entry.target.querySelector('.CustomerOverViewCard-customerIcon .customerIconLogo img');\n          _backgroundLogoElement.src = _backgroundLogoElement.dataset.src;\n          _backgroundLogoElement.classList.add('lazyLoaded');\n        }\n        revealCard(entry.target);\n        lazyLoadObserver.unobserve(entry.target);\n      }\n    });\n  };\n  var verifyEmptyJson = /*#__PURE__*/function () {\n    var _ref65 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee65() {\n      return regenerator_default.a.wrap(function _callee65$(_context65) {\n        while (1) switch (_context65.prev = _context65.next) {\n          case 0:\n            if (customerJsonSource.length === 0) {\n              $('.upcomingEvents').hide();\n            } else {\n              $('.upcomingEvents').show();\n            }\n            return _context65.abrupt(\"return\", true);\n          case 2:\n          case \"end\":\n            return _context65.stop();\n        }\n      }, _callee65);\n    }));\n    return function verifyEmptyJson() {\n      return _ref65.apply(this, arguments);\n    };\n  }();\n\n  //#endregion\n})(window.Splunk_app_customerOverview = window.Splunk_app_customerOverview || {});\n// EXTERNAL MODULE: ./src/main/webpack/site/components/customerAppsFilter-component.scss\nvar customerAppsFilter_component = __webpack_require__(680);\n\n// CONCATENATED MODULE: ./src/main/webpack/site/components/customerAppsFilter-component.ts\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///833\n")}});