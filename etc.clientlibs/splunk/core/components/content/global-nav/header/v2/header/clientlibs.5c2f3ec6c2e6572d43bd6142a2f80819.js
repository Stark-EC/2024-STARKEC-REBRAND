!(function(F){var B={};function I(Q){var U;return(B[Q]||(U=B[Q]={i:Q,l:!1,exports:{}},F[Q].call(U.exports,U,U.exports,I),U.l=!0,U)).exports}I.m=F,I.c=B,I.d=function(Q,U,F){I.o(Q,U)||Object.defineProperty(Q,U,{enumerable:!0,get:F})},I.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},I.t=function(U,Q){if(1&Q&&(U=I(U)),8&Q)return U;if(4&Q&&"object"==typeof U&&U&&U.__esModule)return U;var F=Object.create(null);if(I.r(F),Object.defineProperty(F,"default",{enumerable:!0,value:U}),2&Q&&"string"!=typeof U)for(var B in U)I.d(F,B,function(Q){return U[Q]}.bind(null,B));return F},I.n=function(Q){var U=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return I.d(U,"a",U),U},I.o=function(Q,U){return Object.prototype.hasOwnProperty.call(Q,U)},I.p="/",I(I.s=839)})({0:function(module,exports){eval('function _typeof(o) {\n  "@babel/helpers - typeof";\n\n  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanM/NzAzNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gKG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvO1xuICB9IDogZnVuY3Rpb24gKG8pIHtcbiAgICByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbztcbiAgfSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzKSwgX3R5cGVvZihvKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n')},1:function(module,exports,__webpack_require__){eval('// TODO(Babel 8): Remove this file.\n\nvar runtime = __webpack_require__(72)();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === "object") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function("r", "regeneratorRuntime = r")(runtime);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/YTM0YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxjQUFjLG1CQUFPLENBQUMsRUFBK0I7QUFDckQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPKEJhYmVsIDgpOiBSZW1vdmUgdGhpcyBmaWxlLlxuXG52YXIgcnVudGltZSA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3JlZ2VuZXJhdG9yUnVudGltZVwiKSgpO1xubW9kdWxlLmV4cG9ydHMgPSBydW50aW1lO1xuXG4vLyBDb3BpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvYmxvYi9tYWluL3BhY2thZ2VzL3J1bnRpbWUvcnVudGltZS5qcyNMNzM2PVxudHJ5IHtcbiAgcmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbn0gY2F0Y2ggKGFjY2lkZW50YWxTdHJpY3RNb2RlKSB7XG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gXCJvYmplY3RcIikge1xuICAgIGdsb2JhbFRoaXMucmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbiAgfSBlbHNlIHtcbiAgICBGdW5jdGlvbihcInJcIiwgXCJyZWdlbmVyYXRvclJ1bnRpbWUgPSByXCIpKHJ1bnRpbWUpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n')},3:function(module,exports){eval('function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzP2M5NzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoaW5mby5kb25lKSB7XG4gICAgcmVzb2x2ZSh2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICB9XG59XG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcbiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBfYXN5bmNUb0dlbmVyYXRvciwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n')},630:function(module,exports){eval("var ListItem = function () {\n  var init = function init() {\n    lazyloadBind();\n    configureLink();\n  };\n  var lazyloadBind = function lazyloadBind() {\n    if (typeof lozad === \"function\") {\n      lozad('.hfLazyLoad', {\n        threshold: 0.1,\n        loaded: function loaded(el) {\n          $(el).removeClass('hfLazyLoad');\n        }\n      }).observe();\n    } else {\n      if (document.getElementById(\"sharedglobalheader\") != null) {\n        $(\"img.hfLazyLoad\").each(function () {\n          if ($(this).attr('data-loaded') != \"true\") {\n            $(this).attr('src', $(this).attr('data-src'));\n          }\n        });\n      }\n    }\n    $('.hamburger-box').click(function (e) {\n      e.preventDefault();\n      $(\"img.hfLazyLoad\").each(function () {\n        if ($(this).attr('data-loaded') != \"true\") {\n          $(this).attr('src', $(this).attr('data-src'));\n          $(this).attr('data-loaded', 'true');\n        }\n      });\n    });\n  };\n  var configureLink = function configureLink() {\n    $(\".feature-content\").each(function () {\n      var linkLabel = $(this).attr('data-ctalabel');\n      var link = $(this).attr('data-ctalink');\n      var linkTarget = $(this).attr('data-ctatarget');\n      if ($(window).width() > 767) {\n        if (linkLabel && link) {\n          $(this).find(\".list__cta\").click(function (evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            window.open(link, linkTarget);\n          });\n        } else if (!linkLabel && link) {\n          var $title = $(this).find('.header');\n          $title.addClass('addHoverEffect');\n          $title.click(function () {\n            window.open(link, linkTarget);\n          });\n        }\n      }\n    });\n  };\n  return {\n    init: init\n  };\n}();\n$(function () {\n  ListItem.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJwYWNrL2NvbXBvbmVudHMvbGlzdC1pdGVtL3YyL2xpc3QtaXRlbS5qcz8yZGRiIl0sIm5hbWVzIjpbIkxpc3RJdGVtIiwiaW5pdCIsImxhenlsb2FkQmluZCIsImNvbmZpZ3VyZUxpbmsiLCJsb3phZCIsInRocmVzaG9sZCIsImxvYWRlZCIsImVsIiwiJCIsInJlbW92ZUNsYXNzIiwib2JzZXJ2ZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJlYWNoIiwiYXR0ciIsImNsaWNrIiwiZSIsInByZXZlbnREZWZhdWx0IiwibGlua0xhYmVsIiwibGluayIsImxpbmtUYXJnZXQiLCJ3aW5kb3ciLCJ3aWR0aCIsImZpbmQiLCJldnQiLCJzdG9wUHJvcGFnYXRpb24iLCJvcGVuIiwiJHRpdGxlIiwiYWRkQ2xhc3MiXSwibWFwcGluZ3MiOiJBQUFBLElBQU1BLFFBQVEsR0FBSSxZQUFNO0VBQ3BCLElBQU1DLElBQUksR0FBSSxTQUFSQSxJQUFJQSxDQUFBLEVBQVU7SUFDaEJDLFlBQVksQ0FBQyxDQUFDO0lBQ2RDLGFBQWEsQ0FBQyxDQUFDO0VBQ25CLENBQUU7RUFDRixJQUFNRCxZQUFZLEdBQUksU0FBaEJBLFlBQVlBLENBQUEsRUFBVTtJQUN4QixJQUFJLE9BQU9FLEtBQUssS0FBSyxVQUFVLEVBQUM7TUFDNUJBLEtBQUssQ0FBQyxhQUFhLEVBQUU7UUFDakJDLFNBQVMsRUFBRSxHQUFHO1FBQ2RDLE1BQU0sRUFBRSxTQUFBQSxPQUFTQyxFQUFFLEVBQ25CO1VBQUVDLENBQUMsQ0FBQ0QsRUFBRSxDQUFDLENBQUNFLFdBQVcsQ0FBQyxZQUFZLENBQUM7UUFBRTtNQUN2QyxDQUFDLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLENBQUM7SUFDaEIsQ0FBQyxNQUFJO01BQ0QsSUFBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsb0JBQW9CLENBQUMsSUFBRSxJQUFJLEVBQUM7UUFDbkRKLENBQUMsQ0FBRSxnQkFBaUIsQ0FBQyxDQUFDSyxJQUFJLENBQUMsWUFBVztVQUNsQyxJQUFHTCxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNNLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBRSxNQUFNLEVBQUM7WUFDckNOLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQ00sSUFBSSxDQUFDLEtBQUssRUFBQ04sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDTSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7VUFDOUM7UUFDSixDQUFDLENBQUM7TUFDTjtJQUNKO0lBQ0FOLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDTyxLQUFLLENBQUMsVUFBU0MsQ0FBQyxFQUFDO01BQ2pDQSxDQUFDLENBQUNDLGNBQWMsQ0FBQyxDQUFDO01BQ2xCVCxDQUFDLENBQUUsZ0JBQWlCLENBQUMsQ0FBQ0ssSUFBSSxDQUFDLFlBQVc7UUFDcEMsSUFBR0wsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDTSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUUsTUFBTSxFQUFDO1VBQ3JDTixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNNLElBQUksQ0FBQyxLQUFLLEVBQUNOLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQ00sSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1VBQzVDTixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNNLElBQUksQ0FBQyxhQUFhLEVBQUMsTUFBTSxDQUFDO1FBQ3BDO01BQ0YsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0VBQ04sQ0FBRTtFQUNGLElBQU1YLGFBQWEsR0FBRyxTQUFoQkEsYUFBYUEsQ0FBQSxFQUFTO0lBQ3hCSyxDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQ0ssSUFBSSxDQUFDLFlBQVc7TUFDbEMsSUFBSUssU0FBUyxHQUFHVixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNNLElBQUksQ0FBQyxlQUFlLENBQUM7TUFDN0MsSUFBSUssSUFBSSxHQUFHWCxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNNLElBQUksQ0FBQyxjQUFjLENBQUM7TUFDdkMsSUFBSU0sVUFBVSxHQUFHWixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztNQUMvQyxJQUFHTixDQUFDLENBQUNhLE1BQU0sQ0FBQyxDQUFDQyxLQUFLLENBQUMsQ0FBQyxHQUFHLEdBQUcsRUFBRTtRQUN4QixJQUFHSixTQUFTLElBQUlDLElBQUksRUFBRTtVQUNsQlgsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDZSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUNSLEtBQUssQ0FBRSxVQUFBUyxHQUFHLEVBQUk7WUFDckNBLEdBQUcsQ0FBQ1AsY0FBYyxDQUFDLENBQUM7WUFDcEJPLEdBQUcsQ0FBQ0MsZUFBZSxDQUFDLENBQUM7WUFDckJKLE1BQU0sQ0FBQ0ssSUFBSSxDQUFDUCxJQUFJLEVBQUVDLFVBQVUsQ0FBQztVQUNqQyxDQUFDLENBQUM7UUFDTixDQUFDLE1BQU0sSUFBRyxDQUFDRixTQUFTLElBQUlDLElBQUksRUFBRTtVQUMzQixJQUFNUSxNQUFNLEdBQUduQixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNlLElBQUksQ0FBQyxTQUFTLENBQUM7VUFDdENJLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDLGdCQUFnQixDQUFDO1VBQ2pDRCxNQUFNLENBQUNaLEtBQUssQ0FBQyxZQUFNO1lBQ2ZNLE1BQU0sQ0FBQ0ssSUFBSSxDQUFDUCxJQUFJLEVBQUVDLFVBQVUsQ0FBQztVQUNqQyxDQUFDLENBQUM7UUFDTDtNQUNKO0lBQ0osQ0FBQyxDQUFDO0VBQ04sQ0FBQztFQUNELE9BQU87SUFDSG5CLElBQUksRUFBSkE7RUFDSixDQUFDO0FBQ0wsQ0FBQyxDQUFFLENBQUM7QUFFSk8sQ0FBQyxDQUFDLFlBQU07RUFDSlIsUUFBUSxDQUFDQyxJQUFJLENBQUMsQ0FBQztBQUNuQixDQUFDLENBQUMiLCJmaWxlIjoiNjMwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTGlzdEl0ZW0gPSAoKCkgPT4ge1xuICAgIGNvbnN0IGluaXQgPSAoKCkgPT4ge1xuICAgICAgICBsYXp5bG9hZEJpbmQoKTtcbiAgICAgICAgY29uZmlndXJlTGluaygpO1xuICAgIH0pO1xuICAgIGNvbnN0IGxhenlsb2FkQmluZCA9ICgoKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgbG96YWQgPT09IFwiZnVuY3Rpb25cIil7XG4gICAgICAgICAgICBsb3phZCgnLmhmTGF6eUxvYWQnLCB7XG4gICAgICAgICAgICAgICAgdGhyZXNob2xkOiAwLjEsXG4gICAgICAgICAgICAgICAgbG9hZGVkOiBmdW5jdGlvbihlbClcbiAgICAgICAgICAgICAgICB7ICQoZWwpLnJlbW92ZUNsYXNzKCdoZkxhenlMb2FkJyk7IH1cbiAgICAgICAgICAgIH0pLm9ic2VydmUoKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICBpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNoYXJlZGdsb2JhbGhlYWRlclwiKSE9bnVsbCl7XG4gICAgICAgICAgICAgICAgJCggXCJpbWcuaGZMYXp5TG9hZFwiICkuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYoJCh0aGlzKS5hdHRyKCdkYXRhLWxvYWRlZCcpIT1cInRydWVcIil7XG4gICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdzcmMnLCQodGhpcykuYXR0cignZGF0YS1zcmMnKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAkKCcuaGFtYnVyZ2VyLWJveCcpLmNsaWNrKGZ1bmN0aW9uKGUpe1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgJCggXCJpbWcuaGZMYXp5TG9hZFwiICkuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgaWYoJCh0aGlzKS5hdHRyKCdkYXRhLWxvYWRlZCcpIT1cInRydWVcIil7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdzcmMnLCQodGhpcykuYXR0cignZGF0YS1zcmMnKSk7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdkYXRhLWxvYWRlZCcsJ3RydWUnKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgfSk7XG4gICAgY29uc3QgY29uZmlndXJlTGluayA9ICgpID0+IHtcbiAgICAgICAgJChcIi5mZWF0dXJlLWNvbnRlbnRcIikuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGxldCBsaW5rTGFiZWwgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtY3RhbGFiZWwnKTtcbiAgICAgICAgICAgIGxldCBsaW5rID0gJCh0aGlzKS5hdHRyKCdkYXRhLWN0YWxpbmsnKTtcbiAgICAgICAgICAgIGxldCBsaW5rVGFyZ2V0ID0gJCh0aGlzKS5hdHRyKCdkYXRhLWN0YXRhcmdldCcpO1xuICAgICAgICAgICAgaWYoJCh3aW5kb3cpLndpZHRoKCkgPiA3NjcpIHtcbiAgICAgICAgICAgICAgICBpZihsaW5rTGFiZWwgJiYgbGluaykge1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoXCIubGlzdF9fY3RhXCIpLmNsaWNrKCBldnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cub3BlbihsaW5rLCBsaW5rVGFyZ2V0KVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZighbGlua0xhYmVsICYmIGxpbmspIHtcbiAgICAgICAgICAgICAgICAgICBjb25zdCAkdGl0bGUgPSAkKHRoaXMpLmZpbmQoJy5oZWFkZXInKTtcbiAgICAgICAgICAgICAgICAgICAkdGl0bGUuYWRkQ2xhc3MoJ2FkZEhvdmVyRWZmZWN0Jyk7XG4gICAgICAgICAgICAgICAgICAgJHRpdGxlLmNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm9wZW4obGluaywgbGlua1RhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfSAgIFxuICAgIHJldHVybiB7XG4gICAgICAgIGluaXRcbiAgICB9O1xufSkoKTtcblxuJCgoKSA9PiB7XG4gICAgTGlzdEl0ZW0uaW5pdCgpO1xufSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///630\n")},72:function(module,exports,__webpack_require__){eval('var _typeof = __webpack_require__(0)["default"];\nfunction _regeneratorRuntime() {\n  "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = "function" == typeof Symbol ? Symbol : {},\n    a = i.iterator || "@@iterator",\n    c = i.asyncIterator || "@@asyncIterator",\n    u = i.toStringTag || "@@toStringTag";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, "");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, "_invoke", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: "normal",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: "throw",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = "suspendedStart",\n    l = "suspendedYield",\n    f = "executing",\n    s = "completed",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    ["next", "throw", "return"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if ("throw" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {\n          invoke("next", t, i, a);\n        }, function (t) {\n          invoke("throw", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke("throw", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, "_invoke", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error("Generator is already running");\n      if (o === s) {\n        if ("throw" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else "return" === n.method && n.abrupt("return", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if ("normal" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = "normal", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: "root"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || "" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if ("function" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + " is not iterable");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, "constructor", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {\n    var e = "function" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {\n    return this;\n  }), define(g, "toString", function () {\n    return "[object Generator]";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if ("throw" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if ("root" === i.tryLoc) return handle("end");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, "catchLoc"),\n            u = n.call(i, "finallyLoc");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error("try statement without catch or finally");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if ("throw" === t.type) throw t.arg;\n      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    "catch": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if ("throw" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error("illegal catch attempt");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, "next" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///72\n')},811:function(module,exports){eval("// TODO move to utils\n/**\n * method to get query parameter by name from passed page url\n * @param {string} name\n * @param {string} url\n */\nvar getParameterByName = function getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp(\"[?&]\".concat(name, \"(=([^&#]*)|&|#|$)\"));\n  var results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\n// TODO move to utils\n/**\n * Method to update target query parameter\n * @param {string} uri\n * @param {string} key\n * @param {string} value\n */\nvar updateQueryStringParameter = function updateQueryStringParameter(uri, key, value) {\n  var regex = new RegExp(\"([?&])\".concat(key, \"=.*?(&|$)\"), 'i');\n  var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n  if (uri.match(regex)) {\n    return uri.replace(regex, \"$1\".concat(key, \"=\").concat(value, \"$2\"));\n  } else {\n    return uri + separator + key + \"=\" + value;\n  }\n};\nwindow.clearSessionStorage = function () {\n  var i = sessionStorage.length;\n  while (i--) {\n    var key = sessionStorage.key(i);\n    if (key.match(/-notification-sent/g)) {\n      sessionStorage.removeItem(key);\n    }\n  }\n};\nwindow.deleteCookies = function (dest) {\n  //Setting all cookies to expire immediately\n  sessionStorage.setItem('SPLUNK_USER_LOGIN_STATUS', 'false');\n  sessionStorage.setItem('SPLUNK_USER_BETA_STATUS', '');\n  sessionStorage.removeItem('SPLUNK_USER_GUID');\n  sessionStorage.removeItem('SPLUNK_USER_EMAIL');\n  sessionStorage.removeItem('SPLUNK_USER_NAME');\n  sessionStorage.removeItem('SPLUNK_USER_DATE_REGISTERED');\n  sessionStorage.removeItem('SPLUNK_USER_SALESFORCEID');\n  sessionStorage.removeItem('SPLUNK_USER_STATE');\n  sessionStorage.removeItem('SPLUNK_USER_UNAME');\n  sessionStorage.removeItem('SPLUNK_USER_VALIDATED_EMAIL');\n  sessionStorage.removeItem('SPLUNK_USER_PARENTS');\n  sessionStorage.removeItem('SPLUNK_USER_UID');\n  sessionStorage.removeItem('SPLUNK_USER_LAST_SEEN');\n  if (dest !== null) {\n    var hasReturnTo = dest.indexOf('return_to') !== -1;\n    var hasQueryParam = dest.indexOf('?') !== -1;\n    var returnToUrl = $(location).attr('href').split('?')[0];\n    if (!hasReturnTo) {\n      if (!hasQueryParam) {\n        dest += \"?return_to=\".concat(returnToUrl);\n      } else {\n        dest += \"&return_to=\".concat(returnToUrl);\n      }\n    } else {\n      if (getParameterByName('return_to', dest) !== returnToUrl) {\n        dest = updateQueryStringParameter(dest, 'return_to', returnToUrl);\n      }\n    }\n    window.location.href = dest;\n  }\n};\nvar GlobalHeader = function () {\n  var userLoggedIn = null;\n  var signUpIframeRendered = false;\n  var globalHeader;\n\n  /*eslint-disable no-global-assign*/\n  if (!window.signupXcomponent && window.location.href.indexOf('localhost') !== -1) {\n    console.warn('signupXcomponent not available');\n    window.signupXcomponent = {\n      render: function render(obj) {\n        console.log(obj);\n      }\n    };\n  }\n  /*eslint-enable no-global-assign*/\n\n  var rootElement = document.querySelector('html');\n  var init = function init() {\n    checkUserSession();\n    bindUserSessionCheckOnFreeSplunk();\n    addReferrerIdToLoginSignup();\n    //bindCloseButton();\n    // initHamburgerAnimation();\n    bindFocus();\n    globalNavAccessibility();\n    bindLanguageSpecificElement();\n    bindMobileSearchEvent();\n    setHeaderHeight();\n    checkFreeSplunk();\n    checkOffsetLeft();\n    var windowWidth = $(window).width();\n    $(window).resize(function () {\n      if ($(window).width() != windowWidth) {\n        windowWidth = $(window).width();\n        setHeaderHeight();\n      }\n    });\n    $('li.search-nav-item-bs4 .search-icon').on('click', function () {\n      $('#searchForm input').focus();\n    });\n    $('.checkLogin').on('click', function () {\n      var url = $(this).attr('href');\n      if (url === 'undefined') {\n        url = $(event.target).attr('href');\n      }\n      window.location.href = url;\n    });\n  };\n  var checkFreeSplunk = function checkFreeSplunk() {\n    if (!$(\".free-splunk\")[0]) {\n      $('ul#account').addClass('no-free-splunk');\n      $('a#Top_Nav-Languages').next().addClass('no-free-splunk');\n      $('.search-container').addClass('no-free-splunk');\n    }\n  };\n  var setHeaderHeight = function setHeaderHeight() {\n    if (window.innerWidth > 768) {\n      var desktopHeader = document.querySelector('.splunk-header-v2-desktop');\n      var desktopHeaderNav = document.querySelector('.splunk-header-v2-desktop nav.splunk-navbar');\n      if (desktopHeader !== null && desktopHeaderNav !== null) {\n        desktopHeader.style.marginTop = desktopHeaderNav.offsetHeight + 'px';\n      }\n    }\n  };\n  var bindMobileSearchEvent = function bindMobileSearchEvent() {\n    $('.bottom-links .search-icon-container').click(function () {\n      $('.bottom-links .search-icon-container').addClass('open');\n      var $input = $(this).find('input');\n      $input.trigger('focus');\n      $input.focusout(function () {\n        $('.bottom-links .search-icon-container').removeClass('open');\n      });\n    });\n  };\n  /**\n   * Method to make sure that free splunk form is only generated when user interacts with it\n   */\n  var bindUserSessionCheckOnFreeSplunk = function bindUserSessionCheckOnFreeSplunk() {\n    $('#free-splunk-click-desktop, #free-splunk-click-mobile').on('click', function (evt) {\n      if ($(event.target).hasClass('noiframe')) {\n        window.location.assign($(event.target).attr('href'));\n        return false;\n      }\n      if (document.cookie.indexOf('WEBID=') === -1) {\n        evt.preventDefault();\n      }\n      console.log(signUpIframeRendered);\n      // turn off current click handler\n      //$('#free-splunk-click-desktop, #free-splunk-click-mobile').off('click');\n      // $currentTarget = $(evt.currentTarget);\n      // const href = $currentTarget.attr('href');\n      if (userLoggedIn === false) {\n        if (isScriptLoaded($('#freeSplunkSrc').attr('data-src-freesplunk-1'))) {\n          loadExLaneForm();\n        } else {\n          downloadJSAtOnload();\n          checkSignUpReady();\n        }\n        //evt.preventDefault();\n        //evt.stopPropagation();\n        // bindings not completed user session not checked\n      } else if (userLoggedIn === null) {\n        console.warn('Session check pending');\n        evt.preventDefault();\n        evt.stopPropagation();\n      }\n    });\n  };\n  var checkSignUpReady = function checkSignUpReady() {\n    if (typeof signupXcomponent !== 'undefined') {\n      loadExLaneForm();\n    } else {\n      window.setTimeout(checkSignUpReady, 200);\n    }\n  };\n  var isScriptLoaded = function isScriptLoaded(src) {\n    return document.querySelector('script[src=\"' + src + '\"]') ? true : false;\n  };\n  function downloadJSAtOnload() {\n    var element1 = document.createElement(\"script\");\n    var element2 = document.createElement(\"script\");\n    element1.src = $('#freeSplunkSrc').attr('data-src-freesplunk-1');\n    element2.src = $('#freeSplunkSrc').attr('data-src-freesplunk-2');\n    element1.onload = function () {\n      document.body.appendChild(element2);\n    };\n    document.body.appendChild(element1);\n  }\n\n  /**\n   * method to generate and load Free Splunk form\n   */\n  var loadExLaneForm = function loadExLaneForm() {\n    var isMobile = false;\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent)) {\n      isMobile = true;\n    }\n    var md = new MobileDetect(window.navigator.userAgent);\n    var dimensions = md.getOverlaySignupIframeSize();\n    var redirectUrl = $('#free-splunk-click-desktop').attr('href');\n\n    /**\n     * sign or login issue WWW-14617 & WWW-14729\n     */\n    var lang = '';\n    var pageLocale = document.getElementsByTagName('body')[0].getAttribute('lang');\n    // if the lang attribute is null\n    if (!pageLocale) {\n      lang = 'en_us';\n    } else {\n      // if the lang attribute is not null\n      if (pageLocale == \"zh-Hans\") {\n        pageLocale = \"zh-hans_cn\";\n      } else {\n        pageLocale = pageLocale.replaceAll(\"-\", \"_\").toLowerCase().trim();\n      }\n      lang = pageLocale;\n      if (lang.length === 0 || lang == \"ko_kr\" || lang == \"zh_tw\" || lang == \"zh\" || lang == \"en\") {\n        lang = 'en_us';\n      }\n    }\n    $('#free-splunk-click-mobile').addClass('express-lane-open');\n    $('#free-splunk-click-desktop').addClass('express-lane-open');\n    $('#iframe-modal').click(function () {\n      if ($('.overlay-form-modal').hasClass('show')) {\n        $('.overlay-form-modal').removeClass('show').fadeOut();\n        $('.modal-backdrop').hide();\n        $('.overlay-form').animate({\n          'margin-right': '-' + $('.overlay-form').width() + 'px'\n        });\n        $('body').removeClass('modal-open');\n      } else {\n        $('.overlay-form-modal').addClass('show');\n      }\n    });\n    /**\n     * sign up form - express flow.\n     */\n    if (!signUpIframeRendered) {\n      signupXcomponent.render({\n        dimensions: {\n          width: dimensions.width,\n          height: dimensions.height\n        },\n        theme: 'light',\n        locale: lang,\n        redirectUrl: redirectUrl,\n        isMobile: isMobile,\n        isQuickAccess: true,\n        isRecaptcha: false,\n        customProps: {\n          leadSource: 'splunk',\n          form_id: \"Overlay-form\"\n        },\n        onSignup: function onSignup(data) {\n          try {\n            if (data.status == 'close') {\n              $('html').removeClass('iphone-fix');\n              $('body').removeClass('iphone-fix');\n            }\n          } catch (e) {\n            //do nothing\n            console.log('no status to close');\n          }\n          nextAction(data);\n        },\n        isCloseButtonOn: true,\n        title: 'Get Started With Splunk',\n        id: 'header-signup-xcomp'\n      }, '#header-signup-xcomp');\n      signUpIframeRendered = true;\n    }\n    $('.express-lane-open').click(function (e) {\n      if ($(e.target).hasClass('express-lane-open')) {\n        e.preventDefault();\n        $('#header-signup-xcomp').animate({\n          'margin-right': '0px'\n        });\n        $('.modal-backdrop').show();\n        $('.overlay-form-modal').fadeIn().addClass('show');\n      }\n    });\n    bindWindowMessageListener();\n\n    // since we're loading component on button click, user has\n    // already clicked on free splunk button. Open Modal and show\n    // required form.\n    setTimeout(function () {\n      if (!userLoggedIn) {\n        $('#iframe-modal').modal('show');\n        $('html').addClass('stop-scrolling');\n        $('#header-signup-xcomp').animate({\n          'margin-right': '0px'\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * Method to bind window message lister for Free Splunk Form\n   */\n  var bindWindowMessageListener = function bindWindowMessageListener() {\n    // Listener event to handle click event from iframe or child window\n    var eventMethod = window.addEventListener ? 'addEventListener' : 'attachEvent';\n    var eventer = window[eventMethod];\n    var messageEvent = eventMethod == 'attachEvent' ? 'onmessage' : 'message';\n\n    // Listen to message from child window\n    eventer(messageEvent, function (e) {\n      var key = e.message ? 'message' : 'data';\n      var data = e[key];\n      //run function//\n      if (data == 'hide-signup-form') {\n        $('#iframe-modal').modal('hide');\n        $('#iframe-modal').fadeOut();\n        $('.modal-backdrop').fadeOut();\n        $('html').removeClass('iphone-fix stop-scrolling');\n        $('body').removeClass('iphone-fix');\n        $('body').removeClass('modal-open');\n        $('.overlay-form').animate({\n          'margin-right': '-' + $('.overlay-form').width() + 'px'\n        });\n      }\n    }, false);\n    $('#free-splunk-click-desktop').click(function () {\n      $('html').addClass('stop-scrolling');\n    });\n  };\n\n  /**\n   * Method to add redirectUrl to sign up and login links.\n   */\n  var addReferrerIdToLoginSignup = function addReferrerIdToLoginSignup() {\n    var loginRedirectUrl = $('#loginId').attr('href');\n    var locationHref = $(location).attr('href').split('?')[0];\n    if (!loginRedirectUrl || loginRedirectUrl.indexOf('redirecturl') !== -1) {\n      console.warn('incorrect login link');\n    }\n    loginRedirectUrl = \"\".concat(loginRedirectUrl, \"&redirecturl=\").concat(locationHref);\n    $('[id=loginId]').attr('href', loginRedirectUrl);\n    var signUpRedirectUrl = $('#signId').attr('href');\n    signUpRedirectUrl = \"\".concat(signUpRedirectUrl, \"?redirecturl=\").concat(locationHref);\n    $('[id=signId]').attr('href', signUpRedirectUrl);\n  };\n\n  /**\n   * Method to check if user session is available and initialize free splunk form\n   * if valid session is not available\n   */\n  var checkUserSession = function checkUserSession() {\n    var ssoid = Cookies.get('WEBID');\n    if (ssoid) {\n      if ($('.checkLogin').length > 0) {\n        $('.checkLogin').removeAttr(\"data-modal-title  data-modal-content-url data-toggle\").attr(\"target\", \"\").attr(\"data-target\", \"#\");\n      }\n      var user_info_endpoint = '';\n      /* eslint-disable no-undef*/\n      if (typeof siteConfig.user_info_endpoint !== 'undefined') {\n        user_info_endpoint = siteConfig.user_info_endpoint;\n      } else {\n        user_info_endpoint = \"/api/bin/user/info\";\n      }\n      /* eslint-disable no-undef*/\n      $.ajax({\n        cache: false,\n        url: user_info_endpoint,\n        dataType: 'json',\n        success: function success(userinfo) {\n          if (!userinfo.login_status) {\n            if (document.getElementById(\"sharedglobalheader\") === null) {\n              $('.loggedin-user-link').remove();\n            } else {\n              $('.loggedin-user-link').hide();\n            }\n            $('.has-product-links').removeClass('logged-in');\n            userLoggedIn = false;\n          } else {\n            userLoggedIn = true;\n            setCookies(userinfo);\n            $('.loggedout-user-link').remove();\n            $('.loggedin-user-link').removeClass('hidden');\n            $('.has-product-links').addClass('logged-in');\n            var userName = '';\n            if (userinfo.firstname) {\n              userName = userinfo.firstname;\n            }\n            if (getUserRegion() == \"APAC\" && userinfo.lastname) {\n              userName = userinfo.lastname;\n            }\n            $('#loggedinusername').html(\"\".concat(userName));\n            $('#loggedinusernamemobile').html(\"\".concat(userName));\n            $('#mobile-account').find('#mydashboard').html(\"\".concat(userName));\n            $('#free-splunk-click-desktop').attr('data-target', '');\n            $('#free-splunk-click-mobile').attr('data-target', '');\n            $('#free-splunk-click-desktop').attr('data-toggle', '');\n            $('#free-splunk-click-mobile').attr('data-toggle', '');\n            $('.splunk-icon.icon-expanded-user-icon').hide();\n            createUserAvatar(userName);\n          }\n        },\n        failure: function failure() {\n          userLoggedIn = false;\n        }\n      });\n    } else {\n      if ($('.checkLogin').length > 0) {\n        $('.checkLogin').removeClass('checkLogin');\n      }\n      if (document.getElementById(\"sharedglobalheader\") === null) {\n        $('.loggedin-user-link').remove();\n      } else {\n        $('.loggedin-user-link').hide();\n      }\n      $('.loggedout-user-link').removeClass('loggedout-user-link');\n      $('.splunk-icon.icon-expanded-user-icon').show();\n      $('.splunk-user-avatar').addClass('hidden');\n      userLoggedIn = false;\n    }\n  };\n\n  /**\n   *\n   * Set Cookie Code (Not polluting Global namespace as it has to be only used whe usr logsin)\n   */\n  function setCookies(userinfo) {\n    if (userinfo.login_status) {\n      sessionStorage.setItem('SPLUNK_USER_LOGIN_STATUS', userinfo.login_status);\n      sessionStorage.setItem('SPLUNK_USER_BETA_STATUS', userinfo.beta_status);\n      Cookies.raw = true;\n      Cookies.set(\"_st\", userinfo.ga_id, {\n        expires: 1825,\n        path: \"/\",\n        domain: \"splunk.com\"\n      });\n    }\n  }\n  /**\n   * Function to create userAvatar from userName\n   */\n  var createUserAvatar = function createUserAvatar(userName) {\n    var userNameInitial = userName[0];\n    var mobileLoggedInAvatarWrapper = document.querySelector('.splunk-header-v2-mobile #loggedInUserWrapper');\n    var mobileLoggedOutAvatarWrapper = document.querySelector('.splunk-header-v2-mobile #loggedOutUserWrapper');\n    if (mobileLoggedInAvatarWrapper !== null && mobileLoggedOutAvatarWrapper !== null) {\n      mobileLoggedOutAvatarWrapper.classList.add('hidden');\n      mobileLoggedInAvatarWrapper.classList.remove('hidden');\n    }\n    $('.splunk-user-avatar').removeClass('hidden').find('.loginUserNameIcon').html(userNameInitial);\n  };\n  var bindLanguageSpecificElement = function bindLanguageSpecificElement() {\n    if ($('.locale_ja_jp').length > 0) {\n      $('.search-help-text').removeClass('sr-only');\n      $('.searchText').addClass('sr-only');\n    } else {\n      $('.search-help-text').addClass('sr-only');\n      $('.searchText').removeClass('sr-only');\n    }\n  };\n  var getUserRegion = function getUserRegion() {\n    var userRegion = '';\n    if ($('.region_APAC').length > 0) {\n      userRegion = \"APAC\";\n    } else if ($('.region_EMEA').length > 0) {\n      userRegion = \"EMEA\";\n    } else {\n      userRegion = \"US\";\n    }\n    return userRegion;\n  };\n  var bindFocus = function bindFocus() {\n    $(\".focus-enabled\").each(function () {\n      if ($(window).width() < 768) {\n        $(this).click(function () {\n          $(this).hasClass('open') ? $(this).removeClass('open') : $(this).addClass('open');\n          $(this).hasClass('open') ? $('.splunk-icon').removeClass('active') : $('.splunk-icon').addClass('active');\n        });\n      } else {\n        $(this).mouseover(function () {\n          $(this).addClass('open');\n          $('.splunk-icon').addClass('active');\n          $('.feature-content').each(function () {\n            if ($(this).children().length == 0) {\n              $(this).hide();\n            }\n          });\n        });\n        $(this).mouseleave(function () {\n          $(this).removeClass('open');\n          $('.splunk-icon').removeClass('active');\n        });\n      }\n    });\n  };\n  var globalNavAccessibility = function globalNavAccessibility() {\n    var productsTab = $('.navbar-left li:nth-child(1) .ga-cta');\n    var solutionsTab = $('.navbar-left li:nth-child(2) .subnav__right .subnav__right-item-list:last-child() a.ga-cta');\n    var whySplunkTab = $('.navbar-left li:nth-child(3) .subnav__right-item-list:last-child() .list-cta');\n    var resourcesTab = $('.navbar-left li:nth-child(4) .subnav__right-item-list:last-child() .list__items li:last-child() .list-cta');\n    var supportTab = $('.navItem-right ul li:last-child()');\n    $('.search-nav-item-bs4 a').attr('href', '#');\n    $('.nav-item-component.navItem-left').on('keydown', function (e) {\n      if (e.keyCode == 13) {\n        $(this).toggleClass('show');\n        $('.nav-item-component').not(this).removeClass('show');\n        $('.container-fluid.no-padding').addClass('offset__left');\n      } else if (e.keyCode == 9) {\n        var showClass = $('.navbar-nav').find('.show').length;\n        if (showClass == 0) {\n          e.preventDefault();\n          $(this).next().find('.navItem a').focus();\n          $('.nav-item-component').not(this).removeClass('show');\n          var nextElement = $(this).next().length;\n          if (nextElement == 0) {\n            $('.navItem-right .navItem a').focus();\n            if (e.keyCode == 13) {\n              $('.navItem-right').toggleClass('show');\n            }\n          }\n        }\n      }\n    });\n    $('.nav-item-component.navItem-right').on('keydown', function (e) {\n      if (e.keyCode == 13) {\n        $('.container-fluid.no-padding').removeClass('offset__left');\n        $('.nav-item-component.navItem-left').removeClass('show');\n        $('.navItem-right').toggleClass('show');\n      } else if (e.keyCode == 9) {\n        var showClass = $('.navbar-nav').find('.show').length;\n        if (showClass == 0) {\n          e.preventDefault();\n          $(this).next().find('a').focus();\n        }\n      }\n    });\n    $(\".navbar-left li:nth-child(2)\").on('keydown', function (e) {\n      $('.items__columns').parents('.subnav__right-item-list').addClass('subnav__right-item-list-twoColumn');\n    });\n    $(\".navbar-right li:nth-child(3)\").on('keydown', function (e) {\n      if (e.keyCode == 13) {\n        $('.splunk-header-v2').find('li').removeClass('show');\n        $(this).toggleClass('open');\n      }\n    });\n    $(\".navbar-right li:nth-child(4)\").on('keydown', function (e) {\n      if (e.keyCode == 13) {\n        $('.splunk-header-v2').find('li').removeClass('show');\n        $(this).toggleClass('open');\n      }\n    });\n    $('.search-nav-item-bs4').on('keydown', function (e) {\n      if (e.keyCode == 13) {\n        $('.container-fluid.no-padding').removeClass('offset__left');\n        $('.splunk-header-v2').find('li').removeClass('show');\n        $(this).toggleClass('open');\n      }\n    });\n    $('.mm-input').on('keydown', function (e) {\n      if (e.keyCode == 27) {\n        $('.search-nav-item-bs4').removeClass('open');\n        $('.search-nav-item-bs4 a').focus();\n      }\n    });\n    $('.nav-item-component').on('keydown', function (e) {\n      if (e.shiftKey && e.keyCode == 9) {\n        e.preventDefault();\n        $(this).prev().find('.navItem a').focus();\n      }\n    });\n    $('.free-splunk a').on('keydown', function (e) {\n      if (e.keyCode == 13) {\n        $(this).click();\n      }\n    });\n    $(productsTab).on('keydown', function (e) {\n      if (e.keyCode == 9) {\n        $('.navbar-left li:nth-child(1)').removeClass('show');\n      }\n    });\n    $(solutionsTab).on('keydown', function (e) {\n      if (e.keyCode == 9) {\n        $('.navbar-left li:nth-child(2)').removeClass('show');\n      }\n    });\n    $(whySplunkTab).on('keydown', function (e) {\n      if (e.keyCode == 9) {\n        $('.navbar-left li:nth-child(3)').removeClass('show');\n      }\n    });\n    $(resourcesTab).on('keydown', function (e) {\n      if (e.keyCode == 9) {\n        $('.navbar-left li:nth-child(4)').removeClass('show');\n      }\n    });\n    $(supportTab).on('keydown', function (e) {\n      if (e.keyCode == 9) {\n        $('.navItem-right').removeClass('show');\n      }\n    });\n    $('.cm-dropdown li:last-child').on('keydown', function (e) {\n      if (e.keyCode == 9) {\n        $(\".navbar-right li:nth-child(3)\").removeClass('open');\n      }\n    });\n    if ($('.splunk-logo.logo-image.second').length) {\n      $('.nav-item-component.navItem-left').on('keydown', function (e) {\n        $('.container-fluid.no-padding').removeClass('offset__left');\n      });\n    }\n    $('.nav-item').on('keydown', function (e) {\n      if (e.shiftKey && e.keyCode == 9) {\n        e.preventDefault();\n        $(this).prev().find('a').focus();\n        if ($(this).prev('li').hasClass('navItem-right')) {\n          $('.navItem.flyout-navItem a').focus();\n        }\n      }\n    });\n    $('.navItem-right').on('keydown', function (e) {\n      if (e.shiftKey && e.keyCode == 9) {\n        e.preventDefault();\n        $('.navbar-left li:nth-child(4)').find('a.navItem-link').focus();\n      }\n    });\n    $('.navbar-left .nav-item-component').on('keydown', function (e) {\n      if (e.shiftKey && e.keyCode == 9) {\n        e.preventDefault();\n        if ($(this).prev().find('.navItem a').length <= 0) {\n          $('.navbar-brand.topnav').focus();\n        }\n        $(this).prev().find('.navItem a').focus();\n      }\n    });\n    $('#account li').on('keydown', function (e) {\n      if ($('#account').find('#logout').length == 0) {\n        if ($(this).find('#signId').length !== 0) {\n          if (e.keyCode == 9) {\n            $(\".navbar-right li:nth-child(4)\").removeClass('open');\n          }\n        }\n      }\n    });\n    $('#account li.loggedin-user-link').on('keydown', function (e) {\n      if ($(this).find('#logout').length !== 0) {\n        if (e.keyCode == 9) {\n          $(\".navbar-right li:nth-child(4)\").removeClass('open');\n        }\n      }\n    });\n  };\n  var checkOffsetLeft = function checkOffsetLeft() {\n    var navItemComponentList = document.querySelectorAll('.splunk-header-v2-desktop .navbar-nav .nav-item-component.mega-menu-nav');\n    if (navItemComponentList === null) throw new Error(\"Couldn't find the global nav items...\");\n    navItemComponentList.forEach(function (navItem) {\n      var getRightListItem = navItem.querySelectorAll('.subnav__right-item-list').length;\n      var getItemColumn = navItem.querySelectorAll('.items__columns').length;\n      var getLeftListItem = navItem.querySelector('.subnav__left-item-list');\n      var flyOutWrapperElement = navItem.querySelector('.flyoutWrapper');\n      if (getRightListItem > 1 && getItemColumn > 0) {\n        //$(this).parents('.navbar-collapse').addClass('offset__left');\n        flyOutWrapperElement.classList.add('centered-flyoutWrapper');\n      }\n      if (getRightListItem > 1) {\n        //$(this).parents('.navbar-collapse').addClass('offset__left');\n        flyOutWrapperElement.classList.add('centered-flyoutWrapper');\n      }\n    });\n  };\n  return {\n    init: init\n  };\n}();\n$(function () {\n  if ($('.global-header-v2-wrapper').length > 0) {\n    GlobalHeader.init();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///811\n")},812:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJwYWNrL3NpdGUvY29tcG9uZW50cy9nbG9iYWwtaGVhZGVyLWNvbXBvbmVudC0yLnNjc3M/NTg5NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI4MTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///812\n")},839:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/main/webpack/components/global-header/v3/global-header.js\nvar global_header = __webpack_require__(811);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(3);\nvar asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(1);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n\n// CONCATENATED MODULE: ./src/main/webpack/components/global-header/v3/global-header-mobile.js\n\n\n(function () {\n  var GlobalHeaderMobile = function () {\n    // Here we initialize the variables\n    var mobileHeaderRoot = null;\n    var destinationSendToBottom = null;\n    var hamburgerSwitch = null;\n    var primarySectionSwitch = null;\n    var movingSectionList = [];\n    var rootElement = document.querySelector('html');\n    var init = function init() {\n      var elementRoot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      // Here we look for the mobile version of the global nav\n      mobileHeaderRoot = elementRoot;\n\n      // now we look for the hamburger switch\n      hamburgerSwitch = document.querySelector('#splunk-mainMenu-switch');\n      if (hamburgerSwitch === null) throw new Error(\"couldn't find the hamburger switch...\");\n\n      //Now we look for the subnav secondary section radio buttons\n      primarySectionSwitch = document.querySelector('#splunk-nav-switch-default');\n      if (primarySectionSwitch === null) throw new Error(\"primary switch was not found...\");\n\n      // here we check if the mobile version is running is it does then we start all\n      if (mobileHeaderRoot !== null) startProcessing();\n\n      // console.log('finished init...');\n    };\n    var startProcessing = /*#__PURE__*/function () {\n      var _ref = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee() {\n        return regenerator_default.a.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return initializeSwitches();\n            case 2:\n              _context.next = 4;\n              return addFunctionalityToSwitches();\n            case 4:\n              _context.next = 6;\n              return findAndMoveElementsSetToBottom();\n            case 6:\n              _context.next = 8;\n              return setAnimationEndActions();\n            case 8:\n              _context.next = 10;\n              return closeLanguageGlobeEvent();\n            case 10:\n              _context.next = 12;\n              return handleLanguageLinks();\n            case 12:\n              return _context.abrupt(\"return\", true);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function startProcessing() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var handleLanguageLinks = /*#__PURE__*/function () {\n      var _ref2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee2() {\n        var languageLinksGroup;\n        return regenerator_default.a.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              languageLinksGroup = document.querySelectorAll('.global-header-V3 .splunk-header-v2-mobile .mblNav-dropdown .nav-item .topnav.nav-link');\n              if (!(languageLinksGroup === null)) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\", new Error(\"For some reason we couldn't find the languages dropdown links in the mobile header :/\"));\n            case 3:\n              languageLinksGroup.forEach(function (languageLink) {\n                languageLink.addEventListener('mousedown', function (event) {\n                  event.preventDefault(); //This is a patchy solution to the closeLanguageGlobeEvent function since 'focusout' event is triggered before the 'mouseup' event\n                });\n              });\n              return _context2.abrupt(\"return\", true);\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function handleLanguageLinks() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var closeLanguageGlobeEvent = /*#__PURE__*/function () {\n      var _ref3 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee3() {\n        var globeElement;\n        return regenerator_default.a.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              globeElement = mobileHeaderRoot.querySelector('.mobile-languageDD');\n              if (!(globeElement === null)) {\n                _context3.next = 3;\n                break;\n              }\n              throw new Error(\"Couldn't find the language button...\");\n            case 3:\n              globeElement.addEventListener('click', function (event) {\n                if (globeElement.classList.contains('openDropdown')) globeElement.classList.remove('openDropdown');else globeElement.classList.add('openDropdown');\n              });\n              globeElement.addEventListener('focusout', function (event) {\n                if (globeElement.classList.contains('openDropdown')) globeElement.classList.remove('openDropdown');\n              });\n              return _context3.abrupt(\"return\", true);\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function closeLanguageGlobeEvent() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var setAnimationEndActions = /*#__PURE__*/function () {\n      var _ref4 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee4() {\n        return regenerator_default.a.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", true);\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return function setAnimationEndActions() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    var addFunctionalityToSwitches = /*#__PURE__*/function () {\n      var _ref5 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee5() {\n        return regenerator_default.a.wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              setHamburgerToHoldTheScroll();\n              return _context5.abrupt(\"return\", true);\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      return function addFunctionalityToSwitches() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    var setHamburgerToHoldTheScroll = /*#__PURE__*/function () {\n      var _ref6 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee6() {\n        return regenerator_default.a.wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(hamburgerSwitch === null)) {\n                _context6.next = 2;\n                break;\n              }\n              throw new Error(\"couldn't find the hambuerger switch...\");\n            case 2:\n              hamburgerSwitch.addEventListener('click', hamburgerClickFunction);\n              return _context6.abrupt(\"return\", true);\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      return function setHamburgerToHoldTheScroll() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    var hamburgerClickFunction = /*#__PURE__*/function () {\n      var _ref7 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee7() {\n        return regenerator_default.a.wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return holdTheScrollFunction();\n            case 2:\n              _context7.next = 4;\n              return initializeSubNavs();\n            case 4:\n              return _context7.abrupt(\"return\", true);\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }));\n      return function hamburgerClickFunction() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n    var holdTheScrollFunction = function holdTheScrollFunction() {\n      if (rootElement === null) throw newError(\"HTML element not set...\");\n      if (hamburgerSwitch.checked) rootElement.classList.add('holdTheScroll');\n      if (!hamburgerSwitch.checked) rootElement.classList.remove('holdTheScroll');\n      return true;\n    };\n    var initializeSubNavs = /*#__PURE__*/function () {\n      var _ref8 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee8() {\n        return regenerator_default.a.wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!primarySectionSwitch.checked) primarySectionSwitch.checked = true;\n              return _context8.abrupt(\"return\", true);\n            case 2:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }));\n      return function initializeSubNavs() {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n    var initializeSwitches = /*#__PURE__*/function () {\n      var _ref9 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee9() {\n        return regenerator_default.a.wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              //First we make sure the hamburger check us 'unchecked'\n              if (hamburgerSwitch.checked) hamburgerSwitch.checked = false;\n\n              //First we make sure the primary switch is checked so when showing the navigation we show the primary section first\n              _context9.next = 3;\n              return initializeSubNavs();\n            case 3:\n              return _context9.abrupt(\"return\", true);\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9);\n      }));\n      return function initializeSwitches() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n    var findAndMoveElementsSetToBottom = /*#__PURE__*/function () {\n      var _ref10 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee10() {\n        return regenerator_default.a.wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return findDestinationForelementsToMove();\n            case 2:\n              _context10.next = 4;\n              return findElementsToMove();\n            case 4:\n              _context10.next = 6;\n              return processElementsAndMoveToBottom();\n            case 6:\n              return _context10.abrupt(\"return\", true);\n            case 7:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10);\n      }));\n      return function findAndMoveElementsSetToBottom() {\n        return _ref10.apply(this, arguments);\n      };\n    }();\n    var findElementsToMove = /*#__PURE__*/function () {\n      var _ref11 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee11() {\n        var movingSectionListElements;\n        return regenerator_default.a.wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              movingSectionListElements = document.querySelectorAll('.featuredSection .featuredSection-list .hideSendBottomMobileListItem .items__sendToBottom');\n              if (!(movingSectionListElements === null)) {\n                _context11.next = 3;\n                break;\n              }\n              throw new Error('Weird we got an error looking for elements to move to the bottom...');\n            case 3:\n              movingSectionListElements.forEach(function (elementToMove) {\n                var sectionElementsToMove = {\n                  'originalElement': elementToMove,\n                  'elementObject': getRootOfElementToMove(elementToMove),\n                  'parentElement': lookForParentElement(elementToMove),\n                  'parentFeaturedSectionElement': getParentFeaturedSection(elementToMove)\n                };\n                sectionElementsToMove.destinationToMove = lookforDestinationElement(sectionElementsToMove.parentElement);\n                movingSectionList.push(sectionElementsToMove);\n              });\n              return _context11.abrupt(\"return\", true);\n            case 5:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11);\n      }));\n      return function findElementsToMove() {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n    var getRootOfElementToMove = function getRootOfElementToMove() {\n      var childElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (childElement === null) throw new Error('child element is missing from the getRootOfElementToMove function...');\n      var secondaryLevelParentElement = childElement.closest('.list-item');\n      if (secondaryLevelParentElement === null) throw new Error(\"couldn't find the root of the element to move...\");\n      return secondaryLevelParentElement;\n    };\n    var lookForParentElement = function lookForParentElement() {\n      var childElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (childElement === null) throw new Error('child element is missing from the lookForParentElement function...');\n      var secondaryLevelParentElement = childElement.closest('.navSecondaryLevel');\n      if (secondaryLevelParentElement !== null) return secondaryLevelParentElement;\n    };\n    var getParentFeaturedSection = function getParentFeaturedSection() {\n      var childElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (childElement === null) throw new Error('child element is missing from the getParentFeaturedSection function...');\n      var FeaturedParentElement = childElement.closest('.featuredSection-list');\n      if (FeaturedParentElement !== null) return FeaturedParentElement;\n    };\n    var lookforDestinationElement = function lookforDestinationElement() {\n      var parentElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      if (parentElement === null) throw new Error('child element is missing from the lookForParentElement function...');\n      var destinationToMoveElement = parentElement.querySelector('.subNavSection');\n      if (destinationToMoveElement === null) throw new Error(\"Something went wrong... can't find destination to move some elements\");\n      return destinationToMoveElement;\n    };\n    var findDestinationForelementsToMove = /*#__PURE__*/function () {\n      var _ref12 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee12() {\n        return regenerator_default.a.wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              destinationSendToBottom = document.querySelector('.step-menu-container-secondLevel');\n              if (!(destinationSendToBottom === null)) {\n                _context12.next = 3;\n                break;\n              }\n              throw new Error(\"Couldn't find any destination element to move the elements...\");\n            case 3:\n              return _context12.abrupt(\"return\", true);\n            case 4:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12);\n      }));\n      return function findDestinationForelementsToMove() {\n        return _ref12.apply(this, arguments);\n      };\n    }();\n    var processElementsAndMoveToBottom = /*#__PURE__*/function () {\n      var _ref13 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee13() {\n        return regenerator_default.a.wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              if (!(movingSectionList.length === 0)) {\n                _context13.next = 2;\n                break;\n              }\n              return _context13.abrupt(\"return\", true);\n            case 2:\n              movingSectionList.forEach(function (elementToMove) {\n                var element = document.createElement('div');\n                element.classList.add('subNavSection-item');\n                element.classList.add('additional-item-section');\n                var elementWrapper = document.createElement('div');\n                elementWrapper.classList.add('subNavSection-item-list');\n                var emptyWrapper = document.createElement('div');\n                emptyWrapper.appendChild(elementToMove.elementObject);\n                elementWrapper.appendChild(emptyWrapper);\n                element.appendChild(elementWrapper);\n                elementToMove.destinationToMove.appendChild(element);\n                elementToMove.parentFeaturedSectionElement.remove();\n              });\n            case 3:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13);\n      }));\n      return function processElementsAndMoveToBottom() {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n    return {\n      init: init\n    };\n  }();\n  window.addEventListener('load', function () {\n    var mobileHeaderElement = document.querySelector('.global-header-v2-wrapper .splunk-header-v2-mobile');\n    if (mobileHeaderElement !== null) {\n      mobileHeaderElement.GlobalHeaderMobile = GlobalHeaderMobile;\n      mobileHeaderElement.GlobalHeaderMobile.init(mobileHeaderElement);\n    }\n  });\n})();\n// EXTERNAL MODULE: ./src/main/webpack/components/list-item/v2/list-item.js\nvar list_item = __webpack_require__(630);\n\n// EXTERNAL MODULE: ./src/main/webpack/site/components/global-header-component-2.scss\nvar global_header_component_2 = __webpack_require__(812);\n\n// CONCATENATED MODULE: ./src/main/webpack/site/components/global-header-component-2.ts\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///839\n")}});