!(function(n){var F={};function e(Q){var B;return(F[Q]||(B=F[Q]={i:Q,l:!1,exports:{}},n[Q].call(B.exports,B,B.exports,e),B.l=!0,B)).exports}e.m=n,e.c=F,e.d=function(Q,B,n){e.o(Q,B)||Object.defineProperty(Q,B,{enumerable:!0,get:n})},e.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},e.t=function(B,Q){if(1&Q&&(B=e(B)),8&Q)return B;if(4&Q&&"object"==typeof B&&B&&B.__esModule)return B;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:B}),2&Q&&"string"!=typeof B)for(var F in B)e.d(n,F,function(Q){return B[Q]}.bind(null,F));return n},e.n=function(Q){var B=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return e.d(B,"a",B),B},e.o=function(Q,B){return Object.prototype.hasOwnProperty.call(Q,B)},e.p="/",e(e.s=832)})({0:function(module,exports){eval('function _typeof(o) {\n  "@babel/helpers - typeof";\n\n  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanM/NzAzNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gKG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvO1xuICB9IDogZnVuY3Rpb24gKG8pIHtcbiAgICByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbztcbiAgfSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzKSwgX3R5cGVvZihvKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n')},1:function(module,exports,__webpack_require__){eval('// TODO(Babel 8): Remove this file.\n\nvar runtime = __webpack_require__(72)();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === "object") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function("r", "regeneratorRuntime = r")(runtime);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/YTM0YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxjQUFjLG1CQUFPLENBQUMsRUFBK0I7QUFDckQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPKEJhYmVsIDgpOiBSZW1vdmUgdGhpcyBmaWxlLlxuXG52YXIgcnVudGltZSA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3JlZ2VuZXJhdG9yUnVudGltZVwiKSgpO1xubW9kdWxlLmV4cG9ydHMgPSBydW50aW1lO1xuXG4vLyBDb3BpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvYmxvYi9tYWluL3BhY2thZ2VzL3J1bnRpbWUvcnVudGltZS5qcyNMNzM2PVxudHJ5IHtcbiAgcmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbn0gY2F0Y2ggKGFjY2lkZW50YWxTdHJpY3RNb2RlKSB7XG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gXCJvYmplY3RcIikge1xuICAgIGdsb2JhbFRoaXMucmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbiAgfSBlbHNlIHtcbiAgICBGdW5jdGlvbihcInJcIiwgXCJyZWdlbmVyYXRvclJ1bnRpbWUgPSByXCIpKHJ1bnRpbWUpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n')},3:function(module,exports){eval('function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzP2M5NzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoaW5mby5kb25lKSB7XG4gICAgcmVzb2x2ZSh2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICB9XG59XG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcbiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBfYXN5bmNUb0dlbmVyYXRvciwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n')},72:function(module,exports,__webpack_require__){eval('var _typeof = __webpack_require__(0)["default"];\nfunction _regeneratorRuntime() {\n  "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = "function" == typeof Symbol ? Symbol : {},\n    a = i.iterator || "@@iterator",\n    c = i.asyncIterator || "@@asyncIterator",\n    u = i.toStringTag || "@@toStringTag";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, "");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, "_invoke", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: "normal",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: "throw",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = "suspendedStart",\n    l = "suspendedYield",\n    f = "executing",\n    s = "completed",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    ["next", "throw", "return"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if ("throw" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {\n          invoke("next", t, i, a);\n        }, function (t) {\n          invoke("throw", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke("throw", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, "_invoke", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error("Generator is already running");\n      if (o === s) {\n        if ("throw" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else "return" === n.method && n.abrupt("return", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if ("normal" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = "normal", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: "root"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || "" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if ("function" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + " is not iterable");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, "constructor", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {\n    var e = "function" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {\n    return this;\n  }), define(g, "toString", function () {\n    return "[object Generator]";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if ("throw" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if ("root" === i.tryLoc) return handle("end");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, "catchLoc"),\n            u = n.call(i, "finallyLoc");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error("try statement without catch or finally");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if ("throw" === t.type) throw t.arg;\n      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    "catch": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if ("throw" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error("illegal catch attempt");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, "next" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///72\n')},828:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJwYWNrL3NpdGUvY29tcG9uZW50cy9wZWVyLXJldmlldy1jb21wb25lbnQuc2Nzcz85NTEyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjgyOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///828\n")},832:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(3);\nvar asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(1);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n\n// CONCATENATED MODULE: ./src/main/webpack/components/peer-review/v1/peer-review-carousel.js\n\n\nvar peer_review_carousel_splunkADACarousel = function splunkADACarousel() {\n  var carouselId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var carouselElement = null;\n  var carouselIndex = 0;\n  var carouselNavigationElements = null;\n  var carouselSlideElements = null;\n  var interceptionOptions;\n  var interceptionObserver;\n  var carouselInterceptionObserver;\n  var slideTimer;\n  var slideTimerTime = 3000;\n  var autoScroll = false;\n  var galleryElement;\n  if (carouselId === '') return new Error('carouselId is empty, need a carouselId to initiate the script...');\n  var carouselInit = /*#__PURE__*/function () {\n    var _ref = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee() {\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (doesCarouselExist()) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\", new Error(\"Id provided for carousel doesn't exist, check if there's a typo\"));\n          case 2:\n            _context.next = 4;\n            return setUpElements();\n          case 4:\n            _context.next = 6;\n            return setUpNavigationButtons();\n          case 6:\n            _context.next = 8;\n            return setInitialState();\n          case 8:\n            _context.next = 10;\n            return setInterceptElements();\n          case 10:\n            carouselElement.getIndex = getIndex;\n            carouselElement.nextSlide = nextSlide;\n            carouselElement.prevSlide = prevSlide;\n            return _context.abrupt(\"return\", true);\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function carouselInit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var doesCarouselExist = function doesCarouselExist() {\n    carouselElement = document.querySelector(\"#\".concat(carouselId));\n    return carouselElement !== null;\n  };\n  var setUpElements = function setUpElements() {\n    carouselNavigationElements = carouselElement.querySelectorAll('.splunkADACarousel-navigation .splunkADACarousel-slideButtonContainer');\n    carouselSlideElements = carouselElement.querySelectorAll('.splunkADACarousel-gallery .splunkADACarousel-slideElement');\n    galleryElement = carouselElement.querySelector('.splunkADACarousel-gallery');\n    if (carouselNavigationElements === null || carouselSlideElements === null || galleryElement === null) return new Error('some elements in the html markup is missing...');\n\n    // autoScroll = (carouselElement.getAttribute('data-autoscroll') == 'true');\n\n    return true;\n  };\n  var setUpNavigationButtons = /*#__PURE__*/function () {\n    var _ref2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee2() {\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            carouselNavigationElements.forEach(function (navigationButton, buttonIndex) {\n              navigationButton.addEventListener('click', navigationEvent);\n            });\n            return _context2.abrupt(\"return\", true);\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function setUpNavigationButtons() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var navigationEvent = function navigationEvent(event) {\n    event.preventDefault();\n\n    //In case auto scroll is activated, we stop it\n    if (autoScroll) stopAutoSlide();\n\n    // in case we did an organic click (using the mouse pointer)\n    var mainElement = event.target.parentElement;\n\n    // if this comes form an automatic click\n    if (event.target.classList.contains('splunkADACarousel-slideButtonContainer')) {\n      mainElement = event.target;\n    }\n    carouselIndex = mainElement.getAttribute('data-slide-reference');\n    var elementToScrollTo = carouselElement.querySelector(\".splunkADACarousel-gallery .splunkADACarousel-slideElement[data-slide-index='\".concat(carouselIndex, \"']\"));\n    elementToScrollTo.scrollIntoView({\n      behavior: 'smooth',\n      block: 'nearest',\n      inline: 'start'\n    });\n  };\n  var setInitialState = /*#__PURE__*/function () {\n    var _ref3 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee3() {\n      return regenerator_default.a.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (autoScroll) {\n              carouselElement.addEventListener('focus', function (event) {\n                stopAutoSlide();\n              });\n              carouselElement.addEventListener('click', removeAutoSlideFromClick);\n            }\n            return _context3.abrupt(\"return\", true);\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function setInitialState() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var nextSlide = function nextSlide() {\n    if (carouselIndex < carouselNavigationElements.length - 1) {\n      carouselIndex++;\n      carouselSlideElements[carouselIndex].scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'start'\n      });\n    }\n  };\n  var prevSlide = function prevSlide() {\n    if (carouselIndex > 0) {\n      carouselIndex--;\n      carouselSlideElements[carouselIndex].scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'start'\n      });\n    }\n  };\n  var getIndex = function getIndex() {\n    return carouselIndex;\n  };\n  var clearAllActiveButtons = function clearAllActiveButtons() {\n    carouselNavigationElements.forEach(function (navigationButton) {\n      navigationButton.classList.remove('active');\n    });\n  };\n  var makeButtonActive = function makeButtonActive() {\n    var buttonElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    buttonElement.classList.add('active');\n  };\n  var setInterceptElements = /*#__PURE__*/function () {\n    var _ref4 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee4() {\n      return regenerator_default.a.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            interceptionOptions = {\n              root: carouselElement,\n              rootMargin: '0px',\n              threshold: 1.0\n            };\n            interceptionObserver = new IntersectionObserver(interceptionObserverFunction, interceptionOptions);\n            carouselElementsObserver();\n            if (autoScroll) {\n              interceptionOptionsIn = {\n                rootMargin: '0px',\n                threshold: 0.5\n              };\n              carouselInterceptionObserver = new IntersectionObserver(handleCarouselIntersection, interceptionOptionsIn);\n              carouselInterceptionObserver.observe(carouselElement);\n            }\n            return _context4.abrupt(\"return\", true);\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return function setInterceptElements() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var carouselElementsObserver = function carouselElementsObserver() {\n    var carouselGroupElements = carouselElement.querySelectorAll('.splunkADACarousel-gallery .splunkADACarousel-slideElement');\n    if (carouselGroupElements === null) return new Error(\"Didn't found any carousel elements...\");\n    carouselGroupElements.forEach(function (carouselElement) {\n      interceptionObserver.observe(carouselElement);\n    });\n  };\n  var interceptionObserverFunction = function interceptionObserverFunction(interceptEvent) {\n    interceptEvent.forEach(function (element) {\n      if (element.isIntersecting) {\n        var intersectingElementButton = carouselElement.querySelector(\".splunkADACarousel-navigation .splunkADACarousel-slideButtonContainer[data-slide-reference='\".concat(element.target.getAttribute('data-slide-index'), \"']\"));\n        clearAllActiveButtons();\n        makeButtonActive(intersectingElementButton);\n        carouselIndex = element.target.getAttribute('data-slide-index');\n      }\n    });\n  };\n  var handleCarouselIntersection = function handleCarouselIntersection(interceptEvent) {\n    interceptEvent.forEach(function (element) {\n      if (element.isIntersecting) startAutoSlide();else stopAutoSlide();\n    });\n  };\n  var startAutoSlide = function startAutoSlide() {\n    slideTimer = setInterval(autoScrollSlide, slideTimerTime);\n  };\n  var stopAutoSlide = function stopAutoSlide(interceptEvent) {\n    clearInterval(slideTimer);\n  };\n  var autoScrollSlide = function autoScrollSlide() {\n    if (carouselIndex < carouselNavigationElements.length - 1) {\n      nextSlide();\n    } else {\n      carouselSlideElements[0].scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'start'\n      });\n    }\n  };\n  var removeAutoSlideFromClick = function removeAutoSlideFromClick() {\n    stopAutoSlide();\n    carouselElement.removeEventListener('click', removeAutoSlideFromClick);\n  };\n  carouselInit();\n\n  // carouselElement.getIndex = getIndex;\n  // carouselElement.nextSlide = nextSlide;\n  // carouselElement.prevSlide = prevSlide;\n};\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  var peerReviewCarousels = document.querySelectorAll('.peer-review .splunkADACarousel');\n  peerReviewCarousels.forEach(function (peerCarousel) {\n    peer_review_carousel_splunkADACarousel(peerCarousel.getAttribute('id'));\n  });\n});\n// CONCATENATED MODULE: ./src/main/webpack/components/peer-review/v1/peer-review.js\n\n\nvar peer_review_splunkCustomerReviewComponent = function splunkCustomerReviewComponent() {\n  var customerReviewId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  if (customerReviewId === '') return new Error('need to provide an id for the customer review element...');\n  var customerReviewElement = document.querySelector(\"#\".concat(customerReviewId));\n  var customerReviewCardsList = null;\n  var cardInterceptionObserver = null;\n  var interceptionOptions = {\n    rootMargin: '0px',\n    threshold: 1.0\n  };\n  var isHomepage = window.location.pathname === \"/\" || window.location.pathname.includes('homepage');\n  var customerCardInit = /*#__PURE__*/function () {\n    var _ref = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee() {\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!(customerReviewElement === null)) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\", new Error(\"There seems that the element with the id \".concat(customerReviewId, \" is non existent on the page...\")));\n          case 2:\n            _context.next = 4;\n            return getCardList();\n          case 4:\n            _context.next = 6;\n            return setInterceptElements();\n          case 6:\n            _context.next = 8;\n            return processCardStarRating();\n          case 8:\n            _context.next = 10;\n            return processCardAnalytics();\n          case 10:\n            _context.next = 12;\n            return processCarouselAnalytics();\n          case 12:\n            return _context.abrupt(\"return\", true);\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function customerCardInit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getCardList = /*#__PURE__*/function () {\n    var _ref2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee2() {\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            customerReviewCardsList = customerReviewElement.querySelectorAll('.peer-review-card');\n            if (!(customerReviewCardsList.length === 0 || customerReviewCardsList === null)) {\n              _context2.next = 5;\n              break;\n            }\n            return _context2.abrupt(\"return\", new Error(\"Looks like this component doesn't have any cards...\"));\n          case 5:\n            return _context2.abrupt(\"return\", true);\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function getCardList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var interceptionObserverFunction = function interceptionObserverFunction(cardInterceptElement) {\n    cardInterceptElement.forEach(function (cardElement) {\n      if (cardElement.isIntersecting) {\n        cardElement.target.classList.add('reveal');\n        cardInterceptionObserver.unobserve(cardElement.target);\n      }\n    });\n  };\n  var setInterceptElements = /*#__PURE__*/function () {\n    var _ref3 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee3() {\n      return regenerator_default.a.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            cardInterceptionObserver = new IntersectionObserver(interceptionObserverFunction, interceptionOptions);\n            customerReviewCardsList.forEach(function (cardElement) {\n              cardInterceptionObserver.observe(cardElement);\n            });\n            return _context3.abrupt(\"return\", true);\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function setInterceptElements() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var processCardStarRating = /*#__PURE__*/function () {\n    var _ref4 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee4() {\n      return regenerator_default.a.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            customerReviewCardsList.forEach(function (cardElement) {\n              var starRatingElement = cardElement.querySelector('.review-header .reviewStarsContainer');\n              if (starRatingElement === null) return new Error(\"Weird, couldn't find the star rating section in this particular card, we need it...\");\n              starRatingElement.classList.add(processStarRatingClass(cardElement.getAttribute('data-star-rating')));\n              cardElement.classList.add('reveal'); // Adding the class to the card element to avoid interceptor observer to delay the cards value\n            });\n            return _context4.abrupt(\"return\", true);\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return function processCardStarRating() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var processStarRatingClass = function processStarRatingClass() {\n    var ratingNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    if (ratingNumber === null) return '';\n    var numberRating = parseFloat(ratingNumber);\n    var decimalNumber = Math.round(numberRating % 1 * 10);\n    var integerNumber = Math.floor(numberRating);\n    var finalNumber = 0;\n    if (decimalNumber <= 2) {\n      finalNumber = integerNumber;\n    } else if (decimalNumber > 2 && decimalNumber <= 5) {\n      finalNumber = integerNumber + .5;\n    } else if (decimalNumber > 5 && decimalNumber <= 9) {\n      finalNumber = integerNumber + 1;\n    }\n    var classProcess = {\n      0: 'zeroStars',\n      0.5: 'halfStars',\n      1.0: 'oneStars',\n      1.5: 'oneHalfStars',\n      2.0: 'twoStars',\n      2.5: 'twoHalfStars',\n      3.0: 'threeStars',\n      3.5: 'threeHalfStars',\n      4.0: 'fourStars',\n      4.5: 'fourHalfStars',\n      5.0: 'fiveStars'\n    };\n    return classProcess[finalNumber];\n  };\n  var processCardAnalytics = /*#__PURE__*/function () {\n    var _ref5 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee5() {\n      return regenerator_default.a.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            customerReviewCardsList.forEach(function (cardElement) {\n              processCardCTA(cardElement);\n            });\n            return _context5.abrupt(\"return\", true);\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return function processCardAnalytics() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var processCarouselAnalytics = /*#__PURE__*/function () {\n    var _ref6 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee6() {\n      var carouselDotsSection;\n      return regenerator_default.a.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            //Here we process the dots navigation in the carousel\n            carouselDotsSection = customerReviewElement.querySelectorAll('.splunkADACarousel-navigation .splunkADACarousel-slideButtonContainer');\n            carouselDotsSection.forEach(function (dotSection) {\n              processDot(dotSection);\n            });\n            return _context6.abrupt(\"return\", true);\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n    return function processCarouselAnalytics() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var processDot = function processDot() {\n    var dotElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    if (dotElement === '') return new Error(\"We failed to process the analytics of this carousel's dots navigation...\");\n    dotElement.addEventListener('click', carouselDotAnalyticsProcess);\n  };\n  var processCardCTA = /*#__PURE__*/function () {\n    var _ref7 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default.a.mark(function _callee7() {\n      var cardElement,\n        ctaAnchorElement,\n        _args7 = arguments;\n      return regenerator_default.a.wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            cardElement = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : '';\n            if (!(cardElement === '')) {\n              _context7.next = 3;\n              break;\n            }\n            return _context7.abrupt(\"return\", new Error(\"We failed to process the analytics of this card's CTA button...\"));\n          case 3:\n            ctaAnchorElement = cardElement.querySelector('.review-footer .review-CTA .splunk-btn');\n            if (!(ctaAnchorElement === null)) {\n              _context7.next = 6;\n              break;\n            }\n            return _context7.abrupt(\"return\", new Error(\"We failed to processthe analytics of this card's CTA button...\"));\n          case 6:\n            ctaAnchorElement.addEventListener('click', ctaAnalyticsProcess);\n            return _context7.abrupt(\"return\", true);\n          case 8:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    }));\n    return function processCardCTA() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var sanitizeAnalyticsHref = function sanitizeAnalyticsHref() {\n    var ctaHref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    // we need to check if this is an absolute or relative link\n    var urlPattern = /^https?:\\/\\//i;\n    var finalURL = null;\n    if (urlPattern.test(ctaHref)) {\n      finalURL = new URL(ctaHref);\n    } else {\n      finalURL = new URL(\"https://\".concat(window.location.hostname, \"/\").concat(ctaHref));\n    }\n    var linkPathName = finalURL.pathname;\n    if (linkPathName.includes('//')) {\n      linkPathName = linkPathName.replace('//', '/');\n    }\n    return \"\".concat(finalURL.hostname).concat(linkPathName);\n  };\n  var processAnalyticsLinkDomain = function processAnalyticsLinkDomain() {\n    var ctaHref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    // we need to check if this is an absolute or relative link\n    var urlPattern = /^https?:\\/\\//i;\n    var finalURL = null;\n    if (urlPattern.test(ctaHref)) {\n      finalURL = new URL(ctaHref);\n    } else {\n      finalURL = new URL(\"https://\".concat(window.location.hostname, \"/\").concat(ctaHref));\n    }\n    return \"\".concat(finalURL.hostname);\n  };\n  var processAnalyticsComponentName = function processAnalyticsComponentName() {\n    var ctaText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    if (ctaText === null || ctaText === '') return new Error(\"There's no text to process...\");\n    return ctaText.replaceAll(\" \", \"-\").toLowerCase();\n  };\n  var carouselDotAnalyticsProcess = function carouselDotAnalyticsProcess(event) {\n    var ctaElement = null;\n    ctaElement = event.currentTarget;\n    var slideNumber = event.currentTarget.getAttribute('data-slide-reference');\n\n    //GA4 DataLayer Push\n    window.dataLayer.push({\n      event: \"carousel_click\",\n      carousel_name: \"PeerReviewCarousel\",\n      event_action: \"Slide \".concat(slideNumber)\n    });\n  };\n  var ctaAnalyticsProcess = function ctaAnalyticsProcess(event) {\n    var ctaElement = null;\n    if (event.target.tagName === 'SPAN') ctaElement = event.target.parentElement;else ctaElement = event.target;\n    var homepageAnalitycsLocaleCode = document.querySelector('body').getAttribute('lang').toLocaleLowerCase();\n    var ctaHref = ctaElement.getAttribute('href');\n    var ctaText = ctaElement.innerText;\n    var analyticsComponentName = processAnalyticsComponentName(ctaText);\n    var eventName = 'link_click';\n    if (isHomepage) eventName = \"linkClick_hp\";\n    window.dataLayer.push({\n      event: \"linkClick\",\n      eventInfo: {\n        category: \"All clicks on CTA Text\",\n        eventLabel: \"\".concat(ctaText),\n        clickUrl: \"\".concat(window.location.hostname, \"/\").concat(homepageAnalitycsLocaleCode),\n        component: \"PeerReviewCard_\".concat(analyticsComponentName, \"_splunk-button\"),\n        componentName: \"splunk-button\",\n        container: \"PeerReviewCard\",\n        destinationUrl: sanitizeAnalyticsHref(ctaHref),\n        modernization: !0\n      }\n    });\n\n    //GA4 DataLayer Push\n    window.dataLayer.push({\n      event: \"\".concat(eventName),\n      link_text: \"\".concat(ctaText),\n      link_domain: processAnalyticsLinkDomain(ctaHref),\n      link_url: sanitizeAnalyticsHref(ctaHref),\n      link_position: 'PeerReviewCard'\n    });\n  };\n  customerCardInit();\n};\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  var peerReviewCompElements = document.querySelectorAll('.peer-review .splunkADACarousel');\n  peerReviewCompElements.forEach(function (peerReviewElement) {\n    peer_review_splunkCustomerReviewComponent(peerReviewElement.getAttribute('id'));\n  });\n});\n// EXTERNAL MODULE: ./src/main/webpack/site/components/peer-review-component.scss\nvar peer_review_component = __webpack_require__(828);\n\n// CONCATENATED MODULE: ./src/main/webpack/site/components/peer-review-component.ts\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///832\n")}});